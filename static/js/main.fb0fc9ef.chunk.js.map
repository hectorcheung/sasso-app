{"version":3,"sources":["Contexto.js","Home.js","images/fondo.jpg","observacion.js","firebase/firebase.js","tareas.js","consulta.js","apikeys.js","registrar.js","tipos.js","Login.js","profile.js","schedule.js","reporteDeTurno.js","minuta.js","App.js","serviceWorker.js","index.js"],"names":["Contexto","React","createContext","children","iniciado","sessionStorage","getItem","user","localStorage","useState","setUser","recordar","setRecordar","data","setData","data1","setdata1","data2","setdata2","areas","setAreas","reportData","setRepData","pagina","setPagina","window","innerWidth","width","setWidth","personal","j","userData","length","Nombre","push","key","text","value","color","categoria","activo","inactivo","texto","caption","short","gradient","cumple","contexto","colores","breakpoint","Provider","ExcelDateToJSDate","serial","utc_days","Math","floor","date_info","Date","fractional_day","total_seconds","seconds","hours","minutes","getFullYear","getMonth","getDate","FechaStringShort","fecha","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","Home","setData1","setData2","data3","setData3","setActiveMenu","filtros","setFiltros","estados","name","status","setStatus","grupoArea","setGrupoArea","area","setArea","setCategoria","activePeriod","setActPeriod","turno","setTurno","tipoReporte","setTipoReporte","tiposDeReportes","Array","from","_","index","rubros","categorias_idx","lista","i","title","today","inicioDeSemana","yesterday","setDate","wd","getDay","semana","turnos","periodos","useContext","setColores","handleSemana","anno","substring","mes","dia","d","weekday","sacardata","a","datas","creds","require","doc","GoogleSpreadsheet","useServiceAccountAuth","loadInfo","sheet","sheetsById","getRows","rows","columnCount","cols","headerValues","encabezado","lastr","loadCells","startRowIndex","endRowIndex","startColumnIndex","endColumnIndex","getCell","datas_areas","unique","Set","map","item","grupo","sort","unshift","forEach","x","findIndex","y","Area","Tipo","Incumple","total","arr1","filter","Reporte","FechaRecorrido","orden","reduce","r","o","get","Object","assign","set","Map","values","cumplimiento","isNaN","ceil","b","arr","HandleTurnos","e","target","id","valor","tipo","includes","reporte","periodo","cat","lugar","t","numTurno","slice","reporteFiltrado","next","Turno","parseInt","arr2","Categoria","SubCategoria","incumple","arr3","cuentaPorUsuario","Usuario","Id","self","useEffect","Dimmer","active","page","Loader","Segment","basic","Header","as","icon","content","Grid","textAlign","verticalAlign","Row","Button","Group","inverted","style","borderRadius","onClick","Or","columns","Column","size","fluid","Icon","idx","padding","backgroundImage","float","overflow","borderStyle","borderWidth","borderColor","margin","Table","selectable","fixed","Body","Cell","rowSpan","toString","fill","console","log","List","divided","Item","avatar","Content","height","marginLeft","marginRight","class","visibility","href","display","backgroundColor","opacity","className","marginTop","fontSize","toUpperCase","overflowY","Observacion","params","useParams","startDate","dd","mm","yyyy","hora","getHours","minutos","getMinutes","date","toISOString","ar","br","cr","dr","er","fr","gr","hr","ir","jr","kr","lr","mr","nr","or","pr","qr","rr","sr","tr","ur","vr","fecha_hora","nombre","rubro","observaciones","severidad","pac","fecha_cierre","responsable","anexo","confirmado","extension","nueva_fecha","detalle","anexo2","obsDetalle","persObservadas","aplica","personas","join","Container","Image","src","Description","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","auth","firestore","xltoDate","fechaStr","Tareas","myData","setMyData","myPac","setMyPac","activoID","setActivoID","totalPagina","setTotalPagina","setExtension","extDate","setExtDate","setDetalle","previewImg","saving","setSaving","preventDate","setPreventDate","pap","setpap","setImageAsFile","imgUrl","imageAsUrl","setImageAsUrl","setSubir","event","files","imageFile","reader","FileReader","preview","document","querySelector","onload","setAttribute","result","readAsDataURL","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","err","registrar","extendido","wr","xr","formula","saveUpdatedCells","alignItems","justifyContent","Pagination","defaultActivePage","ellipsisItem","firstItem","lastItem","prevItem","nextItem","totalPages","onPageChange","activePage","round","FechaString","Checkbox","disabled","label","checked","onChange","Input","type","defaultValue","Form","TextArea","detalle_pac","placeholder","alt","priceEls","querySelectorAll","innerText","click","iniciar","Consultas","dataFound","setDataFound","inicio","setInicio","final","setFinal","activeIndex","setActiveIndex","buscar","setBuscar","creador","setCreador","activeItem","setActiveItem","open","setOpen","keyA","keyB","Modal","onClose","onOpen","image","wrapped","observador","observado","Actions","Accordion","Title","titleProps","Label","Dropdown","multiple","search","selection","prevObject","Meta","Extra","Registros","dummyImg","setID","loading","setLoading","perfil","setPerfil","correo","setCorreo","step","setStep","setTipo","setCat","catData","setCatData","subCatData","setSubCatData","subCat","setSubCat","detalles","setDetalles","que","setQue","donde","setDonde","pacStep","setPacStep","involucrados","setInvolucrados","plan","setPlan","setStartDate","resp","setResp","segCat","useRef","segSubCat","setPreviewImg","imageAsFile","subir","guardar","setGuardar","confirmar","setConfirmar","setSeveridad","imgUpload","setImgUpload","history","useHistory","Blob","archivoSelect","error","ref","put","on","snapShot","child","getDownloadURL","then","fireBaseUrl","datas2","sheet2","rows2","handleTipoClick","current","focus","sacarAreas","datosUsuario","Perfil","datoResp","handleCatClick","handleStep","handleArea","UniqueID","now","addRow","Personas_Observadas","Detalle","Aplica","ids","notificar","codigo","templateParams","to_email","fecha_limite","qseb","observacion","imagen","registrado","emailjs","send","apiKeys","response","handleFireBaseUpload","header","actions","positive","labelPosition","Step","ordered","attached","unstackable","completed","Popup","trigger","circular","Ref","innerRef","Card","itemsPerRow","raised","ui","button","scrolling","clearable","handleImageUpload","Categorias","Login","password","setPassword","maxWidth","stacked","iconPosition","currentTarget","onChangeHandler","preventDefault","found","alert","login","Message","userInfo","floated","negative","removeItem","FechaStringLong","hour","minute","Schedule","persona","setPersona","setLugar","listaArea","setListaArea","setFecha","Fecha","delete","FechaProgramado","sleep","milliseconds","currentDate","ReporteDeTurno","reportes","setReportes","sinFiltro","setSinFiltro","setCheckList","cats","setCats","setRubros","activeRubro","setActRubro","requerimientos","setReq","activeReq","setActiveR","percentage","setPercentage","duplicado","setDuplicado","setTipoRep","existingItems","url","img","getElementById","archivo","uploadTask","sacarReportes","location","opcional","aplican","indexOf","uniqueID","FechaRegistro","PersonasObservadas","Imagen","handleCategorias","chklist","handleSubCat","handleCheck","chk","HandleTodos","handleOpcional","handleObservados","handleDetalles","handleWindowResize","addEventListener","removeEventListener","userArea","keys","toLowerCase","split","some","w","element","validar","Divider","secondary","filtro","Radio","left","floating","Acto","reqIdx","requerimiento","pointing","Progress","percent","indicating","success","progress","Minuta","stackable","App","visible","setVisible","basename","Add","Menu","Link","to","position","Sidebar","Pushable","animation","onHide","vertical","direction","Pusher","exact","path","render","props","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fb0fc9ef.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport userData from \"./employee.json\";\r\n\r\nexport const Contexto = React.createContext(null);\r\n\r\nexport default ({ children }) => {\r\n  let iniciado = null;\r\n  if (sessionStorage.getItem(\"user\")) {\r\n    iniciado = sessionStorage.user;\r\n  } else if (localStorage.getItem(\"user\")) {\r\n    iniciado = localStorage.user;\r\n  }\r\n  const [user, setUser] = useState(iniciado);\r\n  const [recordar, setRecordar] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [data1, setdata1] = useState();\r\n  const [data2, setdata2] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [reportData, setRepData] = useState();\r\n  const [pagina, setPagina] = useState();\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const personal = [];\r\n  for (var j = 0; j < userData.length; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  var breakpoint = 620;\r\n  const color = [\r\n    {\r\n      categoria: \"Calidad\",\r\n      activo: \"#FF5300\",\r\n      inactivo: \"#FF915C\",\r\n      texto: \"white\",\r\n      caption: \"Quality\",\r\n      short: \"Q\",\r\n      gradient: \"linear-gradient(to right,#fc4a1a,#f7b733)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Seguridad\",\r\n      activo: \"#5A0FC4\",\r\n      inactivo: \"#8857D1\",\r\n      texto: \"white\",\r\n      caption: \"Safety\",\r\n      short: \"S\",\r\n      gradient: \"linear-gradient(to right,#8E2DE2,#4A00E0)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Ambiente\",\r\n      activo: \"#00C37E\",\r\n      inactivo: \"#4ACFA0\",\r\n      texto: \"white\",\r\n      caption: \"Environment\",\r\n      short: \"E\",\r\n      gradient: \"linear-gradient(to right,#56ab2f,#a8e063)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Bioseguridad\",\r\n      activo: \"#FFE700\",\r\n      inactivo: \"#FFEF5C\",\r\n      texto: \"black\",\r\n      caption: \"BioS\",\r\n      short: \"B\",\r\n      gradient: \"linear-gradient(to right,#ffe259,#ffa751)\",\r\n      cumple: 100,\r\n    },\r\n  ];\r\n  const [colores, setColores] = useState(color);\r\n  const contexto = {\r\n    user: [user, setUser],\r\n    recordar: [recordar, setRecordar],\r\n    data: [data, setData],\r\n    areas: [areas, setAreas],\r\n    reportData: [reportData, setRepData],\r\n    personal: personal,\r\n    colores: [colores, setColores],\r\n    color: color,\r\n    pagina: [pagina, setPagina],\r\n    width: [width, setWidth],\r\n    data1: [data1, setdata1],\r\n    data2: [data2, setdata2],\r\n    breakpoint: breakpoint,\r\n    userData: userData,\r\n  };\r\n\r\n  return <Contexto.Provider value={contexto}>{children}</Contexto.Provider>;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Dimmer,\r\n  Loader,\r\n  Grid,\r\n  Header,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  Segment,\r\n  Menu,\r\n  List,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  LabelSeries,\r\n  Hint,\r\n  HorizontalBarSeries,\r\n  DiscreteColorLegend,\r\n  RadialChart,\r\n} from \"react-vis\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Home({ user }) {\r\n  const [data, setData] = useState();\r\n  const [data1, setData1] = useState(); // para detallar cada categoria\r\n  const [data2, setData2] = useState(); // para detallar cada categoria por area\r\n  const [data3, setData3] = useState(); // para detallar usuario que reportan\r\n  const [catId, setCatId] = useState();\r\n  const [detalleArea, setDArea] = useState();\r\n  const [activeMenu, setActiveMenu] = useState(\"ReporteT\");\r\n  const [hoy, setHoy] = useState();\r\n  const [ayer, setAyer] = useState();\r\n  const [mes, setMes] = useState();\r\n  const [filtros, setFiltros] = useState(false);\r\n  const [chartData, setChartData] = useState();\r\n  const [chartMes, setChartMes] = useState();\r\n  const [chartRubros, setChartRubros] = useState();\r\n  const [mesAnterior, setMesAnterior] = useState();\r\n  const [aplicable, setAplicable] = useState();\r\n  const [prueba, setPrueba] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [grupoArea, setGrupoArea] = useState();\r\n  const [area, setArea] = useState(\"Todas\");\r\n  const [categoria, setCategoria] = useState();\r\n  const [leyendaMes, setLeyendaMes] = useState();\r\n  const [leyenda, setLeyenda] = useState();\r\n  const [activeIndex, setActIdx] = useState();\r\n  const [activePeriod, setActPeriod] = useState(\"Esta Semana\");\r\n  const [turno, setTurno] = useState(\"Todos\");\r\n  const [tipoReporte, setTipoReporte] = useState(\"Reporte de Turno\");\r\n  //Fechas\r\n  //fechas estan erradas hay que corregir\r\n  const dias = Array.from({ length: 31 }, (_, index) => index + 1);\r\n  const meses = Array.from({ length: 12 }, (_, index) => index + 1);\r\n  const tiposDeReportes = [\"Reporte de Turno\", \"Reporte de Recorrido\"];\r\n  const rubros = [\"Seguridad\", \"Calidad\", \"Ambiental\", \"Bioseguridad\"];\r\n  const categorias_idx = [\"Q\", \"S\", \"E\", \"B\"];\r\n  const lista = [];\r\n  for (var i = 0; i < rubros.length; i++) {\r\n    lista.push({ title: rubros[i] });\r\n  }\r\n  let today = new Date();\r\n  let inicioDeSemana = new Date();\r\n  let yesterday = new Date(today);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  let wd = today.getDay();\r\n  wd === 0 ? (wd = 7) : (wd = wd);\r\n  //Fechas\r\n  const [dataSemana, setDS] = useState();\r\n  const [semana, setSemana] = useState(\r\n    FechaStringShort(inicioDeSemana.setDate(inicioDeSemana.getDate() - wd + 1))\r\n  );\r\n  const turnos = [\"Todos\", \"Turno 1\", \"Turno 2\", \"Turno 3\"];\r\n  const periodos = [\"Esta Semana\", \"Este Mes\", \"Hoy\", \"Ayer\", \"Seleccionar\"];\r\n  const [periodo, setPeriodo] = useState();\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const { color: color } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  function handleSemana(fecha) {\r\n    var anno = fecha.substring(0, 4);\r\n    var mes = fecha.substring(5, 7);\r\n    var dia = fecha.substring(8, 10);\r\n    var d = new Date(anno, mes - 1, dia);\r\n    let weekday = d.getDay();\r\n    weekday === 0 ? (weekday = 7) : (weekday = weekday);\r\n    d.setDate(d.getDate() - weekday + 1);\r\n    return FechaStringShort(d);\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    setStatus(estados[1].caption);\r\n    let data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    let sheet = doc.sheetsById[1249329599];\r\n    let rows = await sheet.getRows();\r\n    let cols = await sheet.columnCount;\r\n    let encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    //AREAS\r\n    sheet = doc.sheetsById[1705686078];\r\n    rows = await sheet.getRows();\r\n    cols = await sheet.columnCount;\r\n    encabezado = await sheet.headerValues;\r\n    let datas_areas = [];\r\n    lastr = rows.length + 1;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas_areas.push(data);\r\n    }\r\n    setAreas(datas_areas);\r\n    const unique = [...new Set(datas_areas.map((item) => item.grupo))];\r\n    unique.sort();\r\n    unique.unshift(\"Todas\");\r\n    setGrupoArea(unique);\r\n    //AREAS\r\n    datas.forEach((x) => {\r\n      x.grupo =\r\n        datas_areas[datas_areas.findIndex((y) => y.name === x.Area)].grupo;\r\n      x.short = colores[colores.findIndex((y) => y.categoria === x.Tipo)].short;\r\n      x.activo =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].activo;\r\n      x.inactivo =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].inactivo;\r\n      x.gradient =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].gradient;\r\n      x.caption =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].caption;\r\n      x.texto = colores[colores.findIndex((y) => y.categoria === x.Tipo)].texto;\r\n      if (x.Incumple === \"Y\") {\r\n        x.cumple = 0;\r\n      } else {\r\n        x.cumple = 1;\r\n      }\r\n      x.total = 1;\r\n    });\r\n    let arr1 = datas\r\n      .filter(\r\n        (item) =>\r\n          item.Reporte === tipoReporte &&\r\n          handleSemana(\r\n            FechaStringShort(ExcelDateToJSDate(item.FechaRecorrido))\r\n          ) == semana\r\n      )\r\n      .map(\r\n        ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        }) => ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        })\r\n      );\r\n\r\n    arr1.forEach((x) => {\r\n      x.categoria = x.Tipo;\r\n      delete x.Tipo;\r\n      x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n    });\r\n    arr1 = [\r\n      ...arr1\r\n        .reduce((r, o) => {\r\n          const key = o.categoria;\r\n          const item =\r\n            r.get(key) ||\r\n            Object.assign({}, o, {\r\n              cumple: 0,\r\n              total: 0,\r\n            });\r\n\r\n          item.cumple += o.cumple;\r\n          item.total += o.total;\r\n          return r.set(key, item);\r\n        }, new Map())\r\n        .values(),\r\n    ];\r\n    arr1.forEach((x) => {\r\n      var cumplimiento = isNaN(x.cumple / x.total)\r\n        ? \"-\"\r\n        : Math.ceil((x.cumple / x.total) * 100) + \"%\";\r\n      x.cumplimiento = cumplimiento;\r\n    });\r\n    arr1.sort((a, b) => a.orden - b.orden);\r\n\r\n    setData(datas);\r\n    let arr = [...colores];\r\n    arr.forEach((x) => {\r\n      let cumplimiento =\r\n        arr1.filter((item) => item.categoria === x.categoria).length != 0\r\n          ? arr1.filter((item) => item.categoria === x.categoria)[0]\r\n              .cumplimiento\r\n          : \"-\";\r\n      x.cumplimiento = cumplimiento;\r\n    });\r\n    setColores(arr);\r\n    setStatus();\r\n  };\r\n\r\n  function HandleTurnos(e) {\r\n    const { name, id } = e.target;\r\n    var valor = e.target.id;\r\n    var tipo = e.target.name;\r\n    if (!tipo) {\r\n      tipo = name;\r\n    }\r\n    if (!valor) {\r\n      valor = id;\r\n    }\r\n    if (!tipo) {\r\n      if (valor.includes(\"Reporte\")) {\r\n        tipo = \"Reporte\";\r\n      }\r\n    }\r\n    if (tipo) {\r\n      let reporte = tipoReporte;\r\n      let periodo = activePeriod;\r\n      let cat = categoria;\r\n      let lugar = area;\r\n      let t = turno;\r\n      let numTurno = t.slice(-1);\r\n      setCategoria();\r\n      if (tipo.includes(\"Turno\")) {\r\n        setTurno(valor);\r\n        numTurno = valor.slice(-1);\r\n        t = valor;\r\n      } else if (tipo.includes(\"Reporte\") | tipo.includes(\"clipboard\")) {\r\n        setActiveMenu(tipo);\r\n        setTipoReporte(valor);\r\n        reporte = valor;\r\n      } else if (tipo.includes(\"Area\")) {\r\n        setArea(valor);\r\n        lugar = valor;\r\n      } else if (tipo.includes(\"btn\")) {\r\n        setCategoria(valor);\r\n        cat = valor;\r\n      } else {\r\n        setActPeriod(valor);\r\n        periodo = valor;\r\n      }\r\n      const reporteFiltrado = data.filter(\r\n        (next) =>\r\n          next.Reporte === reporte &&\r\n          (periodo === \"Esta Semana\"\r\n            ? handleSemana(\r\n                FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n              ) == semana\r\n            : periodo === \"Este Mes\"\r\n            ? FechaStringShort(\r\n                ExcelDateToJSDate(next.FechaRecorrido)\r\n              ).substring(5, 7) === FechaStringShort(today).substring(5, 7)\r\n            : periodo === \"Hoy\"\r\n            ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n              FechaStringShort(today)\r\n            : periodo === \"Ayer\"\r\n            ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n              FechaStringShort(yesterday)\r\n            : true) &&\r\n          (reporte.includes(\"Turno\") && t !== \"Todos\"\r\n            ? next.Turno === parseInt(numTurno)\r\n            : true) &&\r\n          (lugar !== \"Todas\" ? next.grupo === lugar : true)\r\n      );\r\n      let arr1 = reporteFiltrado.map(\r\n        ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        }) => ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        })\r\n      );\r\n      arr1.forEach((x) => {\r\n        x.categoria = x.Tipo;\r\n        delete x.Tipo;\r\n        x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n      });\r\n      arr1 = [\r\n        ...arr1\r\n          .reduce((r, o) => {\r\n            const key = o.categoria;\r\n            const item =\r\n              r.get(key) ||\r\n              Object.assign({}, o, {\r\n                cumple: 0,\r\n                total: 0,\r\n              });\r\n\r\n            item.cumple += o.cumple;\r\n            item.total += o.total;\r\n            return r.set(key, item);\r\n          }, new Map())\r\n          .values(),\r\n      ];\r\n      arr1.forEach((x) => {\r\n        var cumplimiento = isNaN(x.cumple / x.total)\r\n          ? \"-\"\r\n          : Math.ceil((x.cumple / x.total) * 100) + \"%\";\r\n        x.cumplimiento = cumplimiento;\r\n      });\r\n      arr1.sort((a, b) => a.orden - b.orden);\r\n      let arr = [...colores];\r\n      arr.forEach((x) => {\r\n        let cumplimiento =\r\n          arr1.filter((item) => item.categoria === x.categoria).length != 0\r\n            ? arr1.filter((item) => item.categoria === x.categoria)[0]\r\n                .cumplimiento\r\n            : \"-\";\r\n        x.cumplimiento = cumplimiento;\r\n      });\r\n      setColores(arr);\r\n      if (tipo.includes(\"btn\") || cat) {\r\n        let arr2 = reporteFiltrado\r\n          .filter((item) => item.Tipo == valor && item.Incumple == \"Y\")\r\n          .map(\r\n            ({\r\n              Tipo,\r\n              Categoria,\r\n              SubCategoria,\r\n              Area,\r\n              short,\r\n              caption,\r\n              texto,\r\n              activo,\r\n              inactivo,\r\n              gradient,\r\n            }) => ({\r\n              Tipo,\r\n              Categoria,\r\n              SubCategoria,\r\n              Area,\r\n              short,\r\n              caption,\r\n              texto,\r\n              activo,\r\n              inactivo,\r\n              gradient,\r\n            })\r\n          );\r\n        arr2.forEach((x) => {\r\n          x.incumple = 1;\r\n          x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n        });\r\n        let arr3 = arr2.map(({ Area, ...remainingAttrs }) => remainingAttrs);\r\n        arr3 = [\r\n          ...arr3\r\n            .reduce((r, o) => {\r\n              const key = o.Tipo + \"-\" + o.Categoria;\r\n              const item =\r\n                r.get(key) ||\r\n                Object.assign({}, o, {\r\n                  incumple: 0,\r\n                });\r\n\r\n              item.incumple += o.incumple;\r\n              return r.set(key, item);\r\n            }, new Map())\r\n            .values(),\r\n        ];\r\n        arr2 = [\r\n          ...arr2\r\n            .reduce((r, o) => {\r\n              const key = o.Tipo + \"-\" + o.Categoria + \"-\" + o.SubCategoria;\r\n              const item =\r\n                r.get(key) ||\r\n                Object.assign({}, o, {\r\n                  incumple: 0,\r\n                });\r\n\r\n              item.incumple += o.incumple;\r\n              return r.set(key, item);\r\n            }, new Map())\r\n            .values(),\r\n        ];\r\n        arr3.sort((a, b) => b.incumple - a.incumple);\r\n        arr2.sort((a, b) => b.incumple - a.incumple);\r\n        setData1(arr3);\r\n        setData2(arr2);\r\n      }\r\n      let registrosPorUsuario = reporteFiltrado.map(\r\n        ({\r\n          Tipo,\r\n          Usuario,\r\n          Id,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n          Reporte,\r\n        }) => ({\r\n          Tipo,\r\n          Usuario,\r\n          Id,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n          Reporte,\r\n        })\r\n      );\r\n      let cuentaPorUsuario = registrosPorUsuario.map(\r\n        ({ Usuario, Id, Reporte }) => ({\r\n          Usuario,\r\n          Id,\r\n          Reporte,\r\n        })\r\n      );\r\n      cuentaPorUsuario = cuentaPorUsuario.filter(\r\n        (value, index, self) =>\r\n          index ===\r\n          self.findIndex(\r\n            (t) =>\r\n              t.Usuario === value.Usuario &&\r\n              t.Id === value.Id &&\r\n              t.Reporte === value.Reporte\r\n          )\r\n      );\r\n      setData3(cuentaPorUsuario);\r\n    }\r\n  }\r\n  const arr = [\"Q\", \"S\", \"E\", \"B\"];\r\n  const arr1 = [\"Top\", \"Status\", \"Cumplimiento\"];\r\n  const filtros2 = [\"Tipo\", \"Fecha\", \"Area\", \"Turno\"];\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dimmer\r\n        active={\r\n          status || estados.filter((x) => x.caption === status).length != 0\r\n        }\r\n        page\r\n      >\r\n        <Loader>{status}</Loader>\r\n      </Dimmer>\r\n      {width <= breakpoint ? (\r\n        <>\r\n          <Segment basic>\r\n            <Header as=\"h2\" icon=\"dashboard\" color=\"red\" content=\"Dashboard\" />\r\n          </Segment>\r\n\r\n          <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n            <Grid.Row>\r\n              <Header>\r\n                <Button.Group>\r\n                  <Button\r\n                    id=\"Reporte de Turno\"\r\n                    color=\"red\"\r\n                    name=\"ReporteT\"\r\n                    inverted={tipoReporte !== \"Reporte de Turno\"}\r\n                    style={{ borderRadius: \"15px\" }}\r\n                    onClick={HandleTurnos}\r\n                  >\r\n                    Reporte de Turno\r\n                  </Button>\r\n                  <Button.Or color=\"red\" text={\"o\"} />\r\n                  <Button\r\n                    id=\"Reporte de Recorrido\"\r\n                    color=\"red\"\r\n                    name=\"ReporteR\"\r\n                    inverted={tipoReporte !== \"Reporte de Recorrido\"}\r\n                    style={{ borderRadius: \"15px\" }}\r\n                    onClick={HandleTurnos}\r\n                  >\r\n                    Reporte de Recorrido\r\n                  </Button>\r\n                </Button.Group>\r\n              </Header>\r\n            </Grid.Row>\r\n            <Grid.Row columns={4}>\r\n              <Grid.Column>\r\n                <Button\r\n                  size=\"mini\"\r\n                  basic\r\n                  style={{ borderRadius: \"15px\" }}\r\n                  fluid\r\n                  onClick={() => {\r\n                    filtros ? setFiltros(false) : setFiltros(true);\r\n                  }}\r\n                >\r\n                  <Icon name=\"arrow down\"></Icon> Filtros\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column></Grid.Column>\r\n              <Grid.Column></Grid.Column>\r\n              <Grid.Column></Grid.Column>\r\n            </Grid.Row>\r\n            {filtros && (\r\n              <>\r\n                <b>Periodo</b>\r\n                <Grid.Row>\r\n                  {periodos.map((x, idx) => {\r\n                    return (\r\n                      <Grid.Column width={4} style={{ padding: \"2px\" }}>\r\n                        <Button\r\n                          size=\"tiny\"\r\n                          color=\"red\"\r\n                          inverted\r\n                          content={x}\r\n                          name={\"Periodo\" + idx}\r\n                          id={x}\r\n                          active={activePeriod === x}\r\n                          fluid\r\n                          style={{ borderRadius: \"15px\" }}\r\n                          onClick={HandleTurnos}\r\n                        />\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n                <b>Area</b>\r\n                <Grid.Row>\r\n                  {grupoArea.map((x, idx) => {\r\n                    return (\r\n                      <Grid.Column width={5} style={{ padding: \"2px\" }}>\r\n                        <Button\r\n                          size=\"tiny\"\r\n                          color=\"red\"\r\n                          inverted\r\n                          content={x}\r\n                          name={\"Area\" + idx}\r\n                          id={x}\r\n                          active={area === x}\r\n                          fluid\r\n                          style={{ borderRadius: \"15px\" }}\r\n                          onClick={HandleTurnos}\r\n                        />\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n                {tipoReporte === \"Reporte de Turno\" && <b>Turno</b>}\r\n                <Grid.Row columns=\"equal\">\r\n                  {tipoReporte === \"Reporte de Turno\" &&\r\n                    turnos.map((x, idx) => {\r\n                      return (\r\n                        <Grid.Column>\r\n                          <Button\r\n                            size=\"small\"\r\n                            color=\"red\"\r\n                            inverted\r\n                            content={x}\r\n                            name={\"Turno\" + idx}\r\n                            id={x}\r\n                            active={turno === x}\r\n                            fluid\r\n                            style={{ borderRadius: \"15px\" }}\r\n                            onClick={HandleTurnos}\r\n                          />\r\n                        </Grid.Column>\r\n                      );\r\n                    })}\r\n                </Grid.Row>\r\n              </>\r\n            )}\r\n            {width <= breakpoint && data && (\r\n              <Grid.Row columns={2}>\r\n                {colores.map((x, idx) => {\r\n                  if (idx < 2) {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Button\r\n                          id={x.categoria}\r\n                          name={\"btn\" + x.short}\r\n                          onClick={HandleTurnos}\r\n                          fluid\r\n                          style={{\r\n                            backgroundImage: x.gradient,\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          <h1\r\n                            id={x.categoria}\r\n                            name={\"btn_title\" + x.short}\r\n                            style={{\r\n                              color: x.texto,\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {x.cumplimiento}\r\n                          </h1>\r\n                          <p\r\n                            id={x.categoria}\r\n                            name={\"btn_text\" + x.short}\r\n                            style={{\r\n                              color: x.texto,\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {x.categoria}\r\n                          </p>\r\n                        </Button>\r\n                      </Grid.Column>\r\n                    );\r\n                  }\r\n                })}\r\n              </Grid.Row>\r\n            )}\r\n            {width <= breakpoint && data && (\r\n              <Grid.Row columns={2}>\r\n                {colores.map((x, idx) => {\r\n                  if (idx >= 2) {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Button\r\n                          id={x.categoria}\r\n                          name={\"btn\" + x.short}\r\n                          onClick={HandleTurnos}\r\n                          fluid\r\n                          style={{\r\n                            backgroundImage: x.gradient,\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          <h1\r\n                            id={x.categoria}\r\n                            name={\"btn_title\" + x.short}\r\n                            style={{\r\n                              color: x.texto,\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {x.cumplimiento}\r\n                          </h1>\r\n                          <p\r\n                            id={x.categoria}\r\n                            name={\"btn_text\" + x.short}\r\n                            style={{\r\n                              color: x.texto,\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {x.categoria}\r\n                          </p>\r\n                        </Button>\r\n                      </Grid.Column>\r\n                    );\r\n                  }\r\n                })}\r\n              </Grid.Row>\r\n            )}\r\n            {data && (\r\n              <div style={{ width: \"100%\" }}>\r\n                {colores.map((x, idx) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        float: \"left\",\r\n                        width: width <= breakpoint ? \"50%\" : \"25%\",\r\n                        padding: \"10px\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        id={x.categoria}\r\n                        name={\"btn\" + x.short}\r\n                        onClick={HandleTurnos}\r\n                        fluid\r\n                        style={{\r\n                          backgroundImage: x.gradient,\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        <h1\r\n                          id={x.categoria}\r\n                          name={\"btn_title\" + x.short}\r\n                          style={{\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          {x.cumplimiento}\r\n                        </h1>\r\n                        <p\r\n                          id={x.categoria}\r\n                          name={\"btn_text\" + x.short}\r\n                          style={{\r\n                            overflow: \"hidden\",\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          {x.categoria}\r\n                        </p>\r\n                      </Button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n            {width > breakpoint && data && (\r\n              <Grid.Row columns={4}>\r\n                {colores.map((x, idx) => {\r\n                  return (\r\n                    <Grid.Column>\r\n                      <Button\r\n                        id={x.categoria}\r\n                        name={\"btn\" + x.short}\r\n                        onClick={HandleTurnos}\r\n                        fluid\r\n                        style={{\r\n                          backgroundImage: x.gradient,\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        <h1\r\n                          id={x.categoria}\r\n                          name={\"btn_title\" + x.short}\r\n                          style={{\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          {x.cumplimiento}\r\n                        </h1>\r\n                        <p\r\n                          id={x.categoria}\r\n                          name={\"btn_text\" + x.short}\r\n                          style={{\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          {x.categoria}\r\n                        </p>\r\n                      </Button>\r\n                    </Grid.Column>\r\n                  );\r\n                })}\r\n              </Grid.Row>\r\n            )}\r\n          </Grid>\r\n          <br />\r\n          {categoria && data1.filter((x) => x.Tipo === categoria).length != 0 && (\r\n            <Segment\r\n              basic\r\n              style={{\r\n                borderStyle: \"solid\",\r\n                borderWidth: \"2px\",\r\n                borderColor: data1[0].inactivo,\r\n                borderRadius: \"15px\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Grid>\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    {data1 && data2 && <Header as=\"h1\">{categoria}</Header>}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row columns={1} padding>\r\n                  <Grid.Column>\r\n                    {categoria === \"Bioseguridad\" &&\r\n                      data2.filter((x) => x.Tipo === categoria).length != 0 && (\r\n                        <Table selectable fixed>\r\n                          <Table.Body>\r\n                            <Table.Row>\r\n                              <Table.Cell\r\n                                rowSpan={data2\r\n                                  .filter((x) => x.Tipo === categoria)\r\n                                  .length.toString()}\r\n                              >\r\n                                <Header as=\"h2\">Bioseguridad</Header>\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {\r\n                                  data2.filter((x) => x.Tipo === categoria)[0]\r\n                                    .SubCategoria\r\n                                }\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {data2.filter((x) => x.Tipo === categoria)[0]\r\n                                  .incumple &&\r\n                                  Array(\r\n                                    data2.filter((x) => x.Tipo === categoria)[0]\r\n                                      .incumple\r\n                                  )\r\n                                    .fill(0)\r\n                                    .map((_, i) => (\r\n                                      <Icon name=\"x\" color=\"red\"></Icon>\r\n                                    ))}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                            {data2\r\n                              .filter((x) => x.Tipo === categoria)\r\n                              .map((x, idx) => {\r\n                                if (idx > 0) {\r\n                                  return (\r\n                                    <Table.Row>\r\n                                      <Table.Cell>{x.SubCategoria}</Table.Cell>\r\n                                      <Table.Cell>\r\n                                        {x.incumple &&\r\n                                          Array(x.incumple)\r\n                                            .fill(0)\r\n                                            .map((_, i) => (\r\n                                              <Icon name=\"x\" color=\"red\"></Icon>\r\n                                            ))}\r\n                                      </Table.Cell>\r\n                                    </Table.Row>\r\n                                  );\r\n                                }\r\n                              })}\r\n                          </Table.Body>\r\n                        </Table>\r\n                      )}\r\n                    {data1 && categoria !== \"Bioseguridad\" && (\r\n                      <Table fixed selectable>\r\n                        <Table.Body>\r\n                          {data1 &&\r\n                            categoria !== \"Bioseguridad\" &&\r\n                            data1.map((x) => {\r\n                              return (\r\n                                <>\r\n                                  <Table.Row\r\n                                    onClick={() => {\r\n                                      console.log(data2);\r\n                                    }}\r\n                                  >\r\n                                    <Table.Cell>\r\n                                      <Header as=\"h2\">{x.Categoria}</Header>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>\r\n                                      {x.incumple &&\r\n                                        Array(x.incumple)\r\n                                          .fill(0)\r\n                                          .map((_, i) => (\r\n                                            <Icon name=\"x\" color=\"red\"></Icon>\r\n                                          ))}\r\n                                    </Table.Cell>\r\n                                  </Table.Row>\r\n                                </>\r\n                              );\r\n                            })}\r\n                        </Table.Body>\r\n                      </Table>\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Segment>\r\n          )}\r\n          {data3 && data3.length > 0 && (\r\n            <Segment>\r\n              <Header>Registros por Usuario</Header>\r\n              <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                {[\r\n                  ...new Map(\r\n                    data3.map((item) => [item[\"Usuario\"], item])\r\n                  ).values(),\r\n                ].map((x) => {\r\n                  return (\r\n                    <List.Item>\r\n                      <Icon avatar name=\"user circle outline\" size=\"big\" />\r\n                      <List.Content>{x.Usuario}</List.Content>\r\n                      <List.Content>\r\n                        {tipoReporte}:{\" \"}\r\n                        {\r\n                          data3.filter(\r\n                            (item) =>\r\n                              item.Usuario === x.Usuario &&\r\n                              item.Reporte === tipoReporte\r\n                          ).length\r\n                        }\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Segment>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div style={{ width: \"100%\", height: \"100%\" }}>\r\n          <div\r\n            style={{\r\n              width: \"98%\",\r\n              marginLeft: \"1%\",\r\n              marginRight: \"1%\",\r\n              padding: \"1%\",\r\n              height: \"10%\",\r\n            }}\r\n          >\r\n            <Header as=\"h2\" icon=\"dashboard\" color=\"red\" content=\"Dashboard\" />\r\n          </div>\r\n          <div\r\n            style={{\r\n              float: \"left\",\r\n              width: \"64.5%\",\r\n              marginLeft: \"1%\",\r\n              marginRight: \"0.5%\",\r\n              height: \"90%\",\r\n            }}\r\n          >\r\n            <div style={{ width: \"100%\", height: \"33%\" }}>\r\n              {filtros2.map((x) => {\r\n                return (\r\n                  <div\r\n                    class=\"dropdown\"\r\n                    style={{\r\n                      visibility:\r\n                        x === \"Turno\" && tipoReporte === \"Reporte de Recorrido\"\r\n                          ? \"hidden\"\r\n                          : \"\",\r\n                    }}\r\n                  >\r\n                    <button class=\"dropbtn\">\r\n                      {x === \"Fecha\"\r\n                        ? activePeriod === \"Seleccionar\"\r\n                          ? x\r\n                          : activePeriod\r\n                        : x === \"Area\"\r\n                        ? area !== \"Todas\"\r\n                          ? area\r\n                          : \"Areas - Todas\"\r\n                        : x === \"Turno\"\r\n                        ? turno === \"Todos\"\r\n                          ? \"Turno - Todos\"\r\n                          : turno\r\n                        : x === \"Tipo\"\r\n                        ? tipoReporte\r\n                        : \"\"}\r\n                    </button>\r\n                    <div class=\"dropdown-content\">\r\n                      {x === \"Tipo\" &&\r\n                        tiposDeReportes.map((y, idx) => {\r\n                          return (\r\n                            <a\r\n                              href=\"#\"\r\n                              name={idx === 0 ? \"ReporteT\" : \"ReporteR\"}\r\n                              id={y}\r\n                              onClick={HandleTurnos}\r\n                            >\r\n                              {y}\r\n                            </a>\r\n                          );\r\n                        })}\r\n                      {x === \"Fecha\" &&\r\n                        periodos.map((y, idx) => {\r\n                          return (\r\n                            <a\r\n                              href=\"#\"\r\n                              name={\"Periodo\" + idx}\r\n                              id={y}\r\n                              onClick={HandleTurnos}\r\n                            >\r\n                              {y}\r\n                            </a>\r\n                          );\r\n                        })}\r\n                      {x === \"Area\" &&\r\n                        grupoArea &&\r\n                        grupoArea.map((y, idx) => {\r\n                          return (\r\n                            <a\r\n                              href=\"#\"\r\n                              name={\"Area\" + idx}\r\n                              id={y}\r\n                              onClick={HandleTurnos}\r\n                            >\r\n                              {y}\r\n                            </a>\r\n                          );\r\n                        })}\r\n                      {x === \"Turno\" &&\r\n                        turnos &&\r\n                        turnos.map((y, idx) => {\r\n                          return (\r\n                            <a\r\n                              href=\"#\"\r\n                              name={\"Turno\" + idx}\r\n                              id={y}\r\n                              onClick={HandleTurnos}\r\n                            >\r\n                              {y}\r\n                            </a>\r\n                          );\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {color.map((x) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      width: \"23%\",\r\n                      backgroundImage: x.gradient,\r\n                      height: \"58%\",\r\n                      margin: \"1%\",\r\n                      padding: \"1.5%\",\r\n                      borderRadius: \"5%\",\r\n                      display: \"inline-block\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <h1\r\n                      style={{\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        color: x.texto,\r\n                      }}\r\n                    >\r\n                      {colores\r\n                        ? colores[\r\n                            colores.findIndex(\r\n                              (y) => y.categoria === x.categoria\r\n                            )\r\n                          ].cumplimiento\r\n                        : \"-\"}\r\n                    </h1>\r\n                    <h2\r\n                      style={{\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        color: x.texto,\r\n                      }}\r\n                    >\r\n                      {x.categoria}\r\n                    </h2>\r\n                  </div>\r\n                );\r\n              })}\r\n              {color.map((x) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      width: \"23%\",\r\n                      backgroundColor:\r\n                        categoria === x.categoria ? x.activo : x.inactivo,\r\n                      color: x.texto,\r\n                      opacity: categoria === x.categoria ? \"1\" : \"0.5\",\r\n                      height: \"15%\",\r\n                      marginLeft: \"1%\",\r\n                      marginRight: \"1%\",\r\n                      padding: \"1%\",\r\n                      borderRadius: \"5%\",\r\n                      textAlign: \"center\",\r\n                      display: \"inline-block\",\r\n                    }}\r\n                  >\r\n                    <a\r\n                      className=\"categoria\"\r\n                      id={x.categoria}\r\n                      name={\"btn\" + x.short}\r\n                      onClick={HandleTurnos}\r\n                      href=\"#\"\r\n                      style={{ color: x.texto, width: \"100%\" }}\r\n                    >\r\n                      Detalle\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                console.log(data1, data2, data3);\r\n              }}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"66%\",\r\n                marginTop: \"1%\",\r\n                backgroundColor: \"rgba(192 , 192, 192, 0.2)\",\r\n                borderRadius: \"2%\",\r\n                padding: \"1.5%\",\r\n              }}\r\n            >\r\n              {categoria && (\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"10%\",\r\n                    padding: \"1.5%\",\r\n                    fontSize: \"100%\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  {categoria.toUpperCase()}\r\n                </div>\r\n              )}\r\n              <div\r\n                style={{\r\n                  height: \"89%\",\r\n                  marginTop: \"1%\",\r\n                  width: \"100%\",\r\n                  backgroundColor: \"white\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                {data2 &&\r\n                  data2.map((x) => {\r\n                    return (\r\n                      <div className=\"rubros\">\r\n                        <div className=\"nombres\">\r\n                          <p className=\"texto\">\r\n                            {x.SubCategoria}{\" \"}\r\n                            {Array(x.incumple)\r\n                              .fill(0)\r\n                              .map((_, i) => {\r\n                                return <Icon name=\"x\" color=\"red\"></Icon>;\r\n                              })}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              float: \"left\",\r\n              width: \"32.5%\",\r\n              marginLeft: \"0.5%\",\r\n              marginRight: \"1%\",\r\n              height: \"90%\",\r\n              padding: \"1%\",\r\n              borderRadius: \"2%\",\r\n              backgroundColor: \"rgba(192 , 192, 192, 0.2)\",\r\n            }}\r\n          >\r\n            <div className=\"bloqArriba\">\r\n              <Header style={{ padding: \"1%\", height: \"15%\" }}>\r\n                Registros por Usuarios <Icon name=\"user\"></Icon>\r\n              </Header>\r\n              <div className=\"datosUsuarios\">\r\n                {data3 &&\r\n                  [\r\n                    ...new Map(\r\n                      data3.map((item) => [item[\"Usuario\"], item])\r\n                    ).values(),\r\n                  ].map((x) => {\r\n                    return (\r\n                      <div className=\"cartaUsuario\">\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {x.Usuario}{\" \"}\r\n                          {\r\n                            data3.filter(\r\n                              (item) =>\r\n                                item.Usuario === x.Usuario &&\r\n                                item.Reporte === tipoReporte\r\n                            ).length\r\n                          }\r\n                        </div>\r\n                        <div className=\"reportes\">\r\n                          {data3\r\n                            .filter((y) => y.Usuario === x.Usuario)\r\n                            .map((y, idx) => {\r\n                              return (\r\n                                <a\r\n                                  href=\"#\"\r\n                                  id={idx + \"id\"}\r\n                                  onClick={HandleTurnos}\r\n                                >\r\n                                  {y.Id}\r\n                                </a>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div className=\"bloqAbajo\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/fondo.bff34455.jpg\";","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Card,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Observacion({ user }) {\r\n  let params = useParams();\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas = datas.filter((item) => {\r\n      return item.id === params.id;\r\n    });\r\n\r\n    if (datas.length > 1) {\r\n      var personas = datas.map((e) => e.persObservadas).join(\", \");\r\n      console.log(personas);\r\n      datas[0].persObservadas = personas;\r\n      datas = datas.slice(0, 1);\r\n    }\r\n\r\n    setData(datas);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    console.log(params);\r\n    !data && sacardata();\r\n    data && console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {data && (\r\n        <Segment\r\n          onClick={() => {\r\n            console.log(data);\r\n          }}\r\n        >\r\n          <Item>\r\n            <Item.Image size=\"medium\" src={data[0].anexo} />\r\n\r\n            <Item.Content>\r\n              <Item.Header as=\"h2\">\r\n                {data[0].rubro + \" - \" + data[0].categoria}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                <p>\r\n                  <b>Detalle: </b> {data[0].observaciones}\r\n                  {data[0].obsDetalle && \" : \" + data[0].obsDetalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(data[0].fecha).toISOString().slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {data[0].area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {data[0].nombre}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {data[0].persObservadas}\r\n                </p>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Observacion;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD2qP-hydl9iaoxa0FO07FG5KDu9d3bGuA\",\r\n  authDomain: \"sasso-test-285920.firebaseapp.com\",\r\n  databaseURL: \"https://sasso-test-285920.firebaseio.com\",\r\n  projectId: \"sasso-test-285920\",\r\n  storageBucket: \"sasso-test-285920.appspot.com\",\r\n  messagingSenderId: \"191632707331\",\r\n  appId: \"1:191632707331:web:954ff5c5c38d8dcae4e336\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst getUserDocument = async (uid) => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching user\", error);\r\n  }\r\n};\r\nconst generateUserDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n  if (!snapshot.exists) {\r\n    const { Nombre, Correo, Apellido } = user;\r\n    try {\r\n      await userRef.set({\r\n        Nombre,\r\n        Correo,\r\n        Apellido,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user document\", error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\nexport {\r\n  storage,\r\n  auth,\r\n  firestore,\r\n  generateUserDocument,\r\n  getUserDocument,\r\n  firebase as default,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Statistic,\r\n  Divider,\r\n  Dimmer,\r\n  Loader,\r\n  Pagination,\r\n  Card,\r\n  Label,\r\n  Checkbox,\r\n  TextArea,\r\n  List,\r\n  Header,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${da}-${mo}-${ye}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction xltoDate(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo}-${da}`;\r\n  if (mo < 10) {\r\n    fechaStr = `${ye}-0${mo}-${da}`;\r\n  }\r\n\r\n  return fechaStr;\r\n}\r\n\r\nfunction Tareas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [data, setData] = useState(\"\");\r\n  const [myData, setMyData] = useState(\"\");\r\n  const [myPac, setMyPac] = useState(\"\");\r\n  const [activoID, setActivoID] = useState(\"\");\r\n  const [pagina, setPagina] = useState(1);\r\n  const [totalPagina, setTotalPagina] = useState(0);\r\n  const [extension, setExtension] = useState(\"N\");\r\n  const [extDate, setExtDate] = useState(date);\r\n  const [detalle, setDetalle] = useState(\"\");\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [saving, setSaving] = useState(false);\r\n  const [preventDate, setPreventDate] = useState(date);\r\n  const [pap, setpap] = useState(\"\");\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      reader.onload = function (e) {\r\n        preview.setAttribute(\"src\", e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      preview = document.querySelector(\"#blah\");\r\n      preview.setAttribute(\"src\", \"\");\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  const handleFireBaseUpload = (e) => {\r\n    if (subir) {\r\n      e.preventDefault();\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      }\r\n      const uploadTask = storage\r\n        .ref(`/images/${imageAsFile.name}`)\r\n        .put(imageAsFile);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapShot) => {\r\n          //takes a snap shot of the process as it is happening\r\n          console.log(snapShot);\r\n        },\r\n        (err) => {\r\n          //catches the errors\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          // gets the functions from storage refences the image storage in firebase by the children\r\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n          storage\r\n            .ref(\"images\")\r\n            .child(imageAsFile.name)\r\n            .getDownloadURL()\r\n            .then((fireBaseUrl) => {\r\n              setImageAsUrl((prevObject) => ({\r\n                ...prevObject,\r\n                imgUrl: fireBaseUrl,\r\n              }));\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.responsable === user;\r\n      })\r\n    );\r\n    setMyPac(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      })\r\n    );\r\n    setTotalPagina(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      }).length\r\n    );\r\n    try {\r\n      setActivoID(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].id\r\n      );\r\n      setExtension(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].extension\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setSaving(true);\r\n    let extendido = extension;\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (sheet.getCell(j, 18).value === activoID) {\r\n        const mr = sheet.getCell(j, 12);\r\n        const or = sheet.getCell(j, 14);\r\n        const pr = sheet.getCell(j, 15);\r\n        const qr = sheet.getCell(j, 16);\r\n        const rr = sheet.getCell(j, 17);\r\n        const wr = sheet.getCell(j, 22);\r\n        const xr = sheet.getCell(j, 23);\r\n        mr.value = \"Pendiente Aprobacion\";\r\n        or.value = extendido;\r\n        if (extDate) {\r\n          pr.formula =\r\n            \"=date(\" +\r\n            extDate.substring(0, 4) +\r\n            \",\" +\r\n            extDate.substring(5, 7) +\r\n            \",\" +\r\n            extDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (pap) {\r\n          wr.value = pap;\r\n        }\r\n        if (preventDate) {\r\n          xr.formula =\r\n            \"=date(\" +\r\n            preventDate.substring(0, 4) +\r\n            \",\" +\r\n            preventDate.substring(5, 7) +\r\n            \",\" +\r\n            preventDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (detalle) {\r\n          qr.value = detalle;\r\n        }\r\n        if (imageAsUrl.imgUrl) {\r\n          rr.value = imageAsUrl.imgUrl;\r\n        }\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n    setSaving(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container>\r\n      <Dimmer active={!data || saving} page>\r\n        <Loader>{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      {user ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Pagination\r\n              defaultActivePage={1}\r\n              ellipsisItem={{\r\n                content: <Icon name=\"ellipsis horizontal\" />,\r\n                icon: true,\r\n              }}\r\n              firstItem={{\r\n                content: <Icon name=\"angle double left\" />,\r\n                icon: true,\r\n              }}\r\n              lastItem={{\r\n                content: <Icon name=\"angle double right\" />,\r\n                icon: true,\r\n              }}\r\n              prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\r\n              nextItem={{ content: <Icon name=\"angle right\" />, icon: true }}\r\n              totalPages={totalPagina}\r\n              onPageChange={(e, { activePage }) => {\r\n                setPagina(activePage);\r\n                setActivoID(myPac[activePage - 1].id);\r\n                setSubir(false);\r\n                setImageAsUrl(\"\");\r\n                setImageAsFile(\"\");\r\n                setExtension(myPac[activePage - 1].extension);\r\n                setExtension(date);\r\n                var preview = document.querySelector(\"#blah\");\r\n                preview.setAttribute(\"src\", \"\");\r\n                var archivoSelect = document.querySelector(\"#anexoImg\");\r\n                archivoSelect.value = \"\";\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <Segment>\r\n            <Header>Tareas</Header>\r\n            <List>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" />\r\n                <List.Content>\r\n                  <b>{myData.length} Acciones Totales</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"red\" />\r\n                <List.Content>\r\n                  <b>{myPac.length} Acciones Pendientes</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"green\" />\r\n                <List.Content>\r\n                  <b>\r\n                    {100 - Math.round((myPac.length / myData.length) * 100, 2)}{\" \"}\r\n                    % completada\r\n                  </b>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Segment>\r\n          <Segment\r\n            style={{\r\n              height: \"60vh\",\r\n              overflowY: \"scroll\",\r\n            }}\r\n          >\r\n            {myPac && myPac.length !== 0 ? (\r\n              <>\r\n                <Header>{myPac[pagina - 1].rubro.toUpperCase()}</Header>\r\n                <p>\r\n                  {myPac[pagina - 1].categoria}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].area}\r\n                  <br></br>\r\n                  Registrado por: {myPac[pagina - 1].nombre}\r\n                  <br></br>\r\n                  Hallazgo: {myPac[pagina - 1].observaciones}\r\n                </p>\r\n                <Header>Acciones Tomadas</Header>\r\n                <p>{myPac[pagina - 1].pac}</p>\r\n                <p>\r\n                  Fecha Limite Inicial:{\" \"}\r\n                  {FechaString(\r\n                    ExcelDateToJSDate(myPac[pagina - 1].fecha_cierre)\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" ? (\r\n                    <Checkbox\r\n                      disabled\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      checked\r\n                    />\r\n                  ) : (\r\n                    <Checkbox\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      onChange={() => {\r\n                        if (extension !== \"N\") {\r\n                          setExtension(\"N\");\r\n                        } else {\r\n                          setExtension(\"Y\");\r\n                        }\r\n                      }}\r\n                      checked={extension === \"Y\"}\r\n                    />\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" || extension === \"Y\" ? (\r\n                    <Input\r\n                      size=\"mini\"\r\n                      type=\"date\"\r\n                      onChange={(e) => {\r\n                        setExtDate(e.target.value);\r\n                      }}\r\n                      defaultValue={\r\n                        myPac[pagina - 1].extension === \"Y\"\r\n                          ? xltoDate(\r\n                              ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                            )\r\n                          : date\r\n                      }\r\n                    />\r\n                  ) : null}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Detalle Adicional\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"pacDetail\"\r\n                      name=\"planDetail\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      value={myPac[pagina - 1].detalle_pac}\r\n                      onChange={(e, { value }) => {\r\n                        setDetalle(value);\r\n                      }}\r\n                      placeholder=\"Detalle adicional de la acción tomada...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Acciones Preventivas</Header>\r\n                  <Input\r\n                    size=\"mini\"\r\n                    type=\"date\"\r\n                    onChange={(e) => {\r\n                      setPreventDate(e.target.value);\r\n                    }}\r\n                    defaultValue={\r\n                      myPac[pagina - 1].extension === \"Y\"\r\n                        ? xltoDate(\r\n                            ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                          )\r\n                        : date\r\n                    }\r\n                  />\r\n                  <br></br>\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"ppreventiva\"\r\n                      name=\"ppreventiva\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      onChange={(e, { value }) => {\r\n                        setpap(value);\r\n                      }}\r\n                      placeholder=\"Detalle de acción preventiva...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={handleImageUpload}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </p>\r\n\r\n                <div className=\"ui two buttons\">\r\n                  <Button color=\"yellow\" onClick={registrar}>\r\n                    Guardar\r\n                  </Button>\r\n                  <Button color=\"green\">Solicitar Aprobacion</Button>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Tareas;\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Modal,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Consultas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    setBuscar(true);\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas.sort(function (a, b) {\r\n      var keyA = a.fecha_hora,\r\n        keyB = b.fecha_hora;\r\n      // Compare the 2 dates\r\n      if (keyA > keyB) return -1;\r\n      if (keyA < keyB) return 1;\r\n      return 0;\r\n    });\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.nombre === user;\r\n      })\r\n    );\r\n    setDataFound(\r\n      datas.filter((item) => {\r\n        if (creador.length !== 0) {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final &&\r\n            creador.includes(item.nombre)\r\n          );\r\n        } else {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final\r\n          );\r\n        }\r\n      })\r\n    );\r\n    setBuscar(false);\r\n    setActiveIndex(-1);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    !data && sacardata();\r\n    data && console.log(myData);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Segment>\r\n        {activeItem && (\r\n          <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n          >\r\n            <Modal.Header>{activeItem.observaciones}</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={activeItem.anexo} wrapped />\r\n              <Modal.Description>\r\n                <Header>{activeItem.rubro + \"-\" + activeItem.categoria}</Header>\r\n                <p>\r\n                  <b>Detalle: </b> {activeItem.detalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(activeItem.fecha)\r\n                    .toISOString()\r\n                    .slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {activeItem.area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {activeItem.observador}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {activeItem.observado}\r\n                </p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"green\" onClick={() => setOpen(false)}>\r\n                OK\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        )}\r\n\r\n        <Dimmer active={buscar} page>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n        <Accordion fluid>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            Filtros\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            <>\r\n              <Input\r\n                label=\"Desde\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setInicio(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value > final && setFinal(e.target.value);\r\n                }}\r\n                value={inicio}\r\n                defaultValue={inicio}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Input\r\n                label=\"Hasta\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setFinal(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value < inicio && setInicio(e.target.value);\r\n                }}\r\n                value={final}\r\n                defaultValue={final}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Label>Registrado por </Label>\r\n              <Dropdown\r\n                fluid\r\n                multiple\r\n                search\r\n                selection\r\n                value={creador}\r\n                placeholder=\"Registrado por...\"\r\n                options={personal}\r\n                onChange={(e, { value }) => {\r\n                  setCreador(value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Button onClick={sacardata}>Buscar</Button>\r\n            </>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n      {dataFound && (\r\n        <Segment>\r\n          <Item.Group divided>\r\n            {dataFound.map((item) => (\r\n              <Item key={item.id}>\r\n                <Item.Content>\r\n                  <Item.Header\r\n                    as=\"a\"\r\n                    href={\"/observacion/\" + item.id}\r\n                    onClick={(e) => {\r\n                      setActiveItem((prevObject) => ({\r\n                        ...prevObject,\r\n                        id: item.id,\r\n                        rubro: item.rubro,\r\n                        categoria: item.categoria,\r\n                        observaciones: item.observaciones,\r\n                        detalle: item.obsDetalle,\r\n                        area: item.area,\r\n                        fecha: item.fecha,\r\n                        observador: item.nombre,\r\n                        observado: item.persObservadas,\r\n                        anexo: item.anexo ? item.anexo : dummyImg,\r\n                      }));\r\n                      //setOpen(true);\r\n                    }}\r\n                  >\r\n                    {item.rubro + \" - \" + item.categoria}\r\n                  </Item.Header>\r\n                  <Item.Meta>{item.observaciones}</Item.Meta>\r\n                  <Item.Description>\r\n                    {item.area +\r\n                      \" - \" +\r\n                      ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10)}\r\n                  </Item.Description>\r\n                  <Item.Extra>Observador:{item.nombre}</Item.Extra>\r\n                  <Item.Extra>\r\n                    Personas Observadas:{item.persObservadas}\r\n                  </Item.Extra>\r\n                  <Item.Extra>{item.obsDetalle}</Item.Extra>\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n          </Item.Group>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Consultas;\r\n","export default {\r\n  USER_ID: \"user_1s8Jx16sWB2djLHeed4yw\",\r\n  TEMPLATE_ID: \"template_oc6ugfi\",\r\n};\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Registros({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [idUnico, setID] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n  const [imgUpload, setImgUpload] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/images/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"images\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n                setImgUpload(fireBaseUrl);\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:E\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 4);\r\n      datas.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        src: cr.value,\r\n      });\r\n    }\r\n    setData(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  const handleTipoClick = (e) => {\r\n    if (tipo === e.target.name) {\r\n      setTipo(\"\");\r\n    } else {\r\n      setTipo(e.target.name);\r\n      console.log(e.target.name);\r\n      segCat.current.focus();\r\n      setCat(\"\");\r\n      setSubCat(\"\");\r\n      setSubCatData(\"\");\r\n    }\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    }\r\n  }, [areas]);\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  const handleCatClick = (e, { name }) => {\r\n    setSubCat(\"\");\r\n    setSubCatData(\"\");\r\n    setCat(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleStep = (e, { name }) => {\r\n    setStep(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleArea = (e, { name }) => {\r\n    setArea(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setConfirmar(true);\r\n  };\r\n\r\n  async function registrar() {\r\n    setLoading(true);\r\n    let wd = today.getDay();\r\n    wd === 0 ? (wd = 7) : (wd = wd);\r\n    let semana = FechaString(today.setDate(today.getDate() - wd + 1));\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const aplica = perfil === \"Registros\" ? \"Y\" : \"N\";\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    var j;\r\n    var UniqueID =\r\n      Date.now() +\r\n      user.substring(0, 2) +\r\n      tipo.substring(0, 1) +\r\n      subCat.substring(0, 2);\r\n    setID(UniqueID);\r\n    console.log(UniqueID);\r\n    for (j = 0; j < involucrados.length; j++) {\r\n      await sheet.addRow({\r\n        fecha: date,\r\n        fecha_hora: fecha,\r\n        nombre: creador,\r\n        area: area,\r\n        rubro: tipo,\r\n        categoria: cat,\r\n        observaciones: subCat,\r\n        pac: plan,\r\n        responsable: resp,\r\n        fecha_cierre: startDate,\r\n        anexo: imgUpload,\r\n        status: \"Pendiente\",\r\n        Personas_Observadas: involucrados[j],\r\n        id: UniqueID,\r\n        severidad: severidad,\r\n        Detalle: detalles,\r\n        Aplica: aplica,\r\n        semana: semana,\r\n        ids: 1 / involucrados.length,\r\n      });\r\n    }\r\n    if (correo !== \"No Aplica\") {\r\n      notificar(UniqueID);\r\n    }\r\n    setTipo(\"\");\r\n    setCat(\"\");\r\n    setSubCat(\"\");\r\n    setDetalles(\"\");\r\n    setInvolucrados([]);\r\n    setArea(\"\");\r\n    setPlan(\"\");\r\n    setResp(\"\");\r\n    setImageAsUrl(\"\");\r\n    setPreviewImg(\"\");\r\n    setLoading(false);\r\n    setConfirmar(false);\r\n    setSaving(true);\r\n  }\r\n\r\n  function notificar(codigo) {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      detalles: detalles,\r\n      imagen: \"https://www.miculturaqse507.com/sasso-app/observacion/\" + codigo,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n    setID(\"\");\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (subir) {\r\n      handleFireBaseUpload();\r\n    }\r\n  }, [subir]);\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div>\r\n          <Dimmer active={loading} page>\r\n            <Loader size=\"massive\">{data ? \"Saving\" : \"Loading\"}</Loader>\r\n          </Dimmer>\r\n          <Modal\r\n            header=\"Listo!\"\r\n            content=\"Su observación ha sido registrado exitosamente.\"\r\n            open={saving}\r\n            actions={[\r\n              {\r\n                key: \"done\",\r\n                content: \"Done\",\r\n                positive: true,\r\n                onClick: () => {\r\n                  setSaving(false);\r\n                  history.push(\"/observaciones\");\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <Modal\r\n            onClose={() => setConfirmar(false)}\r\n            onOpen={() => setConfirmar(true)}\r\n            open={confirmar}\r\n          >\r\n            <Modal.Header>Confirmar Información</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={previewImg} wrapped />\r\n              <Modal.Description>\r\n                <Header>Observacion de {tipo}</Header>\r\n                <p>{cat}</p>\r\n                <p>{subCat}</p>\r\n                <p>Severidad:{severidad}</p>\r\n                <Header>Persona(s) Observada(s)</Header>\r\n                {involucrados.map((item) => (\r\n                  <li>{item}</li>\r\n                ))}\r\n                <Header>Area</Header>\r\n                <p>{area}</p>\r\n                <Header>PLAN DE ACCION</Header>\r\n                <p>{plan}</p>\r\n                <p>Responsable: {resp}</p>\r\n                <p>Fecha de Cierre Previsto: {startDate}</p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"black\" onClick={() => setConfirmar(false)}>\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                content=\"Confirmar\"\r\n                labelPosition=\"right\"\r\n                icon=\"checkmark\"\r\n                onClick={() => {\r\n                  registrar();\r\n                }}\r\n                positive\r\n              />\r\n            </Modal.Actions>\r\n          </Modal>\r\n          {guardar ? (\r\n            <Button\r\n              fluid\r\n              color=\"green\"\r\n              content=\"Guardar\"\r\n              onClick={handleSave}\r\n            ></Button>\r\n          ) : null}\r\n          <Step.Group ordered size=\"mini\" attached=\"top\" unstackable>\r\n            <Step\r\n              active={step === \"Que\"}\r\n              name=\"Que\"\r\n              onClick={handleStep}\r\n              completed={que}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Observación</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"Donde\"}\r\n              name=\"Donde\"\r\n              onClick={handleStep}\r\n              completed={donde}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Area</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"PAC\"}\r\n              name=\"PAC\"\r\n              onClick={handleStep}\r\n              completed={pacStep}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>PAC</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n          </Step.Group>\r\n          <Segment attached>\r\n            {step === \"Que\" ? (\r\n              <Container>\r\n                {user === \"user\" && (\r\n                  <>\r\n                    <Segment>\r\n                      <Header>Nombre del Observador</Header>\r\n                      <Input\r\n                        fluid\r\n                        placeholder=\"Nombre del Observador...\"\r\n                        onChange={(e, { value }) => {\r\n                          setCreador(value);\r\n                        }}\r\n                      />\r\n                    </Segment>\r\n                  </>\r\n                )}\r\n                <Segment name=\"segmentTipo\">\r\n                  <Header>Tipo de Observación</Header>\r\n                  {tipos.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          circular\r\n                          name={item.name}\r\n                          onClick={handleTipoClick}\r\n                          active={tipo === item.name}\r\n                        >\r\n                          {item.id}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment name=\"segmentInvol\">\r\n                  <Header>Personas Responsables/Involucradas</Header>\r\n                  <Dropdown\r\n                    fluid\r\n                    multiple\r\n                    search\r\n                    selection\r\n                    value={involucrados}\r\n                    placeholder=\"Seleccionar Personas Involucradas\"\r\n                    options={personal}\r\n                    onChange={(e, { value }) => {\r\n                      setInvolucrados(value);\r\n                      console.log(value);\r\n                    }}\r\n                  />\r\n                </Segment>\r\n                <Ref innerRef={segCat}>\r\n                  <Segment name=\"segmentCat\">\r\n                    <Header>Categoria de la Observación</Header>\r\n                    <Card.Group itemsPerRow={4}>\r\n                      {catData\r\n                        ? catData.map((item) => (\r\n                            <Popup\r\n                              trigger={\r\n                                <Card\r\n                                  raised\r\n                                  color={\r\n                                    cat === item.Categoria ? \"red\" : \"black\"\r\n                                  }\r\n                                  name={item.Categoria}\r\n                                  onClick={handleCatClick}\r\n                                >\r\n                                  <Image\r\n                                    src={item.src}\r\n                                    size=\"mini\"\r\n                                    wrapped\r\n                                    ui={false}\r\n                                  />\r\n                                  <Card.Content>\r\n                                    {cat === item.Categoria ? (\r\n                                      <Icon\r\n                                        color=\"green\"\r\n                                        name=\"check circle\"\r\n                                      ></Icon>\r\n                                    ) : null}\r\n                                  </Card.Content>\r\n                                </Card>\r\n                              }\r\n                            >\r\n                              <Popup.Header>{item.Categoria}</Popup.Header>\r\n                            </Popup>\r\n                          ))\r\n                        : null}\r\n                    </Card.Group>\r\n                  </Segment>\r\n                </Ref>\r\n\r\n                {subCatData ? (\r\n                  <Ref innerRef={segSubCat}>\r\n                    <Segment name=\"segmentSubCat\">\r\n                      <Header>Observación</Header>\r\n                      <Dropdown\r\n                        fluid\r\n                        button\r\n                        search\r\n                        scrolling\r\n                        clearable\r\n                        value={subCat}\r\n                        placeholder=\"Seleccionar Observacion\"\r\n                        options={subCatData}\r\n                        onChange={(e, { value }) => {\r\n                          setSubCat(value);\r\n                        }}\r\n                      />\r\n                      <br />\r\n                      <Header>\r\n                        Severidad\r\n                        <Popup\r\n                          trigger={\r\n                            <div>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 0 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(1);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 1 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(2);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 2 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(3);\r\n                                }}\r\n                              ></Icon>\r\n                            </div>\r\n                          }\r\n                          content={\"Grado de Severidad: \" + severidad}\r\n                        ></Popup>\r\n                      </Header>\r\n                      <Form>\r\n                        <TextArea\r\n                          placeholder=\"Detalles\"\r\n                          onChange={(e, { value }) => {\r\n                            setDetalles(value);\r\n                          }}\r\n                        ></TextArea>\r\n                      </Form>\r\n                    </Segment>\r\n                  </Ref>\r\n                ) : null}\r\n              </Container>\r\n            ) : null}\r\n            {step === \"Donde\" && areas ? (\r\n              <div>\r\n                <Segment>\r\n                  <Header>Área de la Observación</Header>\r\n                  {areas.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          style={{ width: \"15vw\" }}\r\n                          name={item.name}\r\n                          onClick={handleArea}\r\n                          active={area === item.name}\r\n                        >\r\n                          {item.short}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      handleImageUpload(e);\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </Segment>\r\n              </div>\r\n            ) : null}\r\n            {step === \"PAC\" ? (\r\n              <Segment>\r\n                <Header>Acción Tomada</Header>\r\n                <Form>\r\n                  <TextArea\r\n                    placeholder=\"Escriba la Acción Tomada aquí...\"\r\n                    value={plan}\r\n                    onChange={(e) => {\r\n                      setPlan(e.target.value);\r\n                      console.log(e.target.value);\r\n                    }}\r\n                  ></TextArea>\r\n                </Form>\r\n                <Header>Fecha de Cierre Previsto</Header>\r\n                <Input\r\n                  fluid\r\n                  type=\"date\"\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                  defaultValue={startDate}\r\n                />\r\n                <Header>Responsable del Plan</Header>\r\n                <Dropdown\r\n                  fluid\r\n                  search\r\n                  selection\r\n                  placeholder=\"Seleccionar Responsable del Plan\"\r\n                  options={personal}\r\n                  value={resp}\r\n                  onChange={(e, { value }) => {\r\n                    setResp(value);\r\n                    console.log(value);\r\n                  }}\r\n                />\r\n              </Segment>\r\n            ) : null}\r\n          </Segment>\r\n        </div>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registros;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction Categorias({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n\r\n  const areas = [\r\n    { id: 2, name: \"Linea1\", short: \"L1\" },\r\n    { id: 3, name: \"Linea2\", short: \"L2\" },\r\n    { id: 4, name: \"Linea3\", short: \"L3\" },\r\n    { id: 5, name: \"Linea4\", short: \"L4\" },\r\n    { id: 6, name: \"Linea5\", short: \"L5\" },\r\n    { id: 1, name: \"Area de Reciclaje\", short: \"AR\" },\r\n    { id: 8, name: \"Sala de Jarabe\", short: \"SJ\" },\r\n    { id: 9, name: \"Taller de Mtto\", short: \"TM\" },\r\n    { id: 9, name: \"Area de Operaciones\", short: \"OP\" },\r\n    { id: 7, name: \"PTAR\", short: \"PTAR\" },\r\n    { id: 10, name: \"PTA\", short: \"PTA\" },\r\n    { id: 11, name: \"Oficina Administrativa\", short: \"ADM\" },\r\n  ];\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/iconos/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"iconos\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      var data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    console.log(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (imageAsUrl) {\r\n      console.log(imageAsUrl.imgUrl);\r\n    }\r\n  }, [imageAsUrl]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  async function registrar(tipo, categoria) {\r\n    handleFireBaseUpload();\r\n    console.log(imageAsUrl.imgUrl);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (\r\n        sheet.getCell(j, 0).value === tipo &&\r\n        sheet.getCell(j, 1).value === categoria\r\n      ) {\r\n        const imagen = sheet.getCell(j, 4);\r\n        imagen.value = imageAsUrl.imgUrl;\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function notificar() {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <Segment>\r\n          {data.map((item) => (\r\n            <Segment>\r\n              <Header>{item.Tipo}</Header>\r\n              <Form>\r\n                <TextArea value={item.Categoria}></TextArea>\r\n                <Header content={item.src}></Header>\r\n                <Input\r\n                  id=\"anexoImg\"\r\n                  fluid\r\n                  className=\"input-image\"\r\n                  type=\"file\"\r\n                  onChange={handleImageUpload}\r\n                />\r\n                <br />\r\n\r\n                <Button\r\n                  onClick={(e) => {\r\n                    registrar(item.Tipo, item.Categoria);\r\n                  }}\r\n                >\r\n                  SAVE\r\n                </Button>\r\n                <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n              </Form>\r\n            </Segment>\r\n          ))}\r\n        </Segment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categorias;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport {\r\n  Header,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Form,\r\n  Message,\r\n  Checkbox,\r\n  Popup,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Login() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"recordar\"]: [recordar, setRecordar],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState();\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const login = (event, password) => {\r\n    event.preventDefault();\r\n    var found = false;\r\n    for (var i = 0; i < userData.length; i++) {\r\n      if (userData[i].id === password) {\r\n        found = true;\r\n        setUser(userData[i].Nombre);\r\n        sessionStorage.user = userData[i].Nombre;\r\n        if (recordar) {\r\n          localStorage.user = userData[i].Nombre;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!found) alert(`Usuario No encontrado`);\r\n    if (found) {\r\n      if (pagina) {\r\n        history.push(pagina);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Ingresar con su Numero de Empleado\r\n        </Header>\r\n        <Form size=\"large\">\r\n          <Segment stacked>\r\n            <Popup\r\n              content=\"Numero de Empleado sin PA ni los 0 iniciales, Ejemplo: PA00123456 = 123456\"\r\n              trigger={\r\n                <Form.Input\r\n                  name=\"userPassword\"\r\n                  type=\"password\"\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Numero de Empleado\"\r\n                  onChange={(event) => onChangeHandler(event)}\r\n                />\r\n              }\r\n            />\r\n\r\n            <Button\r\n              color=\"red\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={(event) => {\r\n                login(event, password);\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          <Checkbox\r\n            label=\"Recordar Usuario\"\r\n            onChange={(e, { checked }) => {\r\n              checked ? setRecordar(true) : setRecordar(false);\r\n            }}\r\n          />\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport userData from \"./employee.json\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Perfil() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Segment>\r\n        <Header as=\"h4\">\r\n          {user}\r\n          <Button\r\n            floated=\"right\"\r\n            negative\r\n            onClick={() => {\r\n              setUser(\"\");\r\n              sessionStorage.removeItem(\"user\");\r\n              localStorage.removeItem(\"user\");\r\n              setPagina(\"/perfil\");\r\n              history.push(\"/Login\");\r\n            }}\r\n          >\r\n            Cerrar Sesión\r\n          </Button>\r\n        </Header>\r\n        <Segment>{userInfo[0].correo}</Segment>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Perfil;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { intlFormat } from \"date-fns\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  //var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da} ${hora}`;\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Schedule() {\r\n  const [persona, setPersona] = useState(); //variable para responsable de recorrido\r\n  const [lugar, setLugar] = useState(); //variable para area de recorrido\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const { [\"personal\"]: personal } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date())); //variable para fecha de recorrido\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        if (areas[j].name !== \"\") {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  async function registrar() {\r\n    setSaving(true);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[762667679];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    while (lastr--) {\r\n      try {\r\n        console.log(rows[lastr].Usuario);\r\n        if (\r\n          rows[lastr].Nombre == persona &&\r\n          rows[lastr].Fecha == fecha &&\r\n          rows[lastr].Area == lugar\r\n        ) {\r\n          console.log(\"Borrando\");\r\n          await rows[lastr].delete();\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        break;\r\n      }\r\n    }\r\n    await sheet.addRow({\r\n      Nombre: persona,\r\n      Fecha: fecha,\r\n      Area: lugar,\r\n      Usuario: user,\r\n      FechaProgramado: FechaStringLong(new Date()),\r\n    });\r\n    alert(\"Datos Guardados\");\r\n    setSaving(false);\r\n    setPersona();\r\n    setLugar();\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Dimmer active={saving} page>\r\n        <Loader size=\"massive\">{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Programar Recorrido\r\n        </Header>\r\n        <Form>\r\n          <b>Nombre*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Nombre de Empleado...\"\r\n            defaultValue={persona}\r\n            options={personal}\r\n            onChange={(e, { value }) => {\r\n              setPersona(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Area*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Area...\"\r\n            defaultValue={lugar}\r\n            options={listaArea}\r\n            onChange={(e, { value }) => {\r\n              setLugar(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            size=\"tiny\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n          <br></br>\r\n          <Button\r\n            disabled={!persona || !lugar}\r\n            negative\r\n            fluid\r\n            onClick={() => {\r\n              registrar();\r\n            }}\r\n          >\r\n            Programar\r\n          </Button>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n  Radio,\r\n  Popup,\r\n  Sticky,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { GradientDefs } from \"react-vis\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nexport default function ReporteDeTurno({ user }) {\r\n  const referencia = useRef(null);\r\n  const {\r\n    [\"reportData\"]: [reportData, setRepData],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const [area, setArea] = useState();\r\n  const [categoria, setCat] = useState();\r\n  const { personal: personal } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  const [reportes, setReportes] = useState(); //Listado completo de CheckList\r\n  const [sinFiltro, setSinFiltro] = useState();\r\n  const [checkList, setCheckList] = useState();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date()));\r\n  const [cats, setCats] = useState();\r\n  const [rubros, setRubros] = useState();\r\n  const [activeRubro, setActRubro] = useState();\r\n  const [subCat, setSubCat] = useState();\r\n  const [requerimientos, setReq] = useState();\r\n  const [activeReq, setActiveR] = useState();\r\n  const [incumple, setIncumple] = useState([]);\r\n  const [percentage, setPercentage] = useState();\r\n  const [turno, setTurno] = useState(1);\r\n  const [campoOblig, setCampoOblig] = useState(0);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [duplicado, setDuplicado] = useState(false);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [tipoReporte, setTipoRep] = useState(\"Reporte de Turno\");\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const turnos = [\"1\", \"2\", \"3\"];\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const history = useHistory();\r\n\r\n  async function handleImageUpload(event, rubro) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, url: \"\", preview: \"\", img: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, preview: e.target.result }\r\n              : x;\r\n          });\r\n        });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, img: compressedFile }\r\n              : x;\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      setImageAsFile(\"\");\r\n      setPreviewImg(dummyImg);\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, preview: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setPercentage(0);\r\n  }\r\n\r\n  async function handleFireBaseUpload(rubro) {\r\n    var boton = document.getElementById(\"btn\" + activeReq + activeRubro);\r\n    boton.disabled = true;\r\n    setPercentage(1);\r\n    const archivo =\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n        )\r\n      ].img;\r\n    const uploadTask = storage.ref(`/images/${archivo.name}`).put(archivo);\r\n    setPercentage(5);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        //takes a snap shot of the process as it is happening\r\n        console.log(snapShot);\r\n      },\r\n      (err) => {\r\n        //catches the errors\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        // gets the functions from storage refences the image storage in firebase by the children\r\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n        setPercentage(50);\r\n        storage\r\n          .ref(\"images\")\r\n          .child(archivo.name)\r\n          .getDownloadURL()\r\n          .then((fireBaseUrl) => {\r\n            setReportes((existingItems) => {\r\n              return existingItems.map((x) => {\r\n                return x.SubCategoria === activeRubro &&\r\n                  x.Categoria === activeReq\r\n                  ? { ...x, url: fireBaseUrl }\r\n                  : x;\r\n              });\r\n            });\r\n            setPercentage(100);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setRepData(datas);\r\n  };\r\n  const sacarReportes = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = 1259390435;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    var aplican = datas.filter((x) => x[\"Reporte de turno\"] === \"Y\");\r\n    if (window.location.href.includes(\"recorrido\")) {\r\n      aplican = datas.filter((x) => x[\"Recorrido\"] === \"Y\");\r\n    }\r\n    setSinFiltro(aplican);\r\n    setReportes(aplican);\r\n    setCats(\r\n      aplican\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  const sacarReportes2 = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = window.location.href.includes(\"recorrido\")\r\n      ? 1236777776\r\n      : 585241358;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    setReportes(datas);\r\n    setCats(\r\n      datas\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  async function registrar() {\r\n    setStatus(estados[0].caption);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n\r\n    if (duplicado) {\r\n      setStatus(estados[2].caption);\r\n      while (lastr--) {\r\n        try {\r\n          if (rows[lastr].Id == uniqueID) {\r\n            console.log(\"Borrando\");\r\n            await rows[lastr].delete();\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          sleep(60000);\r\n          lastr = lastr + 1;\r\n          continue;\r\n        }\r\n      }\r\n      setStatus(estados[0].caption);\r\n    }\r\n    var j;\r\n\r\n    for (j = 0; j < reportes.length; j++) {\r\n      try {\r\n        console.log(\"guardando\");\r\n        await sheet.addRow({\r\n          Area: area,\r\n          Usuario: user,\r\n          FechaRegistro: FechaStringLong(new Date()),\r\n          FechaRecorrido: fecha,\r\n          Tipo: reportes[j].Tipo,\r\n          Categoria: reportes[j].Categoria,\r\n          SubCategoria: reportes[j].SubCategoria,\r\n          Incumple: reportes[j].incumple,\r\n          Detalle: reportes[j].detalle,\r\n          PersonasObservadas: reportes[j].personas,\r\n          Imagen: reportes[j].url,\r\n          Turno: turno,\r\n          Reporte: tipoReporte,\r\n          Id: uniqueID,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n        sleep(60000);\r\n        j = j - 1;\r\n        continue;\r\n      }\r\n    }\r\n    alert(\"Datos Guardados\");\r\n    setActiveR();\r\n    setStatus();\r\n    setArea(\"\");\r\n    setActRubro();\r\n    setRepData();\r\n    setReportes();\r\n    setConfirmar(false);\r\n    history.push(\"/\");\r\n  }\r\n  const [lista, setLista] = useState();\r\n  const crearLista = (e, { name }) => {\r\n    if (activeReq == name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(name);\r\n    }\r\n    setLista(\r\n      reportData\r\n        .filter((item) => item.Nombre == name)\r\n        .map((item) => item.Rubro)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n  };\r\n  const revision = (e, { name, requerimiento }) => {\r\n    let observacion = { req: requerimiento, rubro: name };\r\n    if (\r\n      reportData[reportData.findIndex((x) => x.Rubro === name)].Acto === \"Y\"\r\n    ) {\r\n      observacion.obligatorio = 1;\r\n    }\r\n    if (incumple.some((e) => e.req === requerimiento && e.rubro === name)) {\r\n      let removeIndex = incumple.filter((e) => e.rubro !== name);\r\n      console.log(removeIndex);\r\n      // remove object\r\n      setIncumple(removeIndex);\r\n    } else {\r\n      setIncumple((oldArray) => [...oldArray, observacion]);\r\n    }\r\n  };\r\n  const validar = () => {\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n    let res = [];\r\n    res = reportData.filter((element) => {\r\n      return element.Id == uniqueID;\r\n    });\r\n    if (res.length > 0) {\r\n      setDuplicado(true);\r\n    } else {\r\n      setDuplicado(false);\r\n    }\r\n  };\r\n\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    // Return a function from the effect that removes the event listener\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var userArea = userData.filter((x) => x.Nombre === user)[0].Area;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        let keys = areas[j].keys;\r\n        if (\r\n          areas[j].name !== \"\" &&\r\n          (userArea.toLowerCase().includes(\"gerencia\") ||\r\n          window.location.href.includes(\"recorrido\")\r\n            ? true\r\n            : keys\r\n                .toLowerCase()\r\n                .split(\", \")\r\n                .some((w) => userArea.toLowerCase().includes(w)))\r\n        ) {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  useEffect(() => {\r\n    if (turno && area) {\r\n      if (!reportData) {\r\n        sacardata();\r\n      }\r\n      validar();\r\n    }\r\n  }, [area, turno]);\r\n\r\n  useEffect(() => {\r\n    console.log(incumple);\r\n  }, [incumple]);\r\n  useEffect(() => {\r\n    if (!reportData) {\r\n      sacardata();\r\n    }\r\n  }, [reportData]);\r\n  useEffect(() => {\r\n    if (!reportes) {\r\n      sacarReportes();\r\n    } else {\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    setArea();\r\n    setCat();\r\n    setReportes();\r\n    setRepData();\r\n    setActiveR();\r\n    setActRubro();\r\n    sacarReportes();\r\n    sacardata();\r\n    var url = window.location.href;\r\n    if ((pagina && pagina.includes(\"recorrido\")) || url.includes(\"recorrido\")) {\r\n      setTipoRep(\"Reporte de Recorrido\");\r\n    } else {\r\n      setTipoRep(\"Reporte de Turno\");\r\n    }\r\n  }, [pagina]);\r\n  function handleArea(e, { value }) {\r\n    setCat();\r\n    setActiveR();\r\n    var filtro = sinFiltro.filter((x) => x[value] === \"Y\");\r\n    setReportes(filtro);\r\n    setArea(value);\r\n  }\r\n\r\n  function handleCategorias(e) {\r\n    setCat(e.target.name);\r\n    if (reportes) {\r\n      var chklist = reportes.filter((item) => item.Tipo === e.target.name);\r\n      setCheckList(chklist);\r\n      setReq(\r\n        chklist\r\n          .map((item) => item.Categoria)\r\n          .filter((value, index, self) => self.indexOf(value) === index)\r\n      );\r\n    }\r\n  }\r\n  function handleSubCat(e) {\r\n    setSubCat(e.target.name);\r\n    if (activeReq === e.target.name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(e.target.name);\r\n    }\r\n    setRubros(\r\n      reportes\r\n        .filter((item) => item.Categoria === e.target.name)\r\n        .map((item) => item.SubCategoria)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setActRubro();\r\n  }\r\n\r\n  function handleCheck(e) {\r\n    var item = e.target.name;\r\n    var chk = e.target.id;\r\n    console.log(chk);\r\n    setActRubro(item);\r\n    var cumple;\r\n    if (chk.includes(\"Y\")) {\r\n      cumple = \"N\";\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === item && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n                detalle: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    } else {\r\n      cumple = \"Y\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === item && x.Categoria === activeReq\r\n          ? { ...x, incumple: cumple }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function HandleTodos(e, { checked }) {\r\n    var cumple;\r\n    if (checked) {\r\n      cumple = \"N\";\r\n    } else {\r\n      cumple = \"\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.Categoria === activeReq ? { ...x, incumple: cumple } : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleOpcional(e, { rubro }) {\r\n    setActRubro(rubro);\r\n    var aplica;\r\n    if (\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.Categoria === activeReq && x.SubCategoria === rubro\r\n        )\r\n      ].opcional === \"N\"\r\n    ) {\r\n      aplica = \"Y\";\r\n    } else {\r\n      aplica = \"N\";\r\n\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === rubro && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === rubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              opcional: aplica,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleObservados(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              personas: value.toString(),\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDetalles(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              detalle: value,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n      <Dimmer\r\n        active={\r\n          status || estados.filter((x) => x.caption === status).length != 0\r\n        }\r\n        page\r\n      >\r\n        <Loader size=\"massive\">{status}</Loader>\r\n      </Dimmer>\r\n      {reportes && (\r\n        <Modal\r\n          onClose={() => setConfirmar(false)}\r\n          onOpen={() => setConfirmar(true)}\r\n          size=\"large\"\r\n          open={confirmar}\r\n        >\r\n          <Modal.Header>Confirmar Información</Modal.Header>\r\n          <Modal.Content>\r\n            {duplicado && (\r\n              <Label basic color=\"red\" size=\"huge\">\r\n                <Icon name=\"warning sign\" />\r\n                Se sobreescribirá los datos\r\n              </Label>\r\n            )}\r\n            <h1>\r\n              {tipoReporte.includes(\"Recorrido\")\r\n                ? tipoReporte\r\n                : tipoReporte + \" \" + turno}\r\n            </h1>\r\n            <h2>{fecha}</h2>\r\n            <h3>{user}</h3>\r\n            <h4>{area}</h4>\r\n          </Modal.Content>\r\n\r\n          <Divider />\r\n          <Modal.Content>\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <b>Incumplimientos: </b>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <List>\r\n                {reportes\r\n                  .filter((x) => x.incumple === \"Y\")\r\n                  .map((item, index) => {\r\n                    return (\r\n                      <List.Item>\r\n                        {index + 1}. {item.Tipo} - {item.Categoria} -{\" \"}\r\n                        {item.SubCategoria}\r\n                      </List.Item>\r\n                    );\r\n                  })}\r\n              </List>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length == 0 && (\r\n              <b>Sin Incidencias</b>\r\n            )}\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"green\"\r\n              onClick={() => {\r\n                registrar();\r\n              }}\r\n            >\r\n              <Icon name=\"check\"></Icon>Confirmar\r\n            </Button>\r\n            <Button\r\n              secondary\r\n              color=\"red\"\r\n              onClick={() => {\r\n                setConfirmar(false);\r\n              }}\r\n            >\r\n              <Icon name=\"x\"></Icon>Cancelar\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      )}\r\n      <Grid.Row>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Segment basic>\r\n            <Header>{tipoReporte}</Header>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Area*</b>\r\n            <Dropdown\r\n              style={{ textAlign: \"center\" }}\r\n              fluid\r\n              search\r\n              selection\r\n              placeholder=\"Area...\"\r\n              options={listaArea}\r\n              onChange={handleArea}\r\n            ></Dropdown>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {area && tipoReporte.includes(\"Turno\") && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Turno*</b>\r\n            <Form>\r\n              <Grid columns={3}>\r\n                <Grid.Row>\r\n                  {turnos.map((x) => {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Radio\r\n                          label={x}\r\n                          checked={turno === x}\r\n                          onChange={() => {\r\n                            setTurno(x);\r\n                          }}\r\n                        ></Radio>\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {duplicado && area && turno && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" />\r\n              Ud. ya ha registrado un {tipoReporte} para {area}{\" \"}\r\n              {tipoReporte === \"Reporte de Turno\" ? \"del turno \" + turno : \"\"}{\" \"}\r\n              para el dia {fecha}, en caso que guardes se sobreescribira el\r\n              reporte anterior\r\n            </Label>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      <Grid.Row columns={4}>\r\n        {cats &&\r\n          turno &&\r\n          area &&\r\n          cats.map((item) => {\r\n            return (\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor:\r\n                      categoria === item\r\n                        ? colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].activo\r\n                        : colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].inactivo,\r\n                    color: colores.filter((x) => {\r\n                      return x.categoria === item;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleCategorias}\r\n                >\r\n                  {width > breakpoint\r\n                    ? colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].caption\r\n                    : colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].short}\r\n                  <Popup\r\n                    content=\"Cantidad de incumplimiento\"\r\n                    trigger={\r\n                      <Label\r\n                        style={{ left: \"90%\" }}\r\n                        color={\r\n                          reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length > 0\r\n                            ? \"red\"\r\n                            : \"grey\"\r\n                        }\r\n                        floating\r\n                        circular\r\n                        size=\"mini\"\r\n                      >\r\n                        {reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length}\r\n                      </Label>\r\n                    }\r\n                  />\r\n                </Button>\r\n              </Grid.Column>\r\n            );\r\n          })}\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              disabled={\r\n                !area |\r\n                !turno |\r\n                (reportes &&\r\n                  reportes.filter(\r\n                    (x) =>\r\n                      x.incumple === \"Y\" &&\r\n                      (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n                      x.personas === \"\"\r\n                  ).length > 0) |\r\n                (reportes.filter((x) => x.incumple === \"\").length > 0)\r\n              }\r\n              fluid\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Guardar\"\r\n              onClick={() => setConfirmar(true)}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {reportes &&\r\n        reportes.filter(\r\n          (x) =>\r\n            x.incumple === \"Y\" &&\r\n            (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n            x.personas === \"\"\r\n        ).length > 0 && (\r\n          <Grid.Row>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" /> Campo obligatorio sin completar\r\n            </Label>\r\n          </Grid.Row>\r\n        )}\r\n      {categoria && area && reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment\r\n              fluid\r\n              basic\r\n              style={{\r\n                color: colores.filter((x) => {\r\n                  return x.categoria === categoria;\r\n                })[0].activo,\r\n              }}\r\n            >\r\n              <Header\r\n                onClick={() => {\r\n                  console.log(reportes);\r\n                  console.log(activeReq);\r\n                  console.log(activeRubro);\r\n                }}\r\n              >\r\n                {categoria}\r\n                {\" Cumplimiento \"}\r\n                {Math.ceil(\r\n                  (reportes.filter(\r\n                    (x) => x.Tipo === categoria && x.incumple === \"N\"\r\n                  ).length /\r\n                    reportes.filter((x) => x.Tipo === categoria).length) *\r\n                    100\r\n                )}\r\n                %\r\n              </Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n\r\n      {requerimientos &&\r\n        categoria &&\r\n        area &&\r\n        reportes &&\r\n        requerimientos.map((item, reqIdx) => {\r\n          return (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].inactivo,\r\n                    color: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleSubCat}\r\n                >\r\n                  {item}\r\n                </Button>\r\n                {activeReq === item && (\r\n                  <Segment basic>\r\n                    <Grid verticalAlign=\"left\">\r\n                      <Checkbox\r\n                        key={reqIdx + \"AllY\"}\r\n                        requerimiento={activeReq}\r\n                        label={\"Todos Cumplen\"}\r\n                        onChange={HandleTodos}\r\n                      />\r\n                    </Grid>\r\n                    <Grid verticalAlign=\"left\">\r\n                      {rubros &&\r\n                        rubros.map((item, idx) => {\r\n                          return (\r\n                            <Grid.Row>\r\n                              <Grid.Column>\r\n                                {idx + 1 + \". \" + item}\r\n                                <br />\r\n                                <Grid.Row columns={3}>\r\n                                  <Grid.Column>Cumple?</Grid.Column>\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"Y\"}\r\n                                      id={idx + \"Y\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"Si\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"N\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                  <br />\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"N\"}\r\n                                      id={idx + \"N\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"No\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"Y\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                </Grid.Row>\r\n                                {reportes.filter(\r\n                                  (x) =>\r\n                                    x.SubCategoria === item &&\r\n                                    x.Categoria === activeReq\r\n                                )[0].incumple === \"Y\" && (\r\n                                  <Segment color=\"red\">\r\n                                    <Grid>\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"N\" && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Checkbox\r\n                                                fluid\r\n                                                requerimiento={activeReq}\r\n                                                rubro={item}\r\n                                                label=\"Personas Observadas?\"\r\n                                                checked={\r\n                                                  reportes.filter(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )[0].opcional === \"Y\"\r\n                                                }\r\n                                                onChange={handleOpcional}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        (reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"Y\" ||\r\n                                          reportes.filter(\r\n                                            (x) =>\r\n                                              x.SubCategoria === item &&\r\n                                              x.Categoria === activeReq\r\n                                          )[0].opcional === \"Y\") && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <b>Personas Observadas*</b>\r\n                                              <Dropdown\r\n                                                fluid\r\n                                                multiple\r\n                                                search\r\n                                                selection\r\n                                                defaultValue={\r\n                                                  reportes[\r\n                                                    reportes.findIndex(\r\n                                                      (x) =>\r\n                                                        x.Categoria ===\r\n                                                          activeReq &&\r\n                                                        x.SubCategoria === item\r\n                                                    )\r\n                                                  ].personas\r\n                                                    ? reportes[\r\n                                                        reportes.findIndex(\r\n                                                          (x) =>\r\n                                                            x.Categoria ===\r\n                                                              activeReq &&\r\n                                                            x.SubCategoria ===\r\n                                                              item\r\n                                                        )\r\n                                                      ].personas.split(\",\")\r\n                                                    : \"\"\r\n                                                }\r\n                                                placeholder=\"Seleccionar Personas Involucradas...\"\r\n                                                options={personal}\r\n                                                onChange={handleObservados}\r\n                                              ></Dropdown>\r\n                                              {!reportes[\r\n                                                reportes.findIndex(\r\n                                                  (x) =>\r\n                                                    x.Categoria === activeReq &&\r\n                                                    x.SubCategoria === item\r\n                                                )\r\n                                              ].personas && (\r\n                                                <Label\r\n                                                  basic\r\n                                                  color=\"red\"\r\n                                                  pointing\r\n                                                >\r\n                                                  <Icon name=\"warning sign\" />\r\n                                                  Por favor elija al menos una\r\n                                                  persona\r\n                                                </Label>\r\n                                              )}\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Detalles</b>\r\n                                          <Form>\r\n                                            <TextArea\r\n                                              placeholder=\"Detelles...\"\r\n                                              defaultValue={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.Categoria ===\r\n                                                        activeReq &&\r\n                                                      x.SubCategoria === item\r\n                                                  )\r\n                                                ].detalle\r\n                                                  ? reportes[\r\n                                                      reportes.findIndex(\r\n                                                        (x) =>\r\n                                                          x.Categoria ===\r\n                                                            activeReq &&\r\n                                                          x.SubCategoria ===\r\n                                                            item\r\n                                                      )\r\n                                                    ].detalle\r\n                                                  : \"\"\r\n                                              }\r\n                                              onChange={handleDetalles}\r\n                                            ></TextArea>\r\n                                          </Form>\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Imagen</b>\r\n                                          <Input\r\n                                            icon=\"camera\"\r\n                                            iconPosition=\"left\"\r\n                                            type=\"file\"\r\n                                            fluid\r\n                                            rubro={item}\r\n                                            onChange={(e, { rubro }) => {\r\n                                              handleImageUpload(e, rubro);\r\n                                            }}\r\n                                          />\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview &&\r\n                                        percentage == 0 && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Button\r\n                                                id={\"btn\" + activeReq + item}\r\n                                                rubro={item}\r\n                                                content=\"Confirmar\"\r\n                                                style={{\r\n                                                  backgroundColor:\r\n                                                    colores.filter((item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    })[0].inactivo,\r\n                                                  color: colores.filter(\r\n                                                    (item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    }\r\n                                                  )[0].texto,\r\n                                                }}\r\n                                                onClick={(e, { rubro }) => {\r\n                                                  handleFireBaseUpload(rubro);\r\n                                                }}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Progress\r\n                                              percent={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? 100\r\n                                                  : percentage\r\n                                              }\r\n                                              indicating={\r\n                                                !reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url && percentage != 100\r\n                                              }\r\n                                              success={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? true\r\n                                                  : percentage == 100\r\n                                              }\r\n                                              progress\r\n                                              label={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url || percentage == 100\r\n                                                  ? \"Cargado\"\r\n                                                  : percentage == 0\r\n                                                  ? \"\"\r\n                                                  : \"Cargando\"\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Image\r\n                                              size=\"medium\"\r\n                                              src={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].preview\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                    </Grid>\r\n                                  </Segment>\r\n                                )}\r\n                              </Grid.Column>\r\n                            </Grid.Row>\r\n                          );\r\n                        })}\r\n                    </Grid>\r\n                  </Segment>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { Dropdown, Grid, Header, Input, Segment } from \"semantic-ui-react\";\r\n\r\nfunction Minuta() {\r\n  const { personal } = useContext(Contexto);\r\n  return (\r\n    <Grid stackable>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <Header content=\"Administración de Minuta\" />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input fluid type=\"date\"></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row columns={3}>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Participantes</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Minuta;\r\n","import React, { useState, useContext } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Home from \"./Home.js\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport userData from \"./employee.json\";\nimport Add from \"./images/fondo.jpg\";\nimport {\n  Header,\n  Menu,\n  Icon,\n  Modal,\n  Button,\n  Input,\n  Segment,\n  Checkbox,\n  Sidebar,\n  Dropdown,\n  Label,\n} from \"semantic-ui-react\";\nimport Observacion from \"./observacion\";\nimport Tareas from \"./tareas\";\nimport Consultas from \"./consulta\";\nimport Registrar from \"./registrar\";\nimport Categorias from \"./tipos\";\nimport Login from \"./Login\";\nimport Reporte from \"./Reporte\";\nimport { Contexto } from \"./Contexto\";\nimport Perfil from \"./profile\";\nimport Schedule from \"./schedule\";\nimport Recorrido from \"./recorridos\";\nimport ReporteDeTurno from \"./reporteDeTurno\";\nimport Minuta from \"./minuta\";\nimport Dashboard from \"./dashboard\";\n\nfunction App() {\n  let iniciado = null;\n  let caption = \"Sign In\";\n  if (sessionStorage.getItem(\"user\")) {\n    iniciado = sessionStorage.user;\n    caption = \"Sign Out\";\n  } else if (localStorage.getItem(\"user\")) {\n    iniciado = localStorage.user;\n    caption = \"Sign Out\";\n  }\n  const {\n    [\"user\"]: [user, setUser],\n  } = useContext(Contexto);\n  const {\n    [\"pagina\"]: [pagina, setPagina],\n  } = useContext(Contexto);\n  const {\n    [\"width\"]: [width, setWidth],\n  } = useContext(Contexto);\n  const breakpoint = 620;\n  const {\n    [\"areas\"]: [areas, setAreas],\n  } = useContext(Contexto);\n  const [session, setSession] = useState(caption);\n  const [open, setOpen] = React.useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [activeItem, setActiveItem] = useState(\"\");\n  const [recordar, setRecordar] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  };\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userPassword\") {\n      setPassword(value);\n    }\n  };\n\n  const login = (event, password) => {\n    event.preventDefault();\n    var found = false;\n    for (var i = 0; i < userData.length; i++) {\n      if (userData[i].id === password) {\n        found = true;\n        setUser(userData[i].Nombre);\n        sessionStorage.user = userData[i].Nombre;\n        if (recordar) {\n          localStorage.user = userData[i].Nombre;\n        }\n        setSession(\"Sign Out\");\n        break;\n      }\n    }\n    if (!found) alert(`Usuario No encontrado`);\n  };\n\n  React.useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    // Return a function from the effect that removes the event listener\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  return (\n    <Router basename={\"/\"}>\n      <div style={{ padding: \"2%\", backgroundImage: `url(${Add})` }}>\n        <Menu color=\"red\" size=\"huge\">\n          <Menu.Item header as={Link} to=\"/home\">\n            <b style={{ color: \"red\" }}>Mi Cultura QSEB</b>\n          </Menu.Item>\n          {width < breakpoint ? (\n            <Menu.Item position=\"right\">\n              <Icon\n                size=\"large\"\n                name=\"bars\"\n                color=\"red\"\n                onClick={() => {\n                  setVisible(true);\n                }}\n              />\n            </Menu.Item>\n          ) : (\n            <>\n              <Dropdown item text=\"Reportes\">\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    text=\"Reporte de Turno\"\n                    as={Link}\n                    to={user ? \"/Reporte\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/Reporte\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Recorridos\"\n                    as={Link}\n                    to={user ? \"/recorrido\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/recorrido\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Programar Recorridos\"\n                    as={Link}\n                    to={user ? \"/programar\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/programar\");\n                    }}\n                  />\n                  <Dropdown.Item text=\"Actos Inseguros\" />\n                  <Dropdown.Item text=\"Condiciones Inseguras\" />\n                </Dropdown.Menu>\n              </Dropdown>\n              <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n              <Menu.Item position=\"right\">\n                {user ? (\n                  //<Icon\n                  //  size=\"large\"\n                  // name=\"user circle\"\n                  //  color={user ? \"green\" : \"black\"}\n                  //>\n                  <Button\n                    icon=\"user \"\n                    color=\"green\"\n                    circular\n                    as={Link}\n                    to=\"/perfil\"\n                  />\n                ) : (\n                  <Button\n                    content=\"Iniciar Sesion\"\n                    style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                    as=\"a\"\n                    href=\"/Login\"\n                  />\n                )}\n              </Menu.Item>\n            </>\n          )}\n        </Menu>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            onHide={() => setVisible(false)}\n            vertical\n            direction=\"right\"\n            visible={visible}\n            width=\"wide\"\n            color=\"red\"\n          >\n            <Menu.Item\n              name=\"Reporte\"\n              as={Link}\n              to={user ? \"/Reporte\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/Reporte\");\n                setAreas();\n              }}\n            >\n              Reporte de Turno\n            </Menu.Item>\n            <Menu.Item\n              name=\"Recorridos\"\n              as={Link}\n              to={user ? \"/recorrido\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/recorrido\");\n                setAreas();\n              }}\n            >\n              Recorridos\n            </Menu.Item>\n            <Menu.Item\n              name=\"ProgramarRecorridos\"\n              as={Link}\n              to={user ? \"/programar\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/programar\");\n              }}\n            >\n              Programar Recorridos\n            </Menu.Item>\n            <Menu.Item name=\"ActosI\">Actos Inseguros</Menu.Item>\n            <Menu.Item name=\"CondicionesI\">Condiciones Inseguras</Menu.Item>\n            <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n            {user && user.includes(\"Cheung\") && (\n              <Menu.Item\n                name=\"Minutas\"\n                as={Link}\n                to={user ? \"/minutas\" : \"/Login\"}\n                onClick={() => {\n                  setVisible(false);\n                  setPagina(\"/minutas\");\n                }}\n              >\n                Minutas\n              </Menu.Item>\n            )}\n            <Menu.Item\n              name=\"Perfil\"\n              as={Link}\n              to={user ? \"/perfil\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n              }}\n            >\n              {user ? (\n                user\n              ) : (\n                <Button\n                  content=\"Iniciar Sesion\"\n                  style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                  as={Link}\n                  onClick={() => {\n                    setVisible(false);\n                  }}\n                  to=\"/Login\"\n                />\n              )}\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher>\n            <Segment\n              style={{\n                backgroundColor: \"whitesmoke\",\n                height: \"90vh\",\n                overflowY: \"auto\",\n              }}\n            >\n              <Switch>\n                <Route\n                  exact\n                  path=\"/home\"\n                  render={(props) => <Home {...props} user={user} />}\n                />\n                <Route\n                  path=\"/registros\"\n                  render={(props) => <Registrar {...props} user={user} />}\n                />\n                <Route\n                  path=\"/tareas\"\n                  render={(props) => <Tareas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observaciones\"\n                  render={(props) => <Consultas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observacion/:id\"\n                  render={(props) => <Observacion {...props} user={user} />}\n                />\n                <Route\n                  path=\"/Login\"\n                  render={(props) => <Login {...props} user={user} />}\n                />\n                <Route\n                  path=\"/reporte\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/recorrido\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/perfil\"\n                  render={(props) => <Perfil {...props} user={user} />}\n                />\n                <Route\n                  path=\"/minutas\"\n                  render={(props) => <Minuta {...props} user={user} />}\n                />\n                <Route\n                  path=\"/programar\"\n                  render={(props) => <Schedule {...props} user={user} />}\n                />\n                <Route\n                  path=\"/\"\n                  //render={(props) => <Home {...props} user={user} />}\n                  render={(props) => <Home {...props} user={user} />}\n                />\n              </Switch>\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ContextoProvider from \"./Contexto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextoProvider>\n      <App />\n    </ContextoProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}