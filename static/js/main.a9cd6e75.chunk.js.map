{"version":3,"sources":["Contexto.js","Home.js","images/fondo.jpg","observacion.js","firebase/firebase.js","tareas.js","consulta.js","apikeys.js","registrar.js","tipos.js","Login.js","profile.js","schedule.js","reporteDeTurno.js","minuta.js","App.js","serviceWorker.js","index.js"],"names":["Contexto","React","createContext","children","iniciado","sessionStorage","getItem","user","localStorage","useState","setUser","recordar","setRecordar","data","setData","data1","setdata1","data2","setdata2","areas","setAreas","reportData","setRepData","pagina","setPagina","window","innerWidth","width","setWidth","personal","j","userData","length","Nombre","push","key","text","value","categoria","activo","inactivo","texto","caption","short","gradient","cumple","contexto","colores","breakpoint","Provider","ExcelDateToJSDate","serial","utc_days","Math","floor","date_info","Date","fractional_day","total_seconds","seconds","hours","minutes","getFullYear","getMonth","getDate","FechaStringShort","fecha","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","Home","setData1","setData2","filtros","setFiltros","estados","name","status","setStatus","grupoArea","setGrupoArea","area","setArea","setCategoria","activePeriod","setActPeriod","turno","setTurno","tipoReporte","setTipoReporte","rubros","Array","from","_","index","categorias_idx","lista","i","title","today","inicioDeSemana","yesterday","setDate","wd","getDay","semana","useContext","setColores","handleSemana","anno","substring","mes","dia","d","weekday","sacardata","a","datas","creds","require","doc","GoogleSpreadsheet","useServiceAccountAuth","loadInfo","sheet","sheetsById","getRows","rows","columnCount","cols","headerValues","encabezado","lastr","loadCells","startRowIndex","endRowIndex","startColumnIndex","endColumnIndex","getCell","datas_areas","unique","Set","map","item","grupo","sort","unshift","forEach","x","findIndex","y","Area","Tipo","Incumple","total","arr1","filter","Reporte","FechaRecorrido","orden","reduce","r","o","get","Object","assign","set","Map","values","cumplimiento","isNaN","ceil","b","arr","HandleTurnos","e","valor","target","id","tipo","reporte","periodo","cat","lugar","t","numTurno","slice","includes","reporteFiltrado","next","Turno","parseInt","arr2","Categoria","SubCategoria","incumple","arr3","useEffect","Grid","textAlign","verticalAlign","Dimmer","active","page","Loader","Row","Header","Button","Group","color","inverted","style","borderRadius","onClick","Or","columns","Column","size","basic","fluid","Icon","idx","padding","content","backgroundImage","Segment","borderStyle","borderWidth","borderColor","margin","as","Table","selectable","fixed","Body","Cell","rowSpan","toString","fill","console","log","Observacion","params","useParams","startDate","dd","mm","yyyy","hora","getHours","minutos","getMinutes","date","toISOString","ar","br","cr","dr","er","fr","gr","hr","ir","jr","kr","lr","mr","nr","or","pr","qr","rr","sr","tr","ur","vr","fecha_hora","nombre","rubro","observaciones","severidad","pac","fecha_cierre","responsable","anexo","confirmado","extension","nueva_fecha","detalle","anexo2","obsDetalle","persObservadas","aplica","personas","join","Container","Item","Image","src","Content","Description","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","auth","firestore","xltoDate","fechaStr","Tareas","myData","setMyData","myPac","setMyPac","activoID","setActivoID","totalPagina","setTotalPagina","setExtension","extDate","setExtDate","setDetalle","previewImg","saving","setSaving","preventDate","setPreventDate","pap","setpap","setImageAsFile","imgUrl","imageAsUrl","setImageAsUrl","setSubir","event","files","imageFile","reader","FileReader","preview","document","querySelector","onload","setAttribute","result","readAsDataURL","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","err","registrar","extendido","wr","xr","formula","saveUpdatedCells","display","alignItems","justifyContent","Pagination","defaultActivePage","ellipsisItem","icon","firstItem","lastItem","prevItem","nextItem","totalPages","onPageChange","activePage","List","round","height","overflowY","toUpperCase","FechaString","Checkbox","disabled","label","checked","onChange","Input","type","defaultValue","Form","TextArea","detalle_pac","placeholder","className","alt","priceEls","querySelectorAll","innerText","click","iniciar","Consultas","dataFound","setDataFound","inicio","setInicio","final","setFinal","activeIndex","setActiveIndex","buscar","setBuscar","creador","setCreador","activeItem","setActiveItem","open","setOpen","keyA","keyB","Modal","onClose","onOpen","image","wrapped","observador","observado","Actions","Accordion","Title","titleProps","Label","Dropdown","multiple","search","selection","divided","href","prevObject","Meta","Extra","Registros","dummyImg","setID","loading","setLoading","perfil","setPerfil","correo","setCorreo","step","setStep","setTipo","setCat","catData","setCatData","subCatData","setSubCatData","subCat","setSubCat","detalles","setDetalles","que","setQue","donde","setDonde","pacStep","setPacStep","involucrados","setInvolucrados","plan","setPlan","setStartDate","resp","setResp","segCat","useRef","segSubCat","setPreviewImg","imageAsFile","subir","guardar","setGuardar","confirmar","setConfirmar","setSeveridad","imgUpload","setImgUpload","history","useHistory","Blob","archivoSelect","error","ref","put","on","snapShot","child","getDownloadURL","then","fireBaseUrl","datas2","sheet2","rows2","handleTipoClick","current","focus","sacarAreas","datosUsuario","Perfil","datoResp","handleCatClick","handleStep","handleArea","UniqueID","now","addRow","Personas_Observadas","Detalle","Aplica","ids","notificar","codigo","templateParams","to_email","fecha_limite","qseb","observacion","imagen","registrado","emailjs","send","apiKeys","response","handleFireBaseUpload","header","actions","positive","labelPosition","Step","ordered","attached","unstackable","completed","Popup","trigger","circular","Ref","innerRef","Card","itemsPerRow","raised","ui","button","scrolling","clearable","handleImageUpload","Categorias","Login","password","setPassword","maxWidth","stacked","iconPosition","currentTarget","onChangeHandler","preventDefault","found","alert","login","Message","userInfo","floated","negative","removeItem","FechaStringLong","hour","minute","Schedule","persona","setPersona","setLugar","listaArea","setListaArea","setFecha","Usuario","Fecha","delete","FechaProgramado","sleep","milliseconds","currentDate","ReporteDeTurno","reportes","setReportes","sinFiltro","setSinFiltro","setCheckList","cats","setCats","setRubros","activeRubro","setActRubro","requerimientos","setReq","activeReq","setActiveR","percentage","setPercentage","duplicado","setDuplicado","setTipoRep","existingItems","url","img","getElementById","archivo","uploadTask","sacarReportes","location","opcional","aplican","self","indexOf","uniqueID","Id","FechaRegistro","PersonasObservadas","Imagen","handleCategorias","chklist","handleSubCat","handleCheck","chk","HandleTodos","handleOpcional","handleObservados","handleDetalles","handleWindowResize","addEventListener","removeEventListener","userArea","keys","toLowerCase","split","some","w","element","validar","Divider","secondary","filtro","Radio","backgroundColor","left","floating","Acto","reqIdx","requerimiento","pointing","Progress","percent","indicating","success","progress","Minuta","stackable","App","visible","setVisible","basename","Add","Menu","Link","to","position","Sidebar","Pushable","animation","onHide","vertical","direction","Pusher","exact","path","render","props","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a9cd6e75.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport userData from \"./employee.json\";\r\n\r\nexport const Contexto = React.createContext(null);\r\n\r\nexport default ({ children }) => {\r\n  let iniciado = null;\r\n  if (sessionStorage.getItem(\"user\")) {\r\n    iniciado = sessionStorage.user;\r\n  } else if (localStorage.getItem(\"user\")) {\r\n    iniciado = localStorage.user;\r\n  }\r\n  const [user, setUser] = useState(iniciado);\r\n  const [recordar, setRecordar] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [data1, setdata1] = useState();\r\n  const [data2, setdata2] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [reportData, setRepData] = useState();\r\n  const [pagina, setPagina] = useState();\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const personal = [];\r\n  for (var j = 0; j < userData.length; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  var breakpoint = 620;\r\n  const color = [\r\n    {\r\n      categoria: \"Calidad\",\r\n      activo: \"#FF5300\",\r\n      inactivo: \"#FF915C\",\r\n      texto: \"white\",\r\n      caption: \"Quality\",\r\n      short: \"Q\",\r\n      gradient: \"linear-gradient(to right,#fc4a1a,#f7b733)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Seguridad\",\r\n      activo: \"#5A0FC4\",\r\n      inactivo: \"#8857D1\",\r\n      texto: \"white\",\r\n      caption: \"Safety\",\r\n      short: \"S\",\r\n      gradient: \"linear-gradient(to right,#8E2DE2,#4A00E0)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Ambiente\",\r\n      activo: \"#00C37E\",\r\n      inactivo: \"#4ACFA0\",\r\n      texto: \"white\",\r\n      caption: \"Environment\",\r\n      short: \"E\",\r\n      gradient: \"linear-gradient(to right,#56ab2f,#a8e063)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Bioseguridad\",\r\n      activo: \"#FFE700\",\r\n      inactivo: \"#FFEF5C\",\r\n      texto: \"black\",\r\n      caption: \"BioS\",\r\n      short: \"B\",\r\n      gradient: \"linear-gradient(to right,#ffe259,#ffa751)\",\r\n      cumple: 100,\r\n    },\r\n  ];\r\n  const [colores, setColores] = useState(color);\r\n  const contexto = {\r\n    user: [user, setUser],\r\n    recordar: [recordar, setRecordar],\r\n    data: [data, setData],\r\n    areas: [areas, setAreas],\r\n    reportData: [reportData, setRepData],\r\n    personal: personal,\r\n    colores: [colores, setColores],\r\n    pagina: [pagina, setPagina],\r\n    width: [width, setWidth],\r\n    data1: [data1, setdata1],\r\n    data2: [data2, setdata2],\r\n    breakpoint: breakpoint,\r\n    userData: userData,\r\n  };\r\n\r\n  return <Contexto.Provider value={contexto}>{children}</Contexto.Provider>;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Dimmer,\r\n  Loader,\r\n  Grid,\r\n  Header,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  LabelSeries,\r\n  Hint,\r\n  HorizontalBarSeries,\r\n  DiscreteColorLegend,\r\n  RadialChart,\r\n} from \"react-vis\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Home({ user }) {\r\n  const [data, setData] = useState();\r\n  const [data1, setData1] = useState(); // para detallar cada categoria\r\n  const [data2, setData2] = useState(); // para detallar cada categoria por area\r\n  const [catId, setCatId] = useState();\r\n  const [detalleArea, setDArea] = useState();\r\n  const [hoy, setHoy] = useState();\r\n  const [ayer, setAyer] = useState();\r\n  const [mes, setMes] = useState();\r\n  const [filtros, setFiltros] = useState(false);\r\n  const [chartData, setChartData] = useState();\r\n  const [chartMes, setChartMes] = useState();\r\n  const [chartRubros, setChartRubros] = useState();\r\n  const [mesAnterior, setMesAnterior] = useState();\r\n  const [aplicable, setAplicable] = useState();\r\n  const [prueba, setPrueba] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [grupoArea, setGrupoArea] = useState();\r\n  const [area, setArea] = useState(\"Todas\");\r\n  const [categoria, setCategoria] = useState();\r\n  const [leyendaMes, setLeyendaMes] = useState();\r\n  const [leyenda, setLeyenda] = useState();\r\n  const [activeIndex, setActIdx] = useState();\r\n  const [activePeriod, setActPeriod] = useState(\"Esta Semana\");\r\n  const [turno, setTurno] = useState(\"Todos\");\r\n  const [tipoReporte, setTipoReporte] = useState(\"Reporte de Turno\");\r\n  //Fechas\r\n  //fechas estan erradas hay que corregir\r\n  const dias = Array.from({ length: 31 }, (_, index) => index + 1);\r\n  const meses = Array.from({ length: 12 }, (_, index) => index + 1);\r\n  const rubros = [\"Seguridad\", \"Calidad\", \"Ambiental\", \"Bioseguridad\"];\r\n  const categorias_idx = [\"Q\", \"S\", \"E\", \"B\"];\r\n  const lista = [];\r\n  for (var i = 0; i < rubros.length; i++) {\r\n    lista.push({ title: rubros[i] });\r\n  }\r\n  let today = new Date();\r\n  let inicioDeSemana = new Date();\r\n  let yesterday = new Date(today);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  let wd = today.getDay();\r\n  wd === 0 ? (wd = 7) : (wd = wd);\r\n  //Fechas\r\n  const [dataSemana, setDS] = useState();\r\n  const [semana, setSemana] = useState(\r\n    FechaStringShort(inicioDeSemana.setDate(inicioDeSemana.getDate() - wd + 1))\r\n  );\r\n  const turnos = [\"Todos\", \"Turno 1\", \"Turno 2\", \"Turno 3\"];\r\n  const periodos = [\"Esta Semana\", \"Este Mes\", \"Hoy\", \"Ayer\", \"Seleccionar\"];\r\n  const [periodo, setPeriodo] = useState();\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  function handleSemana(fecha) {\r\n    var anno = fecha.substring(0, 4);\r\n    var mes = fecha.substring(5, 7);\r\n    var dia = fecha.substring(8, 10);\r\n    var d = new Date(anno, mes - 1, dia);\r\n    let weekday = d.getDay();\r\n    weekday === 0 ? (weekday = 7) : (weekday = weekday);\r\n    d.setDate(d.getDate() - weekday + 1);\r\n    return FechaStringShort(d);\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    setStatus(estados[1].caption);\r\n    let data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    let sheet = doc.sheetsById[1249329599];\r\n    let rows = await sheet.getRows();\r\n    let cols = await sheet.columnCount;\r\n    let encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    //AREAS\r\n    sheet = doc.sheetsById[1705686078];\r\n    rows = await sheet.getRows();\r\n    cols = await sheet.columnCount;\r\n    encabezado = await sheet.headerValues;\r\n    let datas_areas = [];\r\n    lastr = rows.length + 1;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas_areas.push(data);\r\n    }\r\n    setAreas(datas_areas);\r\n    const unique = [...new Set(datas_areas.map((item) => item.grupo))];\r\n    unique.sort();\r\n    unique.unshift(\"Todas\");\r\n    setGrupoArea(unique);\r\n    //AREAS\r\n    datas.forEach((x) => {\r\n      x.grupo =\r\n        datas_areas[datas_areas.findIndex((y) => y.name === x.Area)].grupo;\r\n      x.short = colores[colores.findIndex((y) => y.categoria === x.Tipo)].short;\r\n      x.activo =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].activo;\r\n      x.inactivo =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].inactivo;\r\n      x.gradient =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].gradient;\r\n      x.caption =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].caption;\r\n      x.texto = colores[colores.findIndex((y) => y.categoria === x.Tipo)].texto;\r\n      if (x.Incumple === \"Y\") {\r\n        x.cumple = 0;\r\n      } else {\r\n        x.cumple = 1;\r\n      }\r\n      x.total = 1;\r\n    });\r\n    let arr1 = datas\r\n      .filter(\r\n        (item) =>\r\n          item.Reporte === tipoReporte &&\r\n          handleSemana(\r\n            FechaStringShort(ExcelDateToJSDate(item.FechaRecorrido))\r\n          ) == semana\r\n      )\r\n      .map(\r\n        ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        }) => ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        })\r\n      );\r\n\r\n    arr1.forEach((x) => {\r\n      x.categoria = x.Tipo;\r\n      delete x.Tipo;\r\n      x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n    });\r\n    arr1 = [\r\n      ...arr1\r\n        .reduce((r, o) => {\r\n          const key = o.categoria;\r\n          const item =\r\n            r.get(key) ||\r\n            Object.assign({}, o, {\r\n              cumple: 0,\r\n              total: 0,\r\n            });\r\n\r\n          item.cumple += o.cumple;\r\n          item.total += o.total;\r\n          return r.set(key, item);\r\n        }, new Map())\r\n        .values(),\r\n    ];\r\n    arr1.forEach((x) => {\r\n      var cumplimiento = isNaN(x.cumple / x.total)\r\n        ? \"-\"\r\n        : Math.ceil((x.cumple / x.total) * 100) + \"%\";\r\n      x.cumplimiento = cumplimiento;\r\n    });\r\n    arr1.sort((a, b) => a.orden - b.orden);\r\n\r\n    setData(datas);\r\n    let arr = [...colores];\r\n    arr.forEach((x) => {\r\n      let cumplimiento =\r\n        arr1.filter((item) => item.categoria === x.categoria).length != 0\r\n          ? arr1.filter((item) => item.categoria === x.categoria)[0]\r\n              .cumplimiento\r\n          : \"-\";\r\n      x.cumplimiento = cumplimiento;\r\n    });\r\n    setColores(arr);\r\n    setStatus();\r\n  };\r\n\r\n  function HandleTurnos(e, { name }) {\r\n    var valor = e.target.id;\r\n    var tipo = e.target.name;\r\n    if (!tipo) {\r\n      tipo = name;\r\n    }\r\n    if (tipo) {\r\n      let reporte = tipoReporte;\r\n      let periodo = activePeriod;\r\n      let cat = categoria;\r\n      let lugar = area;\r\n      let t = turno;\r\n      let numTurno = t.slice(-1);\r\n      setCategoria();\r\n      if (tipo.includes(\"Turno\")) {\r\n        setTurno(valor);\r\n        numTurno = valor.slice(-1);\r\n        t = valor;\r\n      } else if (tipo.includes(\"Reporte\")) {\r\n        setTipoReporte(valor);\r\n        reporte = valor;\r\n      } else if (tipo.includes(\"Area\")) {\r\n        setArea(valor);\r\n        lugar = valor;\r\n      } else if (tipo.includes(\"btn\")) {\r\n        setCategoria(valor);\r\n        cat = valor;\r\n      } else {\r\n        setActPeriod(valor);\r\n        periodo = valor;\r\n      }\r\n      const reporteFiltrado = data.filter(\r\n        (next) =>\r\n          next.Reporte === reporte &&\r\n          (periodo === \"Esta Semana\"\r\n            ? handleSemana(\r\n                FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n              ) == semana\r\n            : periodo === \"Este Mes\"\r\n            ? FechaStringShort(\r\n                ExcelDateToJSDate(next.FechaRecorrido)\r\n              ).substring(5, 7) === FechaStringShort(today).substring(5, 7)\r\n            : periodo === \"Hoy\"\r\n            ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n              FechaStringShort(today)\r\n            : periodo === \"Ayer\"\r\n            ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n              FechaStringShort(yesterday)\r\n            : true) &&\r\n          (reporte.includes(\"Turno\") && t !== \"Todos\"\r\n            ? next.Turno === parseInt(numTurno)\r\n            : true) &&\r\n          (lugar !== \"Todas\" ? next.grupo === lugar : true)\r\n      );\r\n      let arr1 = reporteFiltrado.map(\r\n        ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        }) => ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        })\r\n      );\r\n      arr1.forEach((x) => {\r\n        x.categoria = x.Tipo;\r\n        delete x.Tipo;\r\n        x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n      });\r\n      arr1 = [\r\n        ...arr1\r\n          .reduce((r, o) => {\r\n            const key = o.categoria;\r\n            const item =\r\n              r.get(key) ||\r\n              Object.assign({}, o, {\r\n                cumple: 0,\r\n                total: 0,\r\n              });\r\n\r\n            item.cumple += o.cumple;\r\n            item.total += o.total;\r\n            return r.set(key, item);\r\n          }, new Map())\r\n          .values(),\r\n      ];\r\n      arr1.forEach((x) => {\r\n        var cumplimiento = isNaN(x.cumple / x.total)\r\n          ? \"-\"\r\n          : Math.ceil((x.cumple / x.total) * 100) + \"%\";\r\n        x.cumplimiento = cumplimiento;\r\n      });\r\n      arr1.sort((a, b) => a.orden - b.orden);\r\n      let arr = [...colores];\r\n      arr.forEach((x) => {\r\n        let cumplimiento =\r\n          arr1.filter((item) => item.categoria === x.categoria).length != 0\r\n            ? arr1.filter((item) => item.categoria === x.categoria)[0]\r\n                .cumplimiento\r\n            : \"-\";\r\n        x.cumplimiento = cumplimiento;\r\n      });\r\n      setColores(arr);\r\n      if (tipo.includes(\"btn\") || cat) {\r\n        let arr2 = reporteFiltrado\r\n          .filter((item) => item.Tipo == valor && item.Incumple == \"Y\")\r\n          .map(\r\n            ({\r\n              Tipo,\r\n              Categoria,\r\n              SubCategoria,\r\n              Area,\r\n              short,\r\n              caption,\r\n              texto,\r\n              activo,\r\n              inactivo,\r\n              gradient,\r\n            }) => ({\r\n              Tipo,\r\n              Categoria,\r\n              SubCategoria,\r\n              Area,\r\n              short,\r\n              caption,\r\n              texto,\r\n              activo,\r\n              inactivo,\r\n              gradient,\r\n            })\r\n          );\r\n        arr2.forEach((x) => {\r\n          x.incumple = 1;\r\n          x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n        });\r\n        let arr3 = arr2.map(({ Area, ...remainingAttrs }) => remainingAttrs);\r\n        arr3 = [\r\n          ...arr3\r\n            .reduce((r, o) => {\r\n              const key = o.Tipo + \"-\" + o.Categoria;\r\n              const item =\r\n                r.get(key) ||\r\n                Object.assign({}, o, {\r\n                  incumple: 0,\r\n                });\r\n\r\n              item.incumple += o.incumple;\r\n              return r.set(key, item);\r\n            }, new Map())\r\n            .values(),\r\n        ];\r\n        arr2 = [\r\n          ...arr2\r\n            .reduce((r, o) => {\r\n              const key = o.Tipo + \"-\" + o.Categoria + \"-\" + o.SubCategoria;\r\n              const item =\r\n                r.get(key) ||\r\n                Object.assign({}, o, {\r\n                  incumple: 0,\r\n                });\r\n\r\n              item.incumple += o.incumple;\r\n              return r.set(key, item);\r\n            }, new Map())\r\n            .values(),\r\n        ];\r\n        arr3.sort((a, b) => b.incumple - a.incumple);\r\n        arr2.sort((a, b) => b.incumple - a.incumple);\r\n        setData1(arr3);\r\n        setData2(arr2);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n        <Dimmer\r\n          active={\r\n            status || estados.filter((x) => x.caption === status).length != 0\r\n          }\r\n          page\r\n        >\r\n          <Loader>{status}</Loader>\r\n        </Dimmer>\r\n        <Grid.Row>\r\n          <Header>\r\n            <Button.Group>\r\n              <Button\r\n                id=\"Reporte de Turno\"\r\n                color=\"red\"\r\n                name=\"ReporteT\"\r\n                inverted={tipoReporte !== \"Reporte de Turno\"}\r\n                style={{ borderRadius: \"15px\" }}\r\n                onClick={HandleTurnos}\r\n              >\r\n                Reporte de Turno\r\n              </Button>\r\n              <Button.Or color=\"red\" text={\"o\"} />\r\n              <Button\r\n                id=\"Reporte de Recorrido\"\r\n                color=\"red\"\r\n                name=\"ReporteR\"\r\n                inverted={tipoReporte !== \"Reporte de Recorrido\"}\r\n                style={{ borderRadius: \"15px\" }}\r\n                onClick={HandleTurnos}\r\n              >\r\n                Reporte de Recorrido\r\n              </Button>\r\n            </Button.Group>\r\n          </Header>\r\n        </Grid.Row>\r\n        <Grid.Row columns={4}>\r\n          <Grid.Column>\r\n            <Button\r\n              size=\"mini\"\r\n              basic\r\n              style={{ borderRadius: \"15px\" }}\r\n              fluid\r\n              onClick={() => {\r\n                filtros ? setFiltros(false) : setFiltros(true);\r\n              }}\r\n            >\r\n              <Icon name=\"arrow down\"></Icon> Filtros\r\n            </Button>\r\n          </Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n        </Grid.Row>\r\n        {filtros && (\r\n          <>\r\n            <b>Periodo</b>\r\n            <Grid.Row>\r\n              {periodos.map((x, idx) => {\r\n                return (\r\n                  <Grid.Column width={4} style={{ padding: \"2px\" }}>\r\n                    <Button\r\n                      size=\"tiny\"\r\n                      color=\"red\"\r\n                      inverted\r\n                      content={x}\r\n                      name={\"Periodo\" + idx}\r\n                      id={x}\r\n                      active={activePeriod === x}\r\n                      fluid\r\n                      style={{ borderRadius: \"15px\" }}\r\n                      onClick={HandleTurnos}\r\n                    />\r\n                  </Grid.Column>\r\n                );\r\n              })}\r\n            </Grid.Row>\r\n            <b>Area</b>\r\n            <Grid.Row>\r\n              {grupoArea.map((x, idx) => {\r\n                return (\r\n                  <Grid.Column width={5} style={{ padding: \"2px\" }}>\r\n                    <Button\r\n                      size=\"tiny\"\r\n                      color=\"red\"\r\n                      inverted\r\n                      content={x}\r\n                      name={\"Area\" + idx}\r\n                      id={x}\r\n                      active={area === x}\r\n                      fluid\r\n                      style={{ borderRadius: \"15px\" }}\r\n                      onClick={HandleTurnos}\r\n                    />\r\n                  </Grid.Column>\r\n                );\r\n              })}\r\n            </Grid.Row>\r\n            {tipoReporte === \"Reporte de Turno\" && <b>Turno</b>}\r\n            <Grid.Row columns=\"equal\">\r\n              {tipoReporte === \"Reporte de Turno\" &&\r\n                turnos.map((x, idx) => {\r\n                  return (\r\n                    <Grid.Column>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"red\"\r\n                        inverted\r\n                        content={x}\r\n                        name={\"Turno\" + idx}\r\n                        id={x}\r\n                        active={turno === x}\r\n                        fluid\r\n                        style={{ borderRadius: \"15px\" }}\r\n                        onClick={HandleTurnos}\r\n                      />\r\n                    </Grid.Column>\r\n                  );\r\n                })}\r\n            </Grid.Row>\r\n          </>\r\n        )}\r\n        {width <= breakpoint && data && (\r\n          <Grid.Row columns={2}>\r\n            {colores.map((x, idx) => {\r\n              if (idx < 2) {\r\n                return (\r\n                  <Grid.Column>\r\n                    <Button\r\n                      id={x.categoria}\r\n                      name={\"btn\" + x.short}\r\n                      onClick={HandleTurnos}\r\n                      fluid\r\n                      style={{\r\n                        backgroundImage: x.gradient,\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      <h1\r\n                        id={x.categoria}\r\n                        name={\"btn_title\" + x.short}\r\n                        style={{\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        {x.cumplimiento}\r\n                      </h1>\r\n                      <p\r\n                        id={x.categoria}\r\n                        name={\"btn_text\" + x.short}\r\n                        style={{\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        {x.categoria}\r\n                      </p>\r\n                    </Button>\r\n                  </Grid.Column>\r\n                );\r\n              }\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n        {width <= breakpoint && data && (\r\n          <Grid.Row columns={2}>\r\n            {colores.map((x, idx) => {\r\n              if (idx >= 2) {\r\n                return (\r\n                  <Grid.Column>\r\n                    <Button\r\n                      id={x.categoria}\r\n                      name={\"btn\" + x.short}\r\n                      onClick={HandleTurnos}\r\n                      fluid\r\n                      style={{\r\n                        backgroundImage: x.gradient,\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      <h1\r\n                        id={x.categoria}\r\n                        name={\"btn_title\" + x.short}\r\n                        style={{\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        {x.cumplimiento}\r\n                      </h1>\r\n                      <p\r\n                        id={x.categoria}\r\n                        name={\"btn_text\" + x.short}\r\n                        style={{\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        {x.categoria}\r\n                      </p>\r\n                    </Button>\r\n                  </Grid.Column>\r\n                );\r\n              }\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n        {width > breakpoint && data && (\r\n          <Grid.Row columns={4}>\r\n            {colores.map((x, idx) => {\r\n              return (\r\n                <Grid.Column>\r\n                  <Button\r\n                    id={x.categoria}\r\n                    name={\"btn\" + x.short}\r\n                    onClick={HandleTurnos}\r\n                    fluid\r\n                    style={{\r\n                      backgroundImage: x.gradient,\r\n                      color: x.texto,\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    <h1\r\n                      id={x.categoria}\r\n                      name={\"btn_title\" + x.short}\r\n                      style={{\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      {x.cumplimiento}\r\n                    </h1>\r\n                    <p\r\n                      id={x.categoria}\r\n                      name={\"btn_text\" + x.short}\r\n                      style={{\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      {x.categoria}\r\n                    </p>\r\n                  </Button>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n      </Grid>\r\n      <br />\r\n      {categoria && (\r\n        <Segment\r\n          basic\r\n          style={{\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"2px\",\r\n            borderColor: data1[0].inactivo,\r\n            borderRadius: \"15px\",\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                {data1 && data2 && <Header as=\"h1\">{categoria}</Header>}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row columns={1} padding>\r\n              <Grid.Column>\r\n                {categoria === \"Bioseguridad\" &&\r\n                  data2.filter((x) => x.Tipo === categoria).length != 0 && (\r\n                    <Table selectable fixed>\r\n                      <Table.Body>\r\n                        <Table.Row>\r\n                          <Table.Cell\r\n                            rowSpan={data2\r\n                              .filter((x) => x.Tipo === categoria)\r\n                              .length.toString()}\r\n                          >\r\n                            <Header as=\"h2\">Bioseguridad</Header>\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            {\r\n                              data2.filter((x) => x.Tipo === categoria)[0]\r\n                                .SubCategoria\r\n                            }\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            {data2.filter((x) => x.Tipo === categoria)[0]\r\n                              .incumple &&\r\n                              Array(\r\n                                data2.filter((x) => x.Tipo === categoria)[0]\r\n                                  .incumple\r\n                              )\r\n                                .fill(0)\r\n                                .map((_, i) => (\r\n                                  <Icon name=\"x\" color=\"red\"></Icon>\r\n                                ))}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                        {data2\r\n                          .filter((x) => x.Tipo === categoria)\r\n                          .map((x, idx) => {\r\n                            if (idx > 0) {\r\n                              return (\r\n                                <Table.Row>\r\n                                  <Table.Cell>{x.SubCategoria}</Table.Cell>\r\n                                  <Table.Cell>\r\n                                    {x.incumple &&\r\n                                      Array(x.incumple)\r\n                                        .fill(0)\r\n                                        .map((_, i) => (\r\n                                          <Icon name=\"x\" color=\"red\"></Icon>\r\n                                        ))}\r\n                                  </Table.Cell>\r\n                                </Table.Row>\r\n                              );\r\n                            }\r\n                          })}\r\n                      </Table.Body>\r\n                    </Table>\r\n                  )}\r\n                {data1 && categoria !== \"Bioseguridad\" && (\r\n                  <Table fixed selectable>\r\n                    <Table.Body>\r\n                      {data1 &&\r\n                        categoria !== \"Bioseguridad\" &&\r\n                        data1.map((x) => {\r\n                          return (\r\n                            <>\r\n                              <Table.Row\r\n                                onClick={() => {\r\n                                  console.log(data2);\r\n                                }}\r\n                              >\r\n                                <Table.Cell>\r\n                                  <Header as=\"h2\">{x.Categoria}</Header>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                  {x.incumple &&\r\n                                    Array(x.incumple)\r\n                                      .fill(0)\r\n                                      .map((_, i) => (\r\n                                        <Icon name=\"x\" color=\"red\"></Icon>\r\n                                      ))}\r\n                                </Table.Cell>\r\n                              </Table.Row>\r\n                            </>\r\n                          );\r\n                        })}\r\n                    </Table.Body>\r\n                  </Table>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/fondo.bff34455.jpg\";","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Card,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Observacion({ user }) {\r\n  let params = useParams();\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas = datas.filter((item) => {\r\n      return item.id === params.id;\r\n    });\r\n\r\n    if (datas.length > 1) {\r\n      var personas = datas.map((e) => e.persObservadas).join(\", \");\r\n      console.log(personas);\r\n      datas[0].persObservadas = personas;\r\n      datas = datas.slice(0, 1);\r\n    }\r\n\r\n    setData(datas);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    console.log(params);\r\n    !data && sacardata();\r\n    data && console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {data && (\r\n        <Segment\r\n          onClick={() => {\r\n            console.log(data);\r\n          }}\r\n        >\r\n          <Item>\r\n            <Item.Image size=\"medium\" src={data[0].anexo} />\r\n\r\n            <Item.Content>\r\n              <Item.Header as=\"h2\">\r\n                {data[0].rubro + \" - \" + data[0].categoria}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                <p>\r\n                  <b>Detalle: </b> {data[0].observaciones}\r\n                  {data[0].obsDetalle && \" : \" + data[0].obsDetalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(data[0].fecha).toISOString().slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {data[0].area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {data[0].nombre}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {data[0].persObservadas}\r\n                </p>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Observacion;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD2qP-hydl9iaoxa0FO07FG5KDu9d3bGuA\",\r\n  authDomain: \"sasso-test-285920.firebaseapp.com\",\r\n  databaseURL: \"https://sasso-test-285920.firebaseio.com\",\r\n  projectId: \"sasso-test-285920\",\r\n  storageBucket: \"sasso-test-285920.appspot.com\",\r\n  messagingSenderId: \"191632707331\",\r\n  appId: \"1:191632707331:web:954ff5c5c38d8dcae4e336\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst getUserDocument = async (uid) => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching user\", error);\r\n  }\r\n};\r\nconst generateUserDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n  if (!snapshot.exists) {\r\n    const { Nombre, Correo, Apellido } = user;\r\n    try {\r\n      await userRef.set({\r\n        Nombre,\r\n        Correo,\r\n        Apellido,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user document\", error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\nexport {\r\n  storage,\r\n  auth,\r\n  firestore,\r\n  generateUserDocument,\r\n  getUserDocument,\r\n  firebase as default,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Statistic,\r\n  Divider,\r\n  Dimmer,\r\n  Loader,\r\n  Pagination,\r\n  Card,\r\n  Label,\r\n  Checkbox,\r\n  TextArea,\r\n  List,\r\n  Header,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${da}-${mo}-${ye}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction xltoDate(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo}-${da}`;\r\n  if (mo < 10) {\r\n    fechaStr = `${ye}-0${mo}-${da}`;\r\n  }\r\n\r\n  return fechaStr;\r\n}\r\n\r\nfunction Tareas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [data, setData] = useState(\"\");\r\n  const [myData, setMyData] = useState(\"\");\r\n  const [myPac, setMyPac] = useState(\"\");\r\n  const [activoID, setActivoID] = useState(\"\");\r\n  const [pagina, setPagina] = useState(1);\r\n  const [totalPagina, setTotalPagina] = useState(0);\r\n  const [extension, setExtension] = useState(\"N\");\r\n  const [extDate, setExtDate] = useState(date);\r\n  const [detalle, setDetalle] = useState(\"\");\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [saving, setSaving] = useState(false);\r\n  const [preventDate, setPreventDate] = useState(date);\r\n  const [pap, setpap] = useState(\"\");\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      reader.onload = function (e) {\r\n        preview.setAttribute(\"src\", e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      preview = document.querySelector(\"#blah\");\r\n      preview.setAttribute(\"src\", \"\");\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  const handleFireBaseUpload = (e) => {\r\n    if (subir) {\r\n      e.preventDefault();\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      }\r\n      const uploadTask = storage\r\n        .ref(`/images/${imageAsFile.name}`)\r\n        .put(imageAsFile);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapShot) => {\r\n          //takes a snap shot of the process as it is happening\r\n          console.log(snapShot);\r\n        },\r\n        (err) => {\r\n          //catches the errors\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          // gets the functions from storage refences the image storage in firebase by the children\r\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n          storage\r\n            .ref(\"images\")\r\n            .child(imageAsFile.name)\r\n            .getDownloadURL()\r\n            .then((fireBaseUrl) => {\r\n              setImageAsUrl((prevObject) => ({\r\n                ...prevObject,\r\n                imgUrl: fireBaseUrl,\r\n              }));\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.responsable === user;\r\n      })\r\n    );\r\n    setMyPac(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      })\r\n    );\r\n    setTotalPagina(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      }).length\r\n    );\r\n    try {\r\n      setActivoID(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].id\r\n      );\r\n      setExtension(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].extension\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setSaving(true);\r\n    let extendido = extension;\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (sheet.getCell(j, 18).value === activoID) {\r\n        const mr = sheet.getCell(j, 12);\r\n        const or = sheet.getCell(j, 14);\r\n        const pr = sheet.getCell(j, 15);\r\n        const qr = sheet.getCell(j, 16);\r\n        const rr = sheet.getCell(j, 17);\r\n        const wr = sheet.getCell(j, 22);\r\n        const xr = sheet.getCell(j, 23);\r\n        mr.value = \"Pendiente Aprobacion\";\r\n        or.value = extendido;\r\n        if (extDate) {\r\n          pr.formula =\r\n            \"=date(\" +\r\n            extDate.substring(0, 4) +\r\n            \",\" +\r\n            extDate.substring(5, 7) +\r\n            \",\" +\r\n            extDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (pap) {\r\n          wr.value = pap;\r\n        }\r\n        if (preventDate) {\r\n          xr.formula =\r\n            \"=date(\" +\r\n            preventDate.substring(0, 4) +\r\n            \",\" +\r\n            preventDate.substring(5, 7) +\r\n            \",\" +\r\n            preventDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (detalle) {\r\n          qr.value = detalle;\r\n        }\r\n        if (imageAsUrl.imgUrl) {\r\n          rr.value = imageAsUrl.imgUrl;\r\n        }\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n    setSaving(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container>\r\n      <Dimmer active={!data || saving} page>\r\n        <Loader>{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      {user ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Pagination\r\n              defaultActivePage={1}\r\n              ellipsisItem={{\r\n                content: <Icon name=\"ellipsis horizontal\" />,\r\n                icon: true,\r\n              }}\r\n              firstItem={{\r\n                content: <Icon name=\"angle double left\" />,\r\n                icon: true,\r\n              }}\r\n              lastItem={{\r\n                content: <Icon name=\"angle double right\" />,\r\n                icon: true,\r\n              }}\r\n              prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\r\n              nextItem={{ content: <Icon name=\"angle right\" />, icon: true }}\r\n              totalPages={totalPagina}\r\n              onPageChange={(e, { activePage }) => {\r\n                setPagina(activePage);\r\n                setActivoID(myPac[activePage - 1].id);\r\n                setSubir(false);\r\n                setImageAsUrl(\"\");\r\n                setImageAsFile(\"\");\r\n                setExtension(myPac[activePage - 1].extension);\r\n                setExtension(date);\r\n                var preview = document.querySelector(\"#blah\");\r\n                preview.setAttribute(\"src\", \"\");\r\n                var archivoSelect = document.querySelector(\"#anexoImg\");\r\n                archivoSelect.value = \"\";\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <Segment>\r\n            <Header>Tareas</Header>\r\n            <List>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" />\r\n                <List.Content>\r\n                  <b>{myData.length} Acciones Totales</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"red\" />\r\n                <List.Content>\r\n                  <b>{myPac.length} Acciones Pendientes</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"green\" />\r\n                <List.Content>\r\n                  <b>\r\n                    {100 - Math.round((myPac.length / myData.length) * 100, 2)}{\" \"}\r\n                    % completada\r\n                  </b>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Segment>\r\n          <Segment\r\n            style={{\r\n              height: \"60vh\",\r\n              overflowY: \"scroll\",\r\n            }}\r\n          >\r\n            {myPac && myPac.length !== 0 ? (\r\n              <>\r\n                <Header>{myPac[pagina - 1].rubro.toUpperCase()}</Header>\r\n                <p>\r\n                  {myPac[pagina - 1].categoria}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].area}\r\n                  <br></br>\r\n                  Registrado por: {myPac[pagina - 1].nombre}\r\n                  <br></br>\r\n                  Hallazgo: {myPac[pagina - 1].observaciones}\r\n                </p>\r\n                <Header>Acciones Tomadas</Header>\r\n                <p>{myPac[pagina - 1].pac}</p>\r\n                <p>\r\n                  Fecha Limite Inicial:{\" \"}\r\n                  {FechaString(\r\n                    ExcelDateToJSDate(myPac[pagina - 1].fecha_cierre)\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" ? (\r\n                    <Checkbox\r\n                      disabled\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      checked\r\n                    />\r\n                  ) : (\r\n                    <Checkbox\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      onChange={() => {\r\n                        if (extension !== \"N\") {\r\n                          setExtension(\"N\");\r\n                        } else {\r\n                          setExtension(\"Y\");\r\n                        }\r\n                      }}\r\n                      checked={extension === \"Y\"}\r\n                    />\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" || extension === \"Y\" ? (\r\n                    <Input\r\n                      size=\"mini\"\r\n                      type=\"date\"\r\n                      onChange={(e) => {\r\n                        setExtDate(e.target.value);\r\n                      }}\r\n                      defaultValue={\r\n                        myPac[pagina - 1].extension === \"Y\"\r\n                          ? xltoDate(\r\n                              ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                            )\r\n                          : date\r\n                      }\r\n                    />\r\n                  ) : null}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Detalle Adicional\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"pacDetail\"\r\n                      name=\"planDetail\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      value={myPac[pagina - 1].detalle_pac}\r\n                      onChange={(e, { value }) => {\r\n                        setDetalle(value);\r\n                      }}\r\n                      placeholder=\"Detalle adicional de la acción tomada...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Acciones Preventivas</Header>\r\n                  <Input\r\n                    size=\"mini\"\r\n                    type=\"date\"\r\n                    onChange={(e) => {\r\n                      setPreventDate(e.target.value);\r\n                    }}\r\n                    defaultValue={\r\n                      myPac[pagina - 1].extension === \"Y\"\r\n                        ? xltoDate(\r\n                            ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                          )\r\n                        : date\r\n                    }\r\n                  />\r\n                  <br></br>\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"ppreventiva\"\r\n                      name=\"ppreventiva\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      onChange={(e, { value }) => {\r\n                        setpap(value);\r\n                      }}\r\n                      placeholder=\"Detalle de acción preventiva...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={handleImageUpload}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </p>\r\n\r\n                <div className=\"ui two buttons\">\r\n                  <Button color=\"yellow\" onClick={registrar}>\r\n                    Guardar\r\n                  </Button>\r\n                  <Button color=\"green\">Solicitar Aprobacion</Button>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Tareas;\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Modal,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Consultas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    setBuscar(true);\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas.sort(function (a, b) {\r\n      var keyA = a.fecha_hora,\r\n        keyB = b.fecha_hora;\r\n      // Compare the 2 dates\r\n      if (keyA > keyB) return -1;\r\n      if (keyA < keyB) return 1;\r\n      return 0;\r\n    });\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.nombre === user;\r\n      })\r\n    );\r\n    setDataFound(\r\n      datas.filter((item) => {\r\n        if (creador.length !== 0) {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final &&\r\n            creador.includes(item.nombre)\r\n          );\r\n        } else {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final\r\n          );\r\n        }\r\n      })\r\n    );\r\n    setBuscar(false);\r\n    setActiveIndex(-1);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    !data && sacardata();\r\n    data && console.log(myData);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Segment>\r\n        {activeItem && (\r\n          <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n          >\r\n            <Modal.Header>{activeItem.observaciones}</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={activeItem.anexo} wrapped />\r\n              <Modal.Description>\r\n                <Header>{activeItem.rubro + \"-\" + activeItem.categoria}</Header>\r\n                <p>\r\n                  <b>Detalle: </b> {activeItem.detalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(activeItem.fecha)\r\n                    .toISOString()\r\n                    .slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {activeItem.area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {activeItem.observador}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {activeItem.observado}\r\n                </p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"green\" onClick={() => setOpen(false)}>\r\n                OK\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        )}\r\n\r\n        <Dimmer active={buscar} page>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n        <Accordion fluid>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            Filtros\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            <>\r\n              <Input\r\n                label=\"Desde\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setInicio(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value > final && setFinal(e.target.value);\r\n                }}\r\n                value={inicio}\r\n                defaultValue={inicio}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Input\r\n                label=\"Hasta\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setFinal(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value < inicio && setInicio(e.target.value);\r\n                }}\r\n                value={final}\r\n                defaultValue={final}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Label>Registrado por </Label>\r\n              <Dropdown\r\n                fluid\r\n                multiple\r\n                search\r\n                selection\r\n                value={creador}\r\n                placeholder=\"Registrado por...\"\r\n                options={personal}\r\n                onChange={(e, { value }) => {\r\n                  setCreador(value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Button onClick={sacardata}>Buscar</Button>\r\n            </>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n      {dataFound && (\r\n        <Segment>\r\n          <Item.Group divided>\r\n            {dataFound.map((item) => (\r\n              <Item key={item.id}>\r\n                <Item.Content>\r\n                  <Item.Header\r\n                    as=\"a\"\r\n                    href={\"/observacion/\" + item.id}\r\n                    onClick={(e) => {\r\n                      setActiveItem((prevObject) => ({\r\n                        ...prevObject,\r\n                        id: item.id,\r\n                        rubro: item.rubro,\r\n                        categoria: item.categoria,\r\n                        observaciones: item.observaciones,\r\n                        detalle: item.obsDetalle,\r\n                        area: item.area,\r\n                        fecha: item.fecha,\r\n                        observador: item.nombre,\r\n                        observado: item.persObservadas,\r\n                        anexo: item.anexo ? item.anexo : dummyImg,\r\n                      }));\r\n                      //setOpen(true);\r\n                    }}\r\n                  >\r\n                    {item.rubro + \" - \" + item.categoria}\r\n                  </Item.Header>\r\n                  <Item.Meta>{item.observaciones}</Item.Meta>\r\n                  <Item.Description>\r\n                    {item.area +\r\n                      \" - \" +\r\n                      ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10)}\r\n                  </Item.Description>\r\n                  <Item.Extra>Observador:{item.nombre}</Item.Extra>\r\n                  <Item.Extra>\r\n                    Personas Observadas:{item.persObservadas}\r\n                  </Item.Extra>\r\n                  <Item.Extra>{item.obsDetalle}</Item.Extra>\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n          </Item.Group>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Consultas;\r\n","export default {\r\n  USER_ID: \"user_1s8Jx16sWB2djLHeed4yw\",\r\n  TEMPLATE_ID: \"template_oc6ugfi\",\r\n};\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Registros({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [idUnico, setID] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n  const [imgUpload, setImgUpload] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/images/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"images\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n                setImgUpload(fireBaseUrl);\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:E\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 4);\r\n      datas.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        src: cr.value,\r\n      });\r\n    }\r\n    setData(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  const handleTipoClick = (e) => {\r\n    if (tipo === e.target.name) {\r\n      setTipo(\"\");\r\n    } else {\r\n      setTipo(e.target.name);\r\n      console.log(e.target.name);\r\n      segCat.current.focus();\r\n      setCat(\"\");\r\n      setSubCat(\"\");\r\n      setSubCatData(\"\");\r\n    }\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    }\r\n  }, [areas]);\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  const handleCatClick = (e, { name }) => {\r\n    setSubCat(\"\");\r\n    setSubCatData(\"\");\r\n    setCat(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleStep = (e, { name }) => {\r\n    setStep(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleArea = (e, { name }) => {\r\n    setArea(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setConfirmar(true);\r\n  };\r\n\r\n  async function registrar() {\r\n    setLoading(true);\r\n    let wd = today.getDay();\r\n    wd === 0 ? (wd = 7) : (wd = wd);\r\n    let semana = FechaString(today.setDate(today.getDate() - wd + 1));\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const aplica = perfil === \"Registros\" ? \"Y\" : \"N\";\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    var j;\r\n    var UniqueID =\r\n      Date.now() +\r\n      user.substring(0, 2) +\r\n      tipo.substring(0, 1) +\r\n      subCat.substring(0, 2);\r\n    setID(UniqueID);\r\n    console.log(UniqueID);\r\n    for (j = 0; j < involucrados.length; j++) {\r\n      await sheet.addRow({\r\n        fecha: date,\r\n        fecha_hora: fecha,\r\n        nombre: creador,\r\n        area: area,\r\n        rubro: tipo,\r\n        categoria: cat,\r\n        observaciones: subCat,\r\n        pac: plan,\r\n        responsable: resp,\r\n        fecha_cierre: startDate,\r\n        anexo: imgUpload,\r\n        status: \"Pendiente\",\r\n        Personas_Observadas: involucrados[j],\r\n        id: UniqueID,\r\n        severidad: severidad,\r\n        Detalle: detalles,\r\n        Aplica: aplica,\r\n        semana: semana,\r\n        ids: 1 / involucrados.length,\r\n      });\r\n    }\r\n    if (correo !== \"No Aplica\") {\r\n      notificar(UniqueID);\r\n    }\r\n    setTipo(\"\");\r\n    setCat(\"\");\r\n    setSubCat(\"\");\r\n    setDetalles(\"\");\r\n    setInvolucrados([]);\r\n    setArea(\"\");\r\n    setPlan(\"\");\r\n    setResp(\"\");\r\n    setImageAsUrl(\"\");\r\n    setPreviewImg(\"\");\r\n    setLoading(false);\r\n    setConfirmar(false);\r\n    setSaving(true);\r\n  }\r\n\r\n  function notificar(codigo) {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      detalles: detalles,\r\n      imagen: \"https://www.miculturaqse507.com/sasso-app/observacion/\" + codigo,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n    setID(\"\");\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (subir) {\r\n      handleFireBaseUpload();\r\n    }\r\n  }, [subir]);\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div>\r\n          <Dimmer active={loading} page>\r\n            <Loader size=\"massive\">{data ? \"Saving\" : \"Loading\"}</Loader>\r\n          </Dimmer>\r\n          <Modal\r\n            header=\"Listo!\"\r\n            content=\"Su observación ha sido registrado exitosamente.\"\r\n            open={saving}\r\n            actions={[\r\n              {\r\n                key: \"done\",\r\n                content: \"Done\",\r\n                positive: true,\r\n                onClick: () => {\r\n                  setSaving(false);\r\n                  history.push(\"/observaciones\");\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <Modal\r\n            onClose={() => setConfirmar(false)}\r\n            onOpen={() => setConfirmar(true)}\r\n            open={confirmar}\r\n          >\r\n            <Modal.Header>Confirmar Información</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={previewImg} wrapped />\r\n              <Modal.Description>\r\n                <Header>Observacion de {tipo}</Header>\r\n                <p>{cat}</p>\r\n                <p>{subCat}</p>\r\n                <p>Severidad:{severidad}</p>\r\n                <Header>Persona(s) Observada(s)</Header>\r\n                {involucrados.map((item) => (\r\n                  <li>{item}</li>\r\n                ))}\r\n                <Header>Area</Header>\r\n                <p>{area}</p>\r\n                <Header>PLAN DE ACCION</Header>\r\n                <p>{plan}</p>\r\n                <p>Responsable: {resp}</p>\r\n                <p>Fecha de Cierre Previsto: {startDate}</p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"black\" onClick={() => setConfirmar(false)}>\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                content=\"Confirmar\"\r\n                labelPosition=\"right\"\r\n                icon=\"checkmark\"\r\n                onClick={() => {\r\n                  registrar();\r\n                }}\r\n                positive\r\n              />\r\n            </Modal.Actions>\r\n          </Modal>\r\n          {guardar ? (\r\n            <Button\r\n              fluid\r\n              color=\"green\"\r\n              content=\"Guardar\"\r\n              onClick={handleSave}\r\n            ></Button>\r\n          ) : null}\r\n          <Step.Group ordered size=\"mini\" attached=\"top\" unstackable>\r\n            <Step\r\n              active={step === \"Que\"}\r\n              name=\"Que\"\r\n              onClick={handleStep}\r\n              completed={que}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Observación</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"Donde\"}\r\n              name=\"Donde\"\r\n              onClick={handleStep}\r\n              completed={donde}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Area</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"PAC\"}\r\n              name=\"PAC\"\r\n              onClick={handleStep}\r\n              completed={pacStep}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>PAC</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n          </Step.Group>\r\n          <Segment attached>\r\n            {step === \"Que\" ? (\r\n              <Container>\r\n                {user === \"user\" && (\r\n                  <>\r\n                    <Segment>\r\n                      <Header>Nombre del Observador</Header>\r\n                      <Input\r\n                        fluid\r\n                        placeholder=\"Nombre del Observador...\"\r\n                        onChange={(e, { value }) => {\r\n                          setCreador(value);\r\n                        }}\r\n                      />\r\n                    </Segment>\r\n                  </>\r\n                )}\r\n                <Segment name=\"segmentTipo\">\r\n                  <Header>Tipo de Observación</Header>\r\n                  {tipos.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          circular\r\n                          name={item.name}\r\n                          onClick={handleTipoClick}\r\n                          active={tipo === item.name}\r\n                        >\r\n                          {item.id}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment name=\"segmentInvol\">\r\n                  <Header>Personas Responsables/Involucradas</Header>\r\n                  <Dropdown\r\n                    fluid\r\n                    multiple\r\n                    search\r\n                    selection\r\n                    value={involucrados}\r\n                    placeholder=\"Seleccionar Personas Involucradas\"\r\n                    options={personal}\r\n                    onChange={(e, { value }) => {\r\n                      setInvolucrados(value);\r\n                      console.log(value);\r\n                    }}\r\n                  />\r\n                </Segment>\r\n                <Ref innerRef={segCat}>\r\n                  <Segment name=\"segmentCat\">\r\n                    <Header>Categoria de la Observación</Header>\r\n                    <Card.Group itemsPerRow={4}>\r\n                      {catData\r\n                        ? catData.map((item) => (\r\n                            <Popup\r\n                              trigger={\r\n                                <Card\r\n                                  raised\r\n                                  color={\r\n                                    cat === item.Categoria ? \"red\" : \"black\"\r\n                                  }\r\n                                  name={item.Categoria}\r\n                                  onClick={handleCatClick}\r\n                                >\r\n                                  <Image\r\n                                    src={item.src}\r\n                                    size=\"mini\"\r\n                                    wrapped\r\n                                    ui={false}\r\n                                  />\r\n                                  <Card.Content>\r\n                                    {cat === item.Categoria ? (\r\n                                      <Icon\r\n                                        color=\"green\"\r\n                                        name=\"check circle\"\r\n                                      ></Icon>\r\n                                    ) : null}\r\n                                  </Card.Content>\r\n                                </Card>\r\n                              }\r\n                            >\r\n                              <Popup.Header>{item.Categoria}</Popup.Header>\r\n                            </Popup>\r\n                          ))\r\n                        : null}\r\n                    </Card.Group>\r\n                  </Segment>\r\n                </Ref>\r\n\r\n                {subCatData ? (\r\n                  <Ref innerRef={segSubCat}>\r\n                    <Segment name=\"segmentSubCat\">\r\n                      <Header>Observación</Header>\r\n                      <Dropdown\r\n                        fluid\r\n                        button\r\n                        search\r\n                        scrolling\r\n                        clearable\r\n                        value={subCat}\r\n                        placeholder=\"Seleccionar Observacion\"\r\n                        options={subCatData}\r\n                        onChange={(e, { value }) => {\r\n                          setSubCat(value);\r\n                        }}\r\n                      />\r\n                      <br />\r\n                      <Header>\r\n                        Severidad\r\n                        <Popup\r\n                          trigger={\r\n                            <div>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 0 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(1);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 1 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(2);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 2 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(3);\r\n                                }}\r\n                              ></Icon>\r\n                            </div>\r\n                          }\r\n                          content={\"Grado de Severidad: \" + severidad}\r\n                        ></Popup>\r\n                      </Header>\r\n                      <Form>\r\n                        <TextArea\r\n                          placeholder=\"Detalles\"\r\n                          onChange={(e, { value }) => {\r\n                            setDetalles(value);\r\n                          }}\r\n                        ></TextArea>\r\n                      </Form>\r\n                    </Segment>\r\n                  </Ref>\r\n                ) : null}\r\n              </Container>\r\n            ) : null}\r\n            {step === \"Donde\" && areas ? (\r\n              <div>\r\n                <Segment>\r\n                  <Header>Área de la Observación</Header>\r\n                  {areas.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          style={{ width: \"15vw\" }}\r\n                          name={item.name}\r\n                          onClick={handleArea}\r\n                          active={area === item.name}\r\n                        >\r\n                          {item.short}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      handleImageUpload(e);\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </Segment>\r\n              </div>\r\n            ) : null}\r\n            {step === \"PAC\" ? (\r\n              <Segment>\r\n                <Header>Acción Tomada</Header>\r\n                <Form>\r\n                  <TextArea\r\n                    placeholder=\"Escriba la Acción Tomada aquí...\"\r\n                    value={plan}\r\n                    onChange={(e) => {\r\n                      setPlan(e.target.value);\r\n                      console.log(e.target.value);\r\n                    }}\r\n                  ></TextArea>\r\n                </Form>\r\n                <Header>Fecha de Cierre Previsto</Header>\r\n                <Input\r\n                  fluid\r\n                  type=\"date\"\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                  defaultValue={startDate}\r\n                />\r\n                <Header>Responsable del Plan</Header>\r\n                <Dropdown\r\n                  fluid\r\n                  search\r\n                  selection\r\n                  placeholder=\"Seleccionar Responsable del Plan\"\r\n                  options={personal}\r\n                  value={resp}\r\n                  onChange={(e, { value }) => {\r\n                    setResp(value);\r\n                    console.log(value);\r\n                  }}\r\n                />\r\n              </Segment>\r\n            ) : null}\r\n          </Segment>\r\n        </div>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registros;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction Categorias({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n\r\n  const areas = [\r\n    { id: 2, name: \"Linea1\", short: \"L1\" },\r\n    { id: 3, name: \"Linea2\", short: \"L2\" },\r\n    { id: 4, name: \"Linea3\", short: \"L3\" },\r\n    { id: 5, name: \"Linea4\", short: \"L4\" },\r\n    { id: 6, name: \"Linea5\", short: \"L5\" },\r\n    { id: 1, name: \"Area de Reciclaje\", short: \"AR\" },\r\n    { id: 8, name: \"Sala de Jarabe\", short: \"SJ\" },\r\n    { id: 9, name: \"Taller de Mtto\", short: \"TM\" },\r\n    { id: 9, name: \"Area de Operaciones\", short: \"OP\" },\r\n    { id: 7, name: \"PTAR\", short: \"PTAR\" },\r\n    { id: 10, name: \"PTA\", short: \"PTA\" },\r\n    { id: 11, name: \"Oficina Administrativa\", short: \"ADM\" },\r\n  ];\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/iconos/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"iconos\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      var data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    console.log(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (imageAsUrl) {\r\n      console.log(imageAsUrl.imgUrl);\r\n    }\r\n  }, [imageAsUrl]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  async function registrar(tipo, categoria) {\r\n    handleFireBaseUpload();\r\n    console.log(imageAsUrl.imgUrl);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (\r\n        sheet.getCell(j, 0).value === tipo &&\r\n        sheet.getCell(j, 1).value === categoria\r\n      ) {\r\n        const imagen = sheet.getCell(j, 4);\r\n        imagen.value = imageAsUrl.imgUrl;\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function notificar() {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <Segment>\r\n          {data.map((item) => (\r\n            <Segment>\r\n              <Header>{item.Tipo}</Header>\r\n              <Form>\r\n                <TextArea value={item.Categoria}></TextArea>\r\n                <Header content={item.src}></Header>\r\n                <Input\r\n                  id=\"anexoImg\"\r\n                  fluid\r\n                  className=\"input-image\"\r\n                  type=\"file\"\r\n                  onChange={handleImageUpload}\r\n                />\r\n                <br />\r\n\r\n                <Button\r\n                  onClick={(e) => {\r\n                    registrar(item.Tipo, item.Categoria);\r\n                  }}\r\n                >\r\n                  SAVE\r\n                </Button>\r\n                <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n              </Form>\r\n            </Segment>\r\n          ))}\r\n        </Segment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categorias;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport {\r\n  Header,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Form,\r\n  Message,\r\n  Checkbox,\r\n  Popup,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Login() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"recordar\"]: [recordar, setRecordar],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState();\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const login = (event, password) => {\r\n    event.preventDefault();\r\n    var found = false;\r\n    for (var i = 0; i < userData.length; i++) {\r\n      if (userData[i].id === password) {\r\n        found = true;\r\n        setUser(userData[i].Nombre);\r\n        sessionStorage.user = userData[i].Nombre;\r\n        if (recordar) {\r\n          localStorage.user = userData[i].Nombre;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!found) alert(`Usuario No encontrado`);\r\n    if (found) {\r\n      if (pagina) {\r\n        history.push(pagina);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Ingresar con su Numero de Empleado\r\n        </Header>\r\n        <Form size=\"large\">\r\n          <Segment stacked>\r\n            <Popup\r\n              content=\"Numero de Empleado sin PA ni los 0 iniciales, Ejemplo: PA00123456 = 123456\"\r\n              trigger={\r\n                <Form.Input\r\n                  name=\"userPassword\"\r\n                  type=\"password\"\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Numero de Empleado\"\r\n                  onChange={(event) => onChangeHandler(event)}\r\n                />\r\n              }\r\n            />\r\n\r\n            <Button\r\n              color=\"red\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={(event) => {\r\n                login(event, password);\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          <Checkbox\r\n            label=\"Recordar Usuario\"\r\n            onChange={(e, { checked }) => {\r\n              checked ? setRecordar(true) : setRecordar(false);\r\n            }}\r\n          />\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport userData from \"./employee.json\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Perfil() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Segment>\r\n        <Header as=\"h4\">\r\n          {user}\r\n          <Button\r\n            floated=\"right\"\r\n            negative\r\n            onClick={() => {\r\n              setUser(\"\");\r\n              sessionStorage.removeItem(\"user\");\r\n              localStorage.removeItem(\"user\");\r\n              setPagina(\"/perfil\");\r\n              history.push(\"/Login\");\r\n            }}\r\n          >\r\n            Cerrar Sesión\r\n          </Button>\r\n        </Header>\r\n        <Segment>{userInfo[0].correo}</Segment>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Perfil;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { intlFormat } from \"date-fns\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  //var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da} ${hora}`;\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Schedule() {\r\n  const [persona, setPersona] = useState(); //variable para responsable de recorrido\r\n  const [lugar, setLugar] = useState(); //variable para area de recorrido\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const { [\"personal\"]: personal } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date())); //variable para fecha de recorrido\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        if (areas[j].name !== \"\") {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  async function registrar() {\r\n    setSaving(true);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[762667679];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    while (lastr--) {\r\n      try {\r\n        console.log(rows[lastr].Usuario);\r\n        if (\r\n          rows[lastr].Nombre == persona &&\r\n          rows[lastr].Fecha == fecha &&\r\n          rows[lastr].Area == lugar\r\n        ) {\r\n          console.log(\"Borrando\");\r\n          await rows[lastr].delete();\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        break;\r\n      }\r\n    }\r\n    await sheet.addRow({\r\n      Nombre: persona,\r\n      Fecha: fecha,\r\n      Area: lugar,\r\n      Usuario: user,\r\n      FechaProgramado: FechaStringLong(new Date()),\r\n    });\r\n    alert(\"Datos Guardados\");\r\n    setSaving(false);\r\n    setPersona();\r\n    setLugar();\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Dimmer active={saving} page>\r\n        <Loader size=\"massive\">{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Programar Recorrido\r\n        </Header>\r\n        <Form>\r\n          <b>Nombre*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Nombre de Empleado...\"\r\n            defaultValue={persona}\r\n            options={personal}\r\n            onChange={(e, { value }) => {\r\n              setPersona(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Area*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Area...\"\r\n            defaultValue={lugar}\r\n            options={listaArea}\r\n            onChange={(e, { value }) => {\r\n              setLugar(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            size=\"tiny\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n          <br></br>\r\n          <Button\r\n            disabled={!persona || !lugar}\r\n            negative\r\n            fluid\r\n            onClick={() => {\r\n              registrar();\r\n            }}\r\n          >\r\n            Programar\r\n          </Button>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n  Radio,\r\n  Popup,\r\n  Sticky,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { GradientDefs } from \"react-vis\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nexport default function ReporteDeTurno({ user }) {\r\n  const referencia = useRef(null);\r\n  const {\r\n    [\"reportData\"]: [reportData, setRepData],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const [area, setArea] = useState();\r\n  const [categoria, setCat] = useState();\r\n  const { personal: personal } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  const [reportes, setReportes] = useState(); //Listado completo de CheckList\r\n  const [sinFiltro, setSinFiltro] = useState();\r\n  const [checkList, setCheckList] = useState();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date()));\r\n  const [cats, setCats] = useState();\r\n  const [rubros, setRubros] = useState();\r\n  const [activeRubro, setActRubro] = useState();\r\n  const [subCat, setSubCat] = useState();\r\n  const [requerimientos, setReq] = useState();\r\n  const [activeReq, setActiveR] = useState();\r\n  const [incumple, setIncumple] = useState([]);\r\n  const [percentage, setPercentage] = useState();\r\n  const [turno, setTurno] = useState(1);\r\n  const [campoOblig, setCampoOblig] = useState(0);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [duplicado, setDuplicado] = useState(false);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [tipoReporte, setTipoRep] = useState(\"Reporte de Turno\");\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const turnos = [\"1\", \"2\", \"3\"];\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const history = useHistory();\r\n\r\n  async function handleImageUpload(event, rubro) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, url: \"\", preview: \"\", img: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, preview: e.target.result }\r\n              : x;\r\n          });\r\n        });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, img: compressedFile }\r\n              : x;\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      setImageAsFile(\"\");\r\n      setPreviewImg(dummyImg);\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, preview: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setPercentage(0);\r\n  }\r\n\r\n  async function handleFireBaseUpload(rubro) {\r\n    var boton = document.getElementById(\"btn\" + activeReq + activeRubro);\r\n    boton.disabled = true;\r\n    setPercentage(1);\r\n    const archivo =\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n        )\r\n      ].img;\r\n    const uploadTask = storage.ref(`/images/${archivo.name}`).put(archivo);\r\n    setPercentage(5);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        //takes a snap shot of the process as it is happening\r\n        console.log(snapShot);\r\n      },\r\n      (err) => {\r\n        //catches the errors\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        // gets the functions from storage refences the image storage in firebase by the children\r\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n        setPercentage(50);\r\n        storage\r\n          .ref(\"images\")\r\n          .child(archivo.name)\r\n          .getDownloadURL()\r\n          .then((fireBaseUrl) => {\r\n            setReportes((existingItems) => {\r\n              return existingItems.map((x) => {\r\n                return x.SubCategoria === activeRubro &&\r\n                  x.Categoria === activeReq\r\n                  ? { ...x, url: fireBaseUrl }\r\n                  : x;\r\n              });\r\n            });\r\n            setPercentage(100);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setRepData(datas);\r\n  };\r\n  const sacarReportes = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = 1259390435;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    var aplican = datas.filter((x) => x[\"Reporte de turno\"] === \"Y\");\r\n    if (window.location.href.includes(\"recorrido\")) {\r\n      aplican = datas.filter((x) => x[\"Recorrido\"] === \"Y\");\r\n    }\r\n    setSinFiltro(aplican);\r\n    setReportes(aplican);\r\n    setCats(\r\n      aplican\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  const sacarReportes2 = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = window.location.href.includes(\"recorrido\")\r\n      ? 1236777776\r\n      : 585241358;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    setReportes(datas);\r\n    setCats(\r\n      datas\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  async function registrar() {\r\n    setStatus(estados[0].caption);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n\r\n    if (duplicado) {\r\n      setStatus(estados[2].caption);\r\n      while (lastr--) {\r\n        try {\r\n          if (rows[lastr].Id == uniqueID) {\r\n            console.log(\"Borrando\");\r\n            await rows[lastr].delete();\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          sleep(60000);\r\n          lastr = lastr + 1;\r\n          continue;\r\n        }\r\n      }\r\n      setStatus(estados[0].caption);\r\n    }\r\n    var j;\r\n\r\n    for (j = 0; j < reportes.length; j++) {\r\n      try {\r\n        console.log(\"guardando\");\r\n        await sheet.addRow({\r\n          Area: area,\r\n          Usuario: user,\r\n          FechaRegistro: FechaStringLong(new Date()),\r\n          FechaRecorrido: fecha,\r\n          Tipo: reportes[j].Tipo,\r\n          Categoria: reportes[j].Categoria,\r\n          SubCategoria: reportes[j].SubCategoria,\r\n          Incumple: reportes[j].incumple,\r\n          Detalle: reportes[j].detalle,\r\n          PersonasObservadas: reportes[j].personas,\r\n          Imagen: reportes[j].url,\r\n          Turno: turno,\r\n          Reporte: tipoReporte,\r\n          Id: uniqueID,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n        sleep(60000);\r\n        j = j - 1;\r\n        continue;\r\n      }\r\n    }\r\n    alert(\"Datos Guardados\");\r\n    setActiveR();\r\n    setStatus();\r\n    setArea(\"\");\r\n    setActRubro();\r\n    setRepData();\r\n    setReportes();\r\n    setConfirmar(false);\r\n    history.push(\"/\");\r\n  }\r\n  const [lista, setLista] = useState();\r\n  const crearLista = (e, { name }) => {\r\n    if (activeReq == name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(name);\r\n    }\r\n    setLista(\r\n      reportData\r\n        .filter((item) => item.Nombre == name)\r\n        .map((item) => item.Rubro)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n  };\r\n  const revision = (e, { name, requerimiento }) => {\r\n    let observacion = { req: requerimiento, rubro: name };\r\n    if (\r\n      reportData[reportData.findIndex((x) => x.Rubro === name)].Acto === \"Y\"\r\n    ) {\r\n      observacion.obligatorio = 1;\r\n    }\r\n    if (incumple.some((e) => e.req === requerimiento && e.rubro === name)) {\r\n      let removeIndex = incumple.filter((e) => e.rubro !== name);\r\n      console.log(removeIndex);\r\n      // remove object\r\n      setIncumple(removeIndex);\r\n    } else {\r\n      setIncumple((oldArray) => [...oldArray, observacion]);\r\n    }\r\n  };\r\n  const validar = () => {\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n    let res = [];\r\n    res = reportData.filter((element) => {\r\n      return element.Id == uniqueID;\r\n    });\r\n    if (res.length > 0) {\r\n      setDuplicado(true);\r\n    } else {\r\n      setDuplicado(false);\r\n    }\r\n  };\r\n\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    // Return a function from the effect that removes the event listener\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var userArea = userData.filter((x) => x.Nombre === user)[0].Area;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        let keys = areas[j].keys;\r\n        if (\r\n          areas[j].name !== \"\" &&\r\n          (userArea.toLowerCase().includes(\"gerencia\") ||\r\n          window.location.href.includes(\"recorrido\")\r\n            ? true\r\n            : keys\r\n                .toLowerCase()\r\n                .split(\", \")\r\n                .some((w) => userArea.toLowerCase().includes(w)))\r\n        ) {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  useEffect(() => {\r\n    if (turno && area) {\r\n      if (!reportData) {\r\n        sacardata();\r\n      }\r\n      validar();\r\n    }\r\n  }, [area, turno]);\r\n\r\n  useEffect(() => {\r\n    console.log(incumple);\r\n  }, [incumple]);\r\n  useEffect(() => {\r\n    if (!reportData) {\r\n      sacardata();\r\n    }\r\n  }, [reportData]);\r\n  useEffect(() => {\r\n    if (!reportes) {\r\n      sacarReportes();\r\n    } else {\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    setArea();\r\n    setCat();\r\n    setReportes();\r\n    setRepData();\r\n    setActiveR();\r\n    setActRubro();\r\n    sacarReportes();\r\n    sacardata();\r\n    var url = window.location.href;\r\n    if ((pagina && pagina.includes(\"recorrido\")) || url.includes(\"recorrido\")) {\r\n      setTipoRep(\"Reporte de Recorrido\");\r\n    } else {\r\n      setTipoRep(\"Reporte de Turno\");\r\n    }\r\n  }, [pagina]);\r\n  function handleArea(e, { value }) {\r\n    setCat();\r\n    setActiveR();\r\n    var filtro = sinFiltro.filter((x) => x[value] === \"Y\");\r\n    setReportes(filtro);\r\n    setArea(value);\r\n  }\r\n\r\n  function handleCategorias(e) {\r\n    setCat(e.target.name);\r\n    if (reportes) {\r\n      var chklist = reportes.filter((item) => item.Tipo === e.target.name);\r\n      setCheckList(chklist);\r\n      setReq(\r\n        chklist\r\n          .map((item) => item.Categoria)\r\n          .filter((value, index, self) => self.indexOf(value) === index)\r\n      );\r\n    }\r\n  }\r\n  function handleSubCat(e) {\r\n    setSubCat(e.target.name);\r\n    if (activeReq === e.target.name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(e.target.name);\r\n    }\r\n    setRubros(\r\n      reportes\r\n        .filter((item) => item.Categoria === e.target.name)\r\n        .map((item) => item.SubCategoria)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setActRubro();\r\n  }\r\n\r\n  function handleCheck(e) {\r\n    var item = e.target.name;\r\n    var chk = e.target.id;\r\n    console.log(chk);\r\n    setActRubro(item);\r\n    var cumple;\r\n    if (chk.includes(\"Y\")) {\r\n      cumple = \"N\";\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === item && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n                detalle: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    } else {\r\n      cumple = \"Y\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === item && x.Categoria === activeReq\r\n          ? { ...x, incumple: cumple }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function HandleTodos(e, { checked }) {\r\n    var cumple;\r\n    if (checked) {\r\n      cumple = \"N\";\r\n    } else {\r\n      cumple = \"\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.Categoria === activeReq ? { ...x, incumple: cumple } : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleOpcional(e, { rubro }) {\r\n    setActRubro(rubro);\r\n    var aplica;\r\n    if (\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.Categoria === activeReq && x.SubCategoria === rubro\r\n        )\r\n      ].opcional === \"N\"\r\n    ) {\r\n      aplica = \"Y\";\r\n    } else {\r\n      aplica = \"N\";\r\n\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === rubro && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === rubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              opcional: aplica,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleObservados(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              personas: value.toString(),\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDetalles(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              detalle: value,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n      <Dimmer\r\n        active={\r\n          status || estados.filter((x) => x.caption === status).length != 0\r\n        }\r\n        page\r\n      >\r\n        <Loader size=\"massive\">{status}</Loader>\r\n      </Dimmer>\r\n      {reportes && (\r\n        <Modal\r\n          onClose={() => setConfirmar(false)}\r\n          onOpen={() => setConfirmar(true)}\r\n          size=\"large\"\r\n          open={confirmar}\r\n        >\r\n          <Modal.Header>Confirmar Información</Modal.Header>\r\n          <Modal.Content>\r\n            {duplicado && (\r\n              <Label basic color=\"red\" size=\"huge\">\r\n                <Icon name=\"warning sign\" />\r\n                Se sobreescribirá los datos\r\n              </Label>\r\n            )}\r\n            <h1>\r\n              {tipoReporte.includes(\"Recorrido\")\r\n                ? tipoReporte\r\n                : tipoReporte + \" \" + turno}\r\n            </h1>\r\n            <h2>{fecha}</h2>\r\n            <h3>{user}</h3>\r\n            <h4>{area}</h4>\r\n          </Modal.Content>\r\n\r\n          <Divider />\r\n          <Modal.Content>\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <b>Incumplimientos: </b>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <List>\r\n                {reportes\r\n                  .filter((x) => x.incumple === \"Y\")\r\n                  .map((item, index) => {\r\n                    return (\r\n                      <List.Item>\r\n                        {index + 1}. {item.Tipo} - {item.Categoria} -{\" \"}\r\n                        {item.SubCategoria}\r\n                      </List.Item>\r\n                    );\r\n                  })}\r\n              </List>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length == 0 && (\r\n              <b>Sin Incidencias</b>\r\n            )}\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"green\"\r\n              onClick={() => {\r\n                registrar();\r\n              }}\r\n            >\r\n              <Icon name=\"check\"></Icon>Confirmar\r\n            </Button>\r\n            <Button\r\n              secondary\r\n              color=\"red\"\r\n              onClick={() => {\r\n                setConfirmar(false);\r\n              }}\r\n            >\r\n              <Icon name=\"x\"></Icon>Cancelar\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      )}\r\n      <Grid.Row>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Segment basic>\r\n            <Header>{tipoReporte}</Header>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Area*</b>\r\n            <Dropdown\r\n              style={{ textAlign: \"center\" }}\r\n              fluid\r\n              search\r\n              selection\r\n              placeholder=\"Area...\"\r\n              options={listaArea}\r\n              onChange={handleArea}\r\n            ></Dropdown>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {area && tipoReporte.includes(\"Turno\") && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Turno*</b>\r\n            <Form>\r\n              <Grid columns={3}>\r\n                <Grid.Row>\r\n                  {turnos.map((x) => {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Radio\r\n                          label={x}\r\n                          checked={turno === x}\r\n                          onChange={() => {\r\n                            setTurno(x);\r\n                          }}\r\n                        ></Radio>\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {duplicado && area && turno && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" />\r\n              Ud. ya ha registrado un {tipoReporte} para {area}{\" \"}\r\n              {tipoReporte === \"Reporte de Turno\" ? \"del turno \" + turno : \"\"}{\" \"}\r\n              para el dia {fecha}, en caso que guardes se sobreescribira el\r\n              reporte anterior\r\n            </Label>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      <Grid.Row columns={4}>\r\n        {cats &&\r\n          turno &&\r\n          area &&\r\n          cats.map((item) => {\r\n            return (\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor:\r\n                      categoria === item\r\n                        ? colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].activo\r\n                        : colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].inactivo,\r\n                    color: colores.filter((x) => {\r\n                      return x.categoria === item;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleCategorias}\r\n                >\r\n                  {width > breakpoint\r\n                    ? colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].caption\r\n                    : colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].short}\r\n                  <Popup\r\n                    content=\"Cantidad de incumplimiento\"\r\n                    trigger={\r\n                      <Label\r\n                        style={{ left: \"90%\" }}\r\n                        color={\r\n                          reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length > 0\r\n                            ? \"red\"\r\n                            : \"grey\"\r\n                        }\r\n                        floating\r\n                        circular\r\n                        size=\"mini\"\r\n                      >\r\n                        {reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length}\r\n                      </Label>\r\n                    }\r\n                  />\r\n                </Button>\r\n              </Grid.Column>\r\n            );\r\n          })}\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              disabled={\r\n                !area |\r\n                !turno |\r\n                (reportes &&\r\n                  reportes.filter(\r\n                    (x) =>\r\n                      x.incumple === \"Y\" &&\r\n                      (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n                      x.personas === \"\"\r\n                  ).length > 0) |\r\n                (reportes.filter((x) => x.incumple === \"\").length > 0)\r\n              }\r\n              fluid\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Guardar\"\r\n              onClick={() => setConfirmar(true)}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {reportes &&\r\n        reportes.filter(\r\n          (x) =>\r\n            x.incumple === \"Y\" &&\r\n            (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n            x.personas === \"\"\r\n        ).length > 0 && (\r\n          <Grid.Row>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" /> Campo obligatorio sin completar\r\n            </Label>\r\n          </Grid.Row>\r\n        )}\r\n      {categoria && area && reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment\r\n              fluid\r\n              basic\r\n              style={{\r\n                color: colores.filter((x) => {\r\n                  return x.categoria === categoria;\r\n                })[0].activo,\r\n              }}\r\n            >\r\n              <Header\r\n                onClick={() => {\r\n                  console.log(reportes);\r\n                  console.log(activeReq);\r\n                  console.log(activeRubro);\r\n                }}\r\n              >\r\n                {categoria}\r\n                {\" Cumplimiento \"}\r\n                {Math.ceil(\r\n                  (reportes.filter(\r\n                    (x) => x.Tipo === categoria && x.incumple === \"N\"\r\n                  ).length /\r\n                    reportes.filter((x) => x.Tipo === categoria).length) *\r\n                    100\r\n                )}\r\n                %\r\n              </Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n\r\n      {requerimientos &&\r\n        categoria &&\r\n        area &&\r\n        reportes &&\r\n        requerimientos.map((item, reqIdx) => {\r\n          return (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].inactivo,\r\n                    color: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleSubCat}\r\n                >\r\n                  {item}\r\n                </Button>\r\n                {activeReq === item && (\r\n                  <Segment basic>\r\n                    <Grid verticalAlign=\"left\">\r\n                      <Checkbox\r\n                        key={reqIdx + \"AllY\"}\r\n                        requerimiento={activeReq}\r\n                        label={\"Todos Cumplen\"}\r\n                        onChange={HandleTodos}\r\n                      />\r\n                    </Grid>\r\n                    <Grid verticalAlign=\"left\">\r\n                      {rubros &&\r\n                        rubros.map((item, idx) => {\r\n                          return (\r\n                            <Grid.Row>\r\n                              <Grid.Column>\r\n                                {idx + 1 + \". \" + item}\r\n                                <br />\r\n                                <Grid.Row columns={3}>\r\n                                  <Grid.Column>Cumple?</Grid.Column>\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"Y\"}\r\n                                      id={idx + \"Y\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"Si\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"N\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                  <br />\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"N\"}\r\n                                      id={idx + \"N\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"No\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"Y\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                </Grid.Row>\r\n                                {reportes.filter(\r\n                                  (x) =>\r\n                                    x.SubCategoria === item &&\r\n                                    x.Categoria === activeReq\r\n                                )[0].incumple === \"Y\" && (\r\n                                  <Segment color=\"red\">\r\n                                    <Grid>\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"N\" && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Checkbox\r\n                                                fluid\r\n                                                requerimiento={activeReq}\r\n                                                rubro={item}\r\n                                                label=\"Personas Observadas?\"\r\n                                                checked={\r\n                                                  reportes.filter(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )[0].opcional === \"Y\"\r\n                                                }\r\n                                                onChange={handleOpcional}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        (reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"Y\" ||\r\n                                          reportes.filter(\r\n                                            (x) =>\r\n                                              x.SubCategoria === item &&\r\n                                              x.Categoria === activeReq\r\n                                          )[0].opcional === \"Y\") && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <b>Personas Observadas*</b>\r\n                                              <Dropdown\r\n                                                fluid\r\n                                                multiple\r\n                                                search\r\n                                                selection\r\n                                                defaultValue={\r\n                                                  reportes[\r\n                                                    reportes.findIndex(\r\n                                                      (x) =>\r\n                                                        x.Categoria ===\r\n                                                          activeReq &&\r\n                                                        x.SubCategoria === item\r\n                                                    )\r\n                                                  ].personas\r\n                                                    ? reportes[\r\n                                                        reportes.findIndex(\r\n                                                          (x) =>\r\n                                                            x.Categoria ===\r\n                                                              activeReq &&\r\n                                                            x.SubCategoria ===\r\n                                                              item\r\n                                                        )\r\n                                                      ].personas.split(\",\")\r\n                                                    : \"\"\r\n                                                }\r\n                                                placeholder=\"Seleccionar Personas Involucradas...\"\r\n                                                options={personal}\r\n                                                onChange={handleObservados}\r\n                                              ></Dropdown>\r\n                                              {!reportes[\r\n                                                reportes.findIndex(\r\n                                                  (x) =>\r\n                                                    x.Categoria === activeReq &&\r\n                                                    x.SubCategoria === item\r\n                                                )\r\n                                              ].personas && (\r\n                                                <Label\r\n                                                  basic\r\n                                                  color=\"red\"\r\n                                                  pointing\r\n                                                >\r\n                                                  <Icon name=\"warning sign\" />\r\n                                                  Por favor elija al menos una\r\n                                                  persona\r\n                                                </Label>\r\n                                              )}\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Detalles</b>\r\n                                          <Form>\r\n                                            <TextArea\r\n                                              placeholder=\"Detelles...\"\r\n                                              defaultValue={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.Categoria ===\r\n                                                        activeReq &&\r\n                                                      x.SubCategoria === item\r\n                                                  )\r\n                                                ].detalle\r\n                                                  ? reportes[\r\n                                                      reportes.findIndex(\r\n                                                        (x) =>\r\n                                                          x.Categoria ===\r\n                                                            activeReq &&\r\n                                                          x.SubCategoria ===\r\n                                                            item\r\n                                                      )\r\n                                                    ].detalle\r\n                                                  : \"\"\r\n                                              }\r\n                                              onChange={handleDetalles}\r\n                                            ></TextArea>\r\n                                          </Form>\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Imagen</b>\r\n                                          <Input\r\n                                            icon=\"camera\"\r\n                                            iconPosition=\"left\"\r\n                                            type=\"file\"\r\n                                            fluid\r\n                                            rubro={item}\r\n                                            onChange={(e, { rubro }) => {\r\n                                              handleImageUpload(e, rubro);\r\n                                            }}\r\n                                          />\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview &&\r\n                                        percentage == 0 && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Button\r\n                                                id={\"btn\" + activeReq + item}\r\n                                                rubro={item}\r\n                                                content=\"Confirmar\"\r\n                                                style={{\r\n                                                  backgroundColor:\r\n                                                    colores.filter((item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    })[0].inactivo,\r\n                                                  color: colores.filter(\r\n                                                    (item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    }\r\n                                                  )[0].texto,\r\n                                                }}\r\n                                                onClick={(e, { rubro }) => {\r\n                                                  handleFireBaseUpload(rubro);\r\n                                                }}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Progress\r\n                                              percent={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? 100\r\n                                                  : percentage\r\n                                              }\r\n                                              indicating={\r\n                                                !reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url && percentage != 100\r\n                                              }\r\n                                              success={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? true\r\n                                                  : percentage == 100\r\n                                              }\r\n                                              progress\r\n                                              label={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url || percentage == 100\r\n                                                  ? \"Cargado\"\r\n                                                  : percentage == 0\r\n                                                  ? \"\"\r\n                                                  : \"Cargando\"\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Image\r\n                                              size=\"medium\"\r\n                                              src={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].preview\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                    </Grid>\r\n                                  </Segment>\r\n                                )}\r\n                              </Grid.Column>\r\n                            </Grid.Row>\r\n                          );\r\n                        })}\r\n                    </Grid>\r\n                  </Segment>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { Dropdown, Grid, Header, Input, Segment } from \"semantic-ui-react\";\r\n\r\nfunction Minuta() {\r\n  const { personal } = useContext(Contexto);\r\n  return (\r\n    <Grid stackable>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <Header content=\"Administración de Minuta\" />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input fluid type=\"date\"></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row columns={3}>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Participantes</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Minuta;\r\n","import React, { useState, useContext } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Home from \"./Home.js\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport userData from \"./employee.json\";\nimport Add from \"./images/fondo.jpg\";\nimport {\n  Header,\n  Menu,\n  Icon,\n  Modal,\n  Button,\n  Input,\n  Segment,\n  Checkbox,\n  Sidebar,\n  Dropdown,\n  Label,\n} from \"semantic-ui-react\";\nimport Observacion from \"./observacion\";\nimport Tareas from \"./tareas\";\nimport Consultas from \"./consulta\";\nimport Registrar from \"./registrar\";\nimport Categorias from \"./tipos\";\nimport Login from \"./Login\";\nimport Reporte from \"./Reporte\";\nimport { Contexto } from \"./Contexto\";\nimport Perfil from \"./profile\";\nimport Schedule from \"./schedule\";\nimport Recorrido from \"./recorridos\";\nimport ReporteDeTurno from \"./reporteDeTurno\";\nimport Minuta from \"./minuta\";\n\nfunction App() {\n  let iniciado = null;\n  let caption = \"Sign In\";\n  if (sessionStorage.getItem(\"user\")) {\n    iniciado = sessionStorage.user;\n    caption = \"Sign Out\";\n  } else if (localStorage.getItem(\"user\")) {\n    iniciado = localStorage.user;\n    caption = \"Sign Out\";\n  }\n  const {\n    [\"user\"]: [user, setUser],\n  } = useContext(Contexto);\n  const {\n    [\"pagina\"]: [pagina, setPagina],\n  } = useContext(Contexto);\n  const {\n    [\"width\"]: [width, setWidth],\n  } = useContext(Contexto);\n  const breakpoint = 620;\n  const {\n    [\"areas\"]: [areas, setAreas],\n  } = useContext(Contexto);\n  const [session, setSession] = useState(caption);\n  const [open, setOpen] = React.useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [activeItem, setActiveItem] = useState(\"\");\n  const [recordar, setRecordar] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  };\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userPassword\") {\n      setPassword(value);\n    }\n  };\n\n  const login = (event, password) => {\n    event.preventDefault();\n    var found = false;\n    for (var i = 0; i < userData.length; i++) {\n      if (userData[i].id === password) {\n        found = true;\n        setUser(userData[i].Nombre);\n        sessionStorage.user = userData[i].Nombre;\n        if (recordar) {\n          localStorage.user = userData[i].Nombre;\n        }\n        setSession(\"Sign Out\");\n        break;\n      }\n    }\n    if (!found) alert(`Usuario No encontrado`);\n  };\n\n  React.useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    // Return a function from the effect that removes the event listener\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  return (\n    <Router basename={\"/\"}>\n      <div style={{ padding: \"2%\", backgroundImage: `url(${Add})` }}>\n        <Menu color=\"red\" size=\"huge\">\n          <Menu.Item header as={Link} to=\"/home\">\n            <b style={{ color: \"red\" }}>Mi Cultura QSEB</b>\n          </Menu.Item>\n          {width < breakpoint ? (\n            <Menu.Item position=\"right\">\n              <Icon\n                size=\"large\"\n                name=\"bars\"\n                color=\"red\"\n                onClick={() => {\n                  setVisible(true);\n                }}\n              />\n            </Menu.Item>\n          ) : (\n            <>\n              <Dropdown item text=\"Reportes\">\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    text=\"Reporte de Turno\"\n                    as={Link}\n                    to={user ? \"/Reporte\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/Reporte\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Recorridos\"\n                    as={Link}\n                    to={user ? \"/recorrido\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/recorrido\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Programar Recorridos\"\n                    as={Link}\n                    to={user ? \"/programar\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/programar\");\n                    }}\n                  />\n                  <Dropdown.Item text=\"Actos Inseguros\" />\n                  <Dropdown.Item text=\"Condiciones Inseguras\" />\n                </Dropdown.Menu>\n              </Dropdown>\n              <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n              <Menu.Item position=\"right\">\n                {user ? (\n                  //<Icon\n                  //  size=\"large\"\n                  // name=\"user circle\"\n                  //  color={user ? \"green\" : \"black\"}\n                  //>\n                  <Button\n                    icon=\"user \"\n                    color=\"green\"\n                    circular\n                    as={Link}\n                    to=\"/perfil\"\n                  />\n                ) : (\n                  <Button\n                    content=\"Iniciar Sesion\"\n                    style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                    as=\"a\"\n                    href=\"/Login\"\n                  />\n                )}\n              </Menu.Item>\n            </>\n          )}\n        </Menu>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            onHide={() => setVisible(false)}\n            vertical\n            direction=\"right\"\n            visible={visible}\n            width=\"wide\"\n            color=\"red\"\n          >\n            <Menu.Item\n              name=\"Reporte\"\n              as={Link}\n              to={user ? \"/Reporte\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/Reporte\");\n                setAreas();\n              }}\n            >\n              Reporte de Turno\n            </Menu.Item>\n            <Menu.Item\n              name=\"Recorridos\"\n              as={Link}\n              to={user ? \"/recorrido\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/recorrido\");\n                setAreas();\n              }}\n            >\n              Recorridos\n            </Menu.Item>\n            <Menu.Item\n              name=\"ProgramarRecorridos\"\n              as={Link}\n              to={user ? \"/programar\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/programar\");\n              }}\n            >\n              Programar Recorridos\n            </Menu.Item>\n            <Menu.Item name=\"ActosI\">Actos Inseguros</Menu.Item>\n            <Menu.Item name=\"CondicionesI\">Condiciones Inseguras</Menu.Item>\n            <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n            {user && user.includes(\"Cheung\") && (\n              <Menu.Item\n                name=\"Minutas\"\n                as={Link}\n                to={user ? \"/minutas\" : \"/Login\"}\n                onClick={() => {\n                  setVisible(false);\n                  setPagina(\"/minutas\");\n                }}\n              >\n                Minutas\n              </Menu.Item>\n            )}\n            <Menu.Item\n              name=\"Perfil\"\n              as={Link}\n              to={user ? \"/perfil\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n              }}\n            >\n              {user ? (\n                user\n              ) : (\n                <Button\n                  content=\"Iniciar Sesion\"\n                  style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                  as={Link}\n                  onClick={() => {\n                    setVisible(false);\n                  }}\n                  to=\"/Login\"\n                />\n              )}\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher>\n            <Segment\n              style={{\n                backgroundColor: \"whitesmoke\",\n                height: \"90vh\",\n                overflowY: \"scroll\",\n              }}\n            >\n              <Switch>\n                <Route\n                  exact\n                  path=\"/home\"\n                  render={(props) => <Home {...props} user={user} />}\n                />\n                <Route\n                  path=\"/registros\"\n                  render={(props) => <Registrar {...props} user={user} />}\n                />\n                <Route\n                  path=\"/tareas\"\n                  render={(props) => <Tareas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observaciones\"\n                  render={(props) => <Consultas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observacion/:id\"\n                  render={(props) => <Observacion {...props} user={user} />}\n                />\n                <Route\n                  path=\"/Login\"\n                  render={(props) => <Login {...props} user={user} />}\n                />\n                <Route\n                  path=\"/reporte\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/recorrido\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/perfil\"\n                  render={(props) => <Perfil {...props} user={user} />}\n                />\n                <Route\n                  path=\"/minutas\"\n                  render={(props) => <Minuta {...props} user={user} />}\n                />\n                <Route\n                  path=\"/programar\"\n                  render={(props) => <Schedule {...props} user={user} />}\n                />\n                <Route\n                  path=\"/\"\n                  render={(props) => <Home {...props} user={user} />}\n                />\n              </Switch>\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ContextoProvider from \"./Contexto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextoProvider>\n      <App />\n    </ContextoProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}