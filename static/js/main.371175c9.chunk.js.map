{"version":3,"sources":["Contexto.js","Home.js","images/fondo.jpg","observacion.js","firebase/firebase.js","tareas.js","consulta.js","apikeys.js","registrar.js","tipos.js","Login.js","profile.js","schedule.js","reporteDeTurno.js","minuta.js","App.js","serviceWorker.js","index.js"],"names":["Contexto","React","createContext","children","iniciado","sessionStorage","getItem","user","localStorage","useState","setUser","recordar","setRecordar","data","setData","data1","setdata1","data2","setdata2","areas","setAreas","reportData","setRepData","pagina","setPagina","window","innerWidth","width","setWidth","personal","j","userData","length","Nombre","push","key","text","value","categoria","activo","inactivo","texto","caption","short","gradient","cumple","contexto","colores","breakpoint","Provider","ExcelDateToJSDate","serial","utc_days","Math","floor","date_info","Date","fractional_day","total_seconds","seconds","hours","minutes","getFullYear","getMonth","getDate","FechaStringShort","fecha","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","Home","filtros","setFiltros","estados","name","status","setStatus","grupoArea","setGrupoArea","area","setArea","setCategoria","activePeriod","setActPeriod","turno","setTurno","tipoReporte","setTipoReporte","rubros","Array","from","_","index","lista","i","title","today","inicioDeSemana","yesterday","setDate","wd","getDay","semana","useContext","setColores","handleSemana","anno","substring","mes","dia","d","weekday","sacarAreas","a","datas","creds","require","doc","GoogleSpreadsheet","useServiceAccountAuth","loadInfo","sheet","sheetsById","getRows","rows","columnCount","cols","headerValues","encabezado","lastr","loadCells","startRowIndex","endRowIndex","startColumnIndex","endColumnIndex","getCell","unique","Set","map","item","grupo","sort","unshift","sacardata","existingItems","x","reduce","prev","next","Incumple","Tipo","Reporte","FechaRecorrido","total","cumplimiento","isNaN","ceil","HandleTurnos","e","valor","target","id","tipo","reporte","periodo","lugar","t","numTurno","slice","includes","filter","Turno","parseInt","findIndex","Area","handleRubros","reporteFiltrado","element","uniqueCategoria","Categoria","uniqueSubCategoria","SubCategoria","datam","y","b","parseFloat","console","log","useEffect","Grid","textAlign","verticalAlign","Dimmer","active","page","Loader","Row","Header","Button","Group","color","inverted","style","borderRadius","onClick","Or","columns","Column","size","basic","fluid","Icon","idx","padding","content","Segment","backgroundImage","Observacion","params","useParams","startDate","dd","mm","yyyy","hora","getHours","minutos","getMinutes","date","toISOString","toString","ar","br","cr","dr","er","fr","gr","hr","ir","jr","kr","lr","mr","nr","or","pr","qr","rr","sr","tr","ur","vr","fecha_hora","nombre","rubro","observaciones","severidad","pac","fecha_cierre","responsable","anexo","confirmado","extension","nueva_fecha","detalle","anexo2","obsDetalle","persObservadas","aplica","personas","join","Container","Item","Image","src","Content","as","Description","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","auth","firestore","xltoDate","fechaStr","Tareas","myData","setMyData","myPac","setMyPac","activoID","setActivoID","totalPagina","setTotalPagina","setExtension","extDate","setExtDate","setDetalle","previewImg","saving","setSaving","preventDate","setPreventDate","pap","setpap","setImageAsFile","imgUrl","imageAsUrl","setImageAsUrl","setSubir","event","files","imageFile","reader","FileReader","preview","document","querySelector","onload","setAttribute","result","readAsDataURL","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","err","registrar","extendido","wr","xr","formula","saveUpdatedCells","display","alignItems","justifyContent","Pagination","defaultActivePage","ellipsisItem","icon","firstItem","lastItem","prevItem","nextItem","totalPages","onPageChange","activePage","List","round","height","overflowY","toUpperCase","FechaString","Checkbox","disabled","label","checked","onChange","Input","type","defaultValue","Form","TextArea","detalle_pac","placeholder","className","alt","priceEls","querySelectorAll","innerText","click","iniciar","Consultas","dataFound","setDataFound","inicio","setInicio","final","setFinal","activeIndex","setActiveIndex","buscar","setBuscar","creador","setCreador","activeItem","setActiveItem","open","setOpen","keyA","keyB","Modal","onClose","onOpen","image","wrapped","observador","observado","Actions","Accordion","Title","titleProps","Label","Dropdown","multiple","search","selection","divided","href","prevObject","Meta","Extra","Registros","dummyImg","setID","loading","setLoading","perfil","setPerfil","correo","setCorreo","step","setStep","setTipo","cat","setCat","setData2","catData","setCatData","subCatData","setSubCatData","subCat","setSubCat","detalles","setDetalles","que","setQue","donde","setDonde","pacStep","setPacStep","involucrados","setInvolucrados","plan","setPlan","setStartDate","resp","setResp","segCat","useRef","segSubCat","setPreviewImg","imageAsFile","subir","guardar","setGuardar","confirmar","setConfirmar","setSeveridad","imgUpload","setImgUpload","history","useHistory","Blob","archivoSelect","error","ref","put","on","snapShot","child","getDownloadURL","then","fireBaseUrl","datas2","sheet2","rows2","handleTipoClick","current","focus","datosUsuario","Perfil","datoResp","handleCatClick","handleStep","handleArea","UniqueID","now","addRow","Personas_Observadas","Detalle","Aplica","ids","notificar","codigo","templateParams","to_email","fecha_limite","qseb","observacion","imagen","registrado","emailjs","send","apiKeys","response","handleFireBaseUpload","header","actions","positive","labelPosition","Step","ordered","attached","unstackable","completed","Popup","trigger","circular","Ref","innerRef","Card","itemsPerRow","raised","ui","button","scrolling","clearable","handleImageUpload","Categorias","Login","password","setPassword","maxWidth","stacked","iconPosition","currentTarget","onChangeHandler","preventDefault","found","alert","login","Message","userInfo","floated","negative","removeItem","FechaStringLong","hour","minute","Schedule","persona","setPersona","setLugar","listaArea","setListaArea","setFecha","Usuario","Fecha","delete","FechaProgramado","sleep","milliseconds","currentDate","ReporteDeTurno","reportes","setReportes","sinFiltro","setSinFiltro","setCheckList","cats","setCats","setRubros","activeRubro","setActRubro","requerimientos","setReq","activeReq","setActiveR","incumple","percentage","setPercentage","duplicado","setDuplicado","setTipoRep","url","img","getElementById","archivo","uploadTask","sacarReportes","forEach","location","opcional","aplican","self","indexOf","uniqueID","Id","FechaRegistro","PersonasObservadas","Imagen","handleCategorias","chklist","handleSubCat","handleCheck","chk","HandleTodos","handleOpcional","handleObservados","handleDetalles","handleWindowResize","addEventListener","removeEventListener","userArea","keys","toLowerCase","split","some","w","validar","Divider","secondary","filtro","Radio","backgroundColor","left","floating","Acto","reqIdx","requerimiento","pointing","Progress","percent","indicating","success","progress","Minuta","stackable","App","visible","setVisible","basename","Add","Menu","Link","to","position","Sidebar","Pushable","animation","onHide","vertical","direction","Pusher","exact","path","render","props","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.371175c9.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport userData from \"./employee.json\";\r\n\r\nexport const Contexto = React.createContext(null);\r\n\r\nexport default ({ children }) => {\r\n  let iniciado = null;\r\n  if (sessionStorage.getItem(\"user\")) {\r\n    iniciado = sessionStorage.user;\r\n  } else if (localStorage.getItem(\"user\")) {\r\n    iniciado = localStorage.user;\r\n  }\r\n  const [user, setUser] = useState(iniciado);\r\n  const [recordar, setRecordar] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [data1, setdata1] = useState();\r\n  const [data2, setdata2] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [reportData, setRepData] = useState();\r\n  const [pagina, setPagina] = useState();\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const personal = [];\r\n  for (var j = 0; j < userData.length; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  var breakpoint = 620;\r\n  const color = [\r\n    {\r\n      categoria: \"Calidad\",\r\n      activo: \"#FF5300\",\r\n      inactivo: \"#FF915C\",\r\n      texto: \"white\",\r\n      caption: \"Quality\",\r\n      short: \"Q\",\r\n      gradient: \"linear-gradient(to right,#fc4a1a,#f7b733)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Seguridad\",\r\n      activo: \"#5A0FC4\",\r\n      inactivo: \"#8857D1\",\r\n      texto: \"white\",\r\n      caption: \"Safety\",\r\n      short: \"S\",\r\n      gradient: \"linear-gradient(to right,#8E2DE2,#4A00E0)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Ambiente\",\r\n      activo: \"#00C37E\",\r\n      inactivo: \"#4ACFA0\",\r\n      texto: \"white\",\r\n      caption: \"Environment\",\r\n      short: \"E\",\r\n      gradient: \"linear-gradient(to right,#56ab2f,#a8e063)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Bioseguridad\",\r\n      activo: \"#FFE700\",\r\n      inactivo: \"#FFEF5C\",\r\n      texto: \"black\",\r\n      caption: \"BioS\",\r\n      short: \"B\",\r\n      gradient: \"linear-gradient(to right,#ffe259,#ffa751)\",\r\n      cumple: 100,\r\n    },\r\n  ];\r\n  const [colores, setColores] = useState(color);\r\n  const contexto = {\r\n    user: [user, setUser],\r\n    recordar: [recordar, setRecordar],\r\n    data: [data, setData],\r\n    areas: [areas, setAreas],\r\n    reportData: [reportData, setRepData],\r\n    personal: personal,\r\n    colores: [colores, setColores],\r\n    pagina: [pagina, setPagina],\r\n    width: [width, setWidth],\r\n    data1: [data1, setdata1],\r\n    data2: [data2, setdata2],\r\n    breakpoint: breakpoint,\r\n    userData: userData,\r\n  };\r\n\r\n  return <Contexto.Provider value={contexto}>{children}</Contexto.Provider>;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Dimmer,\r\n  Loader,\r\n  Grid,\r\n  Header,\r\n  Button,\r\n  Segment,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Home({ user }) {\r\n  const [data, setData] = useState();\r\n  const [hoy, setHoy] = useState();\r\n  const [ayer, setAyer] = useState();\r\n  const [mes, setMes] = useState();\r\n  const [filtros, setFiltros] = useState(false);\r\n  const [chartData, setChartData] = useState();\r\n  const [chartMes, setChartMes] = useState();\r\n  const [chartRubros, setChartRubros] = useState();\r\n  const [mesAnterior, setMesAnterior] = useState();\r\n  const [aplicable, setAplicable] = useState();\r\n  const [prueba, setPrueba] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [grupoArea, setGrupoArea] = useState();\r\n  const [area, setArea] = useState(\"Todas\");\r\n  const [categoria, setCategoria] = useState();\r\n  const [leyendaMes, setLeyendaMes] = useState();\r\n  const [leyenda, setLeyenda] = useState();\r\n  const [activeIndex, setActIdx] = useState();\r\n  const [activePeriod, setActPeriod] = useState(\"Esta Semana\");\r\n  const [turno, setTurno] = useState(\"Todos\");\r\n  const [tipoReporte, setTipoReporte] = useState(\"Reporte de Turno\");\r\n  //Fechas\r\n  //fechas estan erradas hay que corregir\r\n  const dias = Array.from({ length: 31 }, (_, index) => index + 1);\r\n  const meses = Array.from({ length: 12 }, (_, index) => index + 1);\r\n  const rubros = [\"Seguridad\", \"Calidad\", \"Ambiental\", \"Bioseguridad\"];\r\n  const lista = [];\r\n  for (var i = 0; i < rubros.length; i++) {\r\n    lista.push({ title: rubros[i] });\r\n  }\r\n  let today = new Date();\r\n  let inicioDeSemana = new Date();\r\n  let yesterday = new Date(today);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  let wd = today.getDay();\r\n  wd === 0 ? (wd = 7) : (wd = wd);\r\n  //Fechas\r\n  const [dataSemana, setDS] = useState();\r\n  const [semana, setSemana] = useState(\r\n    FechaStringShort(inicioDeSemana.setDate(inicioDeSemana.getDate() - wd + 1))\r\n  );\r\n  const turnos = [\"Todos\", \"Turno 1\", \"Turno 2\", \"Turno 3\"];\r\n  const periodos = [\"Esta Semana\", \"Este Mes\", \"Hoy\", \"Ayer\", \"Seleccionar\"];\r\n  const [periodo, setPeriodo] = useState();\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  function handleSemana(fecha) {\r\n    var anno = fecha.substring(0, 4);\r\n    var mes = fecha.substring(5, 7);\r\n    var dia = fecha.substring(8, 10);\r\n    var d = new Date(anno, mes - 1, dia);\r\n    let weekday = d.getDay();\r\n    weekday === 0 ? (weekday = 7) : (weekday = weekday);\r\n    d.setDate(d.getDate() - weekday + 1);\r\n    return FechaStringShort(d);\r\n  }\r\n\r\n  const sacarAreas = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n    const unique = [...new Set(datas.map((item) => item.grupo))];\r\n    unique.sort();\r\n    unique.unshift(\"Todas\");\r\n    setGrupoArea(unique);\r\n    setStatus();\r\n  };\r\n\r\n  const sacardata = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n\r\n    setData(datas);\r\n    setColores((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        var cumple = datas.reduce(\r\n          (prev, next) =>\r\n            prev +\r\n            (next.Incumple === \"N\" &&\r\n              next.Tipo === x.categoria &&\r\n              next.Reporte === tipoReporte &&\r\n              handleSemana(\r\n                FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n              ) == semana &&\r\n              1),\r\n          0\r\n        );\r\n        var total = datas.reduce(\r\n          (prev, next) =>\r\n            prev +\r\n            (next.Tipo === x.categoria &&\r\n              next.Reporte === tipoReporte &&\r\n              handleSemana(\r\n                FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n              ) == semana &&\r\n              1),\r\n          0\r\n        );\r\n        var cumplimiento = isNaN(cumple / total)\r\n          ? \"-\"\r\n          : Math.ceil((cumple / total) * 100) + \"%\";\r\n        return { ...x, cumple: cumplimiento };\r\n      });\r\n    });\r\n    setStatus();\r\n  };\r\n\r\n  function HandleTurnos(e, { value }) {\r\n    var valor = e.target.id;\r\n    var tipo = e.target.name;\r\n    let reporte = tipoReporte;\r\n    let periodo = activePeriod;\r\n    let lugar = area;\r\n    let t = turno;\r\n    let numTurno = t.slice(-1);\r\n    if (tipo.includes(\"Turno\")) {\r\n      setTurno(valor);\r\n      numTurno = valor.slice(-1);\r\n      t = valor;\r\n    } else if (tipo.includes(\"Reporte\")) {\r\n      setTipoReporte(valor);\r\n      reporte = valor;\r\n    } else if (tipo.includes(\"Area\")) {\r\n      setArea(valor);\r\n      lugar = valor;\r\n    } else {\r\n      setActPeriod(valor);\r\n      periodo = valor;\r\n    }\r\n    setColores((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        var cumple = data.filter(\r\n          (next) =>\r\n            next.Incumple === \"N\" &&\r\n            next.Tipo === x.categoria &&\r\n            next.Reporte === reporte &&\r\n            (periodo === \"Esta Semana\"\r\n              ? handleSemana(\r\n                  FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n                ) == semana\r\n              : periodo === \"Este Mes\"\r\n              ? FechaStringShort(\r\n                  ExcelDateToJSDate(next.FechaRecorrido)\r\n                ).substring(5, 7) === FechaStringShort(today).substring(5, 7)\r\n              : periodo === \"Hoy\"\r\n              ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n                FechaStringShort(today)\r\n              : periodo === \"Ayer\"\r\n              ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n                FechaStringShort(yesterday)\r\n              : true) &&\r\n            (reporte.includes(\"Turno\") && t !== \"Todos\"\r\n              ? next.Turno === parseInt(numTurno)\r\n              : true) &&\r\n            (lugar !== \"Todas\"\r\n              ? areas[areas.findIndex((x) => x.name === next.Area)].grupo ===\r\n                lugar\r\n              : true)\r\n        ).length;\r\n        var total = data.filter(\r\n          (next) =>\r\n            next.Tipo === x.categoria &&\r\n            next.Reporte === reporte &&\r\n            (periodo === \"Esta Semana\"\r\n              ? handleSemana(\r\n                  FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n                ) == semana\r\n              : periodo === \"Este Mes\"\r\n              ? FechaStringShort(\r\n                  ExcelDateToJSDate(next.FechaRecorrido)\r\n                ).substring(5, 7) === FechaStringShort(today).substring(5, 7)\r\n              : periodo === \"Hoy\"\r\n              ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n                FechaStringShort(today)\r\n              : periodo === \"Ayer\"\r\n              ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n                FechaStringShort(yesterday)\r\n              : true) &&\r\n            (reporte.includes(\"Turno\") && t !== \"Todos\"\r\n              ? next.Turno === parseInt(numTurno)\r\n              : true) &&\r\n            (lugar !== \"Todas\"\r\n              ? areas[areas.findIndex((x) => x.name === next.Area)].grupo ===\r\n                lugar\r\n              : true)\r\n        ).length;\r\n\r\n        var cumplimiento = isNaN(cumple / total)\r\n          ? \"-\"\r\n          : Math.ceil((cumple / total) * 100) + \"%\";\r\n        return { ...x, cumple: cumplimiento };\r\n      });\r\n    });\r\n  }\r\n  const {\r\n    [\"data1\"]: [data1, setdata1],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"data2\"]: [data2, setdata2],\r\n  } = useContext(Contexto);\r\n  function handleRubros(e, { id }) {\r\n    let categoria = id;\r\n    setCategoria(id);\r\n    let reporte = tipoReporte;\r\n    let periodo = activePeriod;\r\n    let lugar = area;\r\n    let t = turno;\r\n    let numTurno = t.slice(-1);\r\n    const reporteFiltrado = data.filter(\r\n      (next) =>\r\n        next.Tipo === categoria &&\r\n        next.Reporte === tipoReporte &&\r\n        (activePeriod === \"Esta Semana\"\r\n          ? handleSemana(\r\n              FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n            ) == semana\r\n          : activePeriod === \"Este Mes\"\r\n          ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)).substring(\r\n              5,\r\n              7\r\n            ) === FechaStringShort(today).substring(5, 7)\r\n          : activePeriod === \"Hoy\"\r\n          ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n            FechaStringShort(today)\r\n          : activePeriod === \"Ayer\"\r\n          ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n            FechaStringShort(yesterday)\r\n          : true) &&\r\n        (tipoReporte.includes(\"Turno\") && t !== \"Todos\"\r\n          ? next.Turno === parseInt(turno.slice(-1))\r\n          : true) &&\r\n        (area !== \"Todas\"\r\n          ? areas[areas.findIndex((element) => element.name === next.Area)]\r\n              .grupo === area\r\n          : true) &&\r\n        next.Incumple === \"Y\"\r\n    );\r\n    const uniqueCategoria = [\r\n      ...new Set(reporteFiltrado.map((item) => item.Categoria)),\r\n    ];\r\n    const uniqueSubCategoria = [\r\n      ...new Set(reporteFiltrado.map((item) => item.SubCategoria)),\r\n    ];\r\n    let datam = [];\r\n    uniqueCategoria.map((x) => {\r\n      datam.push({\r\n        x: x,\r\n        y: reporteFiltrado.filter((item) => item.Categoria === x).length,\r\n      });\r\n    });\r\n    datam.sort((a, b) => parseFloat(b.y) - parseFloat(a.y));\r\n    setdata1(datam);\r\n    console.log(datam);\r\n    datam = [];\r\n    uniqueSubCategoria.map((x) => {\r\n      datam.push({\r\n        x: x,\r\n        y: reporteFiltrado.filter((item) => item.SubCategoria === x).length,\r\n      });\r\n    });\r\n    datam.sort((a, b) => parseFloat(b.y) - parseFloat(a.y));\r\n    setdata2(datam);\r\n    console.log(datam);\r\n  }\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n        <Dimmer\r\n          active={\r\n            status || estados.filter((x) => x.caption === status).length != 0\r\n          }\r\n          page\r\n        >\r\n          <Loader>{status}</Loader>\r\n        </Dimmer>\r\n        <Grid.Row>\r\n          <Header>\r\n            <Button.Group>\r\n              <Button\r\n                id=\"Reporte de Turno\"\r\n                color=\"red\"\r\n                name=\"ReporteT\"\r\n                inverted={tipoReporte !== \"Reporte de Turno\"}\r\n                style={{ borderRadius: \"15px\" }}\r\n                onClick={HandleTurnos}\r\n              >\r\n                Reporte de Turno\r\n              </Button>\r\n              <Button.Or color=\"red\" text={\"o\"} />\r\n              <Button\r\n                id=\"Reporte de Recorrido\"\r\n                color=\"red\"\r\n                name=\"ReporteR\"\r\n                inverted={tipoReporte !== \"Reporte de Recorrido\"}\r\n                style={{ borderRadius: \"15px\" }}\r\n                onClick={HandleTurnos}\r\n              >\r\n                Reporte de Recorrido\r\n              </Button>\r\n            </Button.Group>\r\n          </Header>\r\n        </Grid.Row>\r\n        <Grid.Row columns={4}>\r\n          <Grid.Column>\r\n            <Button\r\n              size=\"mini\"\r\n              basic\r\n              style={{ borderRadius: \"15px\" }}\r\n              fluid\r\n              onClick={() => {\r\n                filtros ? setFiltros(false) : setFiltros(true);\r\n              }}\r\n            >\r\n              <Icon name=\"arrow down\"></Icon> Filtros\r\n            </Button>\r\n          </Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n        </Grid.Row>\r\n        {filtros && (\r\n          <>\r\n            <b>Periodo</b>\r\n            <Grid.Row>\r\n              {periodos.map((x, idx) => {\r\n                return (\r\n                  <Grid.Column width={4} style={{ padding: \"2px\" }}>\r\n                    <Button\r\n                      size=\"tiny\"\r\n                      color=\"red\"\r\n                      inverted\r\n                      content={x}\r\n                      name={\"Periodo\" + idx}\r\n                      id={x}\r\n                      active={activePeriod === x}\r\n                      fluid\r\n                      style={{ borderRadius: \"15px\" }}\r\n                      onClick={HandleTurnos}\r\n                    />\r\n                  </Grid.Column>\r\n                );\r\n              })}\r\n            </Grid.Row>\r\n            <b>Area</b>\r\n            <Grid.Row>\r\n              {grupoArea.map((x, idx) => {\r\n                return (\r\n                  <Grid.Column width={5} style={{ padding: \"2px\" }}>\r\n                    <Button\r\n                      size=\"tiny\"\r\n                      color=\"red\"\r\n                      inverted\r\n                      content={x}\r\n                      name={\"Area\" + idx}\r\n                      id={x}\r\n                      active={area === x}\r\n                      fluid\r\n                      style={{ borderRadius: \"15px\" }}\r\n                      onClick={HandleTurnos}\r\n                    />\r\n                  </Grid.Column>\r\n                );\r\n              })}\r\n            </Grid.Row>\r\n            {tipoReporte === \"Reporte de Turno\" && <b>Turno</b>}\r\n            <Grid.Row columns=\"equal\">\r\n              {tipoReporte === \"Reporte de Turno\" &&\r\n                turnos.map((x, idx) => {\r\n                  return (\r\n                    <Grid.Column>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"red\"\r\n                        inverted\r\n                        content={x}\r\n                        name={\"Turno\" + idx}\r\n                        id={x}\r\n                        active={turno === x}\r\n                        fluid\r\n                        style={{ borderRadius: \"15px\" }}\r\n                        onClick={HandleTurnos}\r\n                      />\r\n                    </Grid.Column>\r\n                  );\r\n                })}\r\n            </Grid.Row>\r\n          </>\r\n        )}\r\n        {width <= breakpoint && data && (\r\n          <Grid.Row columns={2}>\r\n            {colores.map((x, idx) => {\r\n              if (idx < 2) {\r\n                return (\r\n                  <Grid.Column>\r\n                    <Segment\r\n                      key={idx + x.categoria}\r\n                      name={x.categoria}\r\n                      style={{\r\n                        backgroundImage: x.gradient,\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      <h1>{x.cumple}</h1>\r\n                      <p>{x.categoria}</p>\r\n                    </Segment>\r\n                  </Grid.Column>\r\n                );\r\n              }\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n        {width <= breakpoint && data && (\r\n          <Grid.Row columns={2}>\r\n            {colores.map((x, idx) => {\r\n              if (idx >= 2) {\r\n                return (\r\n                  <Grid.Column>\r\n                    <Segment\r\n                      key={idx + x.categoria}\r\n                      name={x.categoria}\r\n                      style={{\r\n                        backgroundImage: x.gradient,\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      <h1>{x.cumple}</h1>\r\n                      <p>{x.categoria}</p>\r\n                    </Segment>\r\n                  </Grid.Column>\r\n                );\r\n              }\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n        {width > breakpoint && data && (\r\n          <Grid.Row columns={4}>\r\n            {colores.map((x, idx) => {\r\n              return (\r\n                <Grid.Column>\r\n                  <Button\r\n                    id={x.categoria}\r\n                    onClick={handleRubros}\r\n                    fluid\r\n                    style={{\r\n                      backgroundImage: x.gradient,\r\n                      color: x.texto,\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    <h1\r\n                      style={{\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      {x.cumple}\r\n                    </h1>\r\n                    <p\r\n                      style={{\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      {x.categoria}\r\n                    </p>\r\n                  </Button>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n        <Grid.Row columns={1}></Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/fondo.bff34455.jpg\";","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Card,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Observacion({ user }) {\r\n  let params = useParams();\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas = datas.filter((item) => {\r\n      return item.id === params.id;\r\n    });\r\n\r\n    if (datas.length > 1) {\r\n      var personas = datas.map((e) => e.persObservadas).join(\", \");\r\n      console.log(personas);\r\n      datas[0].persObservadas = personas;\r\n      datas = datas.slice(0, 1);\r\n    }\r\n\r\n    setData(datas);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    console.log(params);\r\n    !data && sacardata();\r\n    data && console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {data && (\r\n        <Segment\r\n          onClick={() => {\r\n            console.log(data);\r\n          }}\r\n        >\r\n          <Item>\r\n            <Item.Image size=\"medium\" src={data[0].anexo} />\r\n\r\n            <Item.Content>\r\n              <Item.Header as=\"h2\">\r\n                {data[0].rubro + \" - \" + data[0].categoria}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                <p>\r\n                  <b>Detalle: </b> {data[0].observaciones}\r\n                  {data[0].obsDetalle && \" : \" + data[0].obsDetalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(data[0].fecha).toISOString().slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {data[0].area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {data[0].nombre}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {data[0].persObservadas}\r\n                </p>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Observacion;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD2qP-hydl9iaoxa0FO07FG5KDu9d3bGuA\",\r\n  authDomain: \"sasso-test-285920.firebaseapp.com\",\r\n  databaseURL: \"https://sasso-test-285920.firebaseio.com\",\r\n  projectId: \"sasso-test-285920\",\r\n  storageBucket: \"sasso-test-285920.appspot.com\",\r\n  messagingSenderId: \"191632707331\",\r\n  appId: \"1:191632707331:web:954ff5c5c38d8dcae4e336\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst getUserDocument = async (uid) => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching user\", error);\r\n  }\r\n};\r\nconst generateUserDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n  if (!snapshot.exists) {\r\n    const { Nombre, Correo, Apellido } = user;\r\n    try {\r\n      await userRef.set({\r\n        Nombre,\r\n        Correo,\r\n        Apellido,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user document\", error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\nexport {\r\n  storage,\r\n  auth,\r\n  firestore,\r\n  generateUserDocument,\r\n  getUserDocument,\r\n  firebase as default,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Statistic,\r\n  Divider,\r\n  Dimmer,\r\n  Loader,\r\n  Pagination,\r\n  Card,\r\n  Label,\r\n  Checkbox,\r\n  TextArea,\r\n  List,\r\n  Header,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${da}-${mo}-${ye}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction xltoDate(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo}-${da}`;\r\n  if (mo < 10) {\r\n    fechaStr = `${ye}-0${mo}-${da}`;\r\n  }\r\n\r\n  return fechaStr;\r\n}\r\n\r\nfunction Tareas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [data, setData] = useState(\"\");\r\n  const [myData, setMyData] = useState(\"\");\r\n  const [myPac, setMyPac] = useState(\"\");\r\n  const [activoID, setActivoID] = useState(\"\");\r\n  const [pagina, setPagina] = useState(1);\r\n  const [totalPagina, setTotalPagina] = useState(0);\r\n  const [extension, setExtension] = useState(\"N\");\r\n  const [extDate, setExtDate] = useState(date);\r\n  const [detalle, setDetalle] = useState(\"\");\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [saving, setSaving] = useState(false);\r\n  const [preventDate, setPreventDate] = useState(date);\r\n  const [pap, setpap] = useState(\"\");\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      reader.onload = function (e) {\r\n        preview.setAttribute(\"src\", e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      preview = document.querySelector(\"#blah\");\r\n      preview.setAttribute(\"src\", \"\");\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  const handleFireBaseUpload = (e) => {\r\n    if (subir) {\r\n      e.preventDefault();\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      }\r\n      const uploadTask = storage\r\n        .ref(`/images/${imageAsFile.name}`)\r\n        .put(imageAsFile);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapShot) => {\r\n          //takes a snap shot of the process as it is happening\r\n          console.log(snapShot);\r\n        },\r\n        (err) => {\r\n          //catches the errors\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          // gets the functions from storage refences the image storage in firebase by the children\r\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n          storage\r\n            .ref(\"images\")\r\n            .child(imageAsFile.name)\r\n            .getDownloadURL()\r\n            .then((fireBaseUrl) => {\r\n              setImageAsUrl((prevObject) => ({\r\n                ...prevObject,\r\n                imgUrl: fireBaseUrl,\r\n              }));\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.responsable === user;\r\n      })\r\n    );\r\n    setMyPac(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      })\r\n    );\r\n    setTotalPagina(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      }).length\r\n    );\r\n    try {\r\n      setActivoID(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].id\r\n      );\r\n      setExtension(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].extension\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setSaving(true);\r\n    let extendido = extension;\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (sheet.getCell(j, 18).value === activoID) {\r\n        const mr = sheet.getCell(j, 12);\r\n        const or = sheet.getCell(j, 14);\r\n        const pr = sheet.getCell(j, 15);\r\n        const qr = sheet.getCell(j, 16);\r\n        const rr = sheet.getCell(j, 17);\r\n        const wr = sheet.getCell(j, 22);\r\n        const xr = sheet.getCell(j, 23);\r\n        mr.value = \"Pendiente Aprobacion\";\r\n        or.value = extendido;\r\n        if (extDate) {\r\n          pr.formula =\r\n            \"=date(\" +\r\n            extDate.substring(0, 4) +\r\n            \",\" +\r\n            extDate.substring(5, 7) +\r\n            \",\" +\r\n            extDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (pap) {\r\n          wr.value = pap;\r\n        }\r\n        if (preventDate) {\r\n          xr.formula =\r\n            \"=date(\" +\r\n            preventDate.substring(0, 4) +\r\n            \",\" +\r\n            preventDate.substring(5, 7) +\r\n            \",\" +\r\n            preventDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (detalle) {\r\n          qr.value = detalle;\r\n        }\r\n        if (imageAsUrl.imgUrl) {\r\n          rr.value = imageAsUrl.imgUrl;\r\n        }\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n    setSaving(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container>\r\n      <Dimmer active={!data || saving} page>\r\n        <Loader>{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      {user ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Pagination\r\n              defaultActivePage={1}\r\n              ellipsisItem={{\r\n                content: <Icon name=\"ellipsis horizontal\" />,\r\n                icon: true,\r\n              }}\r\n              firstItem={{\r\n                content: <Icon name=\"angle double left\" />,\r\n                icon: true,\r\n              }}\r\n              lastItem={{\r\n                content: <Icon name=\"angle double right\" />,\r\n                icon: true,\r\n              }}\r\n              prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\r\n              nextItem={{ content: <Icon name=\"angle right\" />, icon: true }}\r\n              totalPages={totalPagina}\r\n              onPageChange={(e, { activePage }) => {\r\n                setPagina(activePage);\r\n                setActivoID(myPac[activePage - 1].id);\r\n                setSubir(false);\r\n                setImageAsUrl(\"\");\r\n                setImageAsFile(\"\");\r\n                setExtension(myPac[activePage - 1].extension);\r\n                setExtension(date);\r\n                var preview = document.querySelector(\"#blah\");\r\n                preview.setAttribute(\"src\", \"\");\r\n                var archivoSelect = document.querySelector(\"#anexoImg\");\r\n                archivoSelect.value = \"\";\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <Segment>\r\n            <Header>Tareas</Header>\r\n            <List>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" />\r\n                <List.Content>\r\n                  <b>{myData.length} Acciones Totales</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"red\" />\r\n                <List.Content>\r\n                  <b>{myPac.length} Acciones Pendientes</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"green\" />\r\n                <List.Content>\r\n                  <b>\r\n                    {100 - Math.round((myPac.length / myData.length) * 100, 2)}{\" \"}\r\n                    % completada\r\n                  </b>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Segment>\r\n          <Segment\r\n            style={{\r\n              height: \"60vh\",\r\n              overflowY: \"scroll\",\r\n            }}\r\n          >\r\n            {myPac && myPac.length !== 0 ? (\r\n              <>\r\n                <Header>{myPac[pagina - 1].rubro.toUpperCase()}</Header>\r\n                <p>\r\n                  {myPac[pagina - 1].categoria}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].area}\r\n                  <br></br>\r\n                  Registrado por: {myPac[pagina - 1].nombre}\r\n                  <br></br>\r\n                  Hallazgo: {myPac[pagina - 1].observaciones}\r\n                </p>\r\n                <Header>Acciones Tomadas</Header>\r\n                <p>{myPac[pagina - 1].pac}</p>\r\n                <p>\r\n                  Fecha Limite Inicial:{\" \"}\r\n                  {FechaString(\r\n                    ExcelDateToJSDate(myPac[pagina - 1].fecha_cierre)\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" ? (\r\n                    <Checkbox\r\n                      disabled\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      checked\r\n                    />\r\n                  ) : (\r\n                    <Checkbox\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      onChange={() => {\r\n                        if (extension !== \"N\") {\r\n                          setExtension(\"N\");\r\n                        } else {\r\n                          setExtension(\"Y\");\r\n                        }\r\n                      }}\r\n                      checked={extension === \"Y\"}\r\n                    />\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" || extension === \"Y\" ? (\r\n                    <Input\r\n                      size=\"mini\"\r\n                      type=\"date\"\r\n                      onChange={(e) => {\r\n                        setExtDate(e.target.value);\r\n                      }}\r\n                      defaultValue={\r\n                        myPac[pagina - 1].extension === \"Y\"\r\n                          ? xltoDate(\r\n                              ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                            )\r\n                          : date\r\n                      }\r\n                    />\r\n                  ) : null}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Detalle Adicional\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"pacDetail\"\r\n                      name=\"planDetail\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      value={myPac[pagina - 1].detalle_pac}\r\n                      onChange={(e, { value }) => {\r\n                        setDetalle(value);\r\n                      }}\r\n                      placeholder=\"Detalle adicional de la acción tomada...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Acciones Preventivas</Header>\r\n                  <Input\r\n                    size=\"mini\"\r\n                    type=\"date\"\r\n                    onChange={(e) => {\r\n                      setPreventDate(e.target.value);\r\n                    }}\r\n                    defaultValue={\r\n                      myPac[pagina - 1].extension === \"Y\"\r\n                        ? xltoDate(\r\n                            ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                          )\r\n                        : date\r\n                    }\r\n                  />\r\n                  <br></br>\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"ppreventiva\"\r\n                      name=\"ppreventiva\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      onChange={(e, { value }) => {\r\n                        setpap(value);\r\n                      }}\r\n                      placeholder=\"Detalle de acción preventiva...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={handleImageUpload}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </p>\r\n\r\n                <div className=\"ui two buttons\">\r\n                  <Button color=\"yellow\" onClick={registrar}>\r\n                    Guardar\r\n                  </Button>\r\n                  <Button color=\"green\">Solicitar Aprobacion</Button>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Tareas;\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Modal,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Consultas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    setBuscar(true);\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas.sort(function (a, b) {\r\n      var keyA = a.fecha_hora,\r\n        keyB = b.fecha_hora;\r\n      // Compare the 2 dates\r\n      if (keyA > keyB) return -1;\r\n      if (keyA < keyB) return 1;\r\n      return 0;\r\n    });\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.nombre === user;\r\n      })\r\n    );\r\n    setDataFound(\r\n      datas.filter((item) => {\r\n        if (creador.length !== 0) {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final &&\r\n            creador.includes(item.nombre)\r\n          );\r\n        } else {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final\r\n          );\r\n        }\r\n      })\r\n    );\r\n    setBuscar(false);\r\n    setActiveIndex(-1);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    !data && sacardata();\r\n    data && console.log(myData);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Segment>\r\n        {activeItem && (\r\n          <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n          >\r\n            <Modal.Header>{activeItem.observaciones}</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={activeItem.anexo} wrapped />\r\n              <Modal.Description>\r\n                <Header>{activeItem.rubro + \"-\" + activeItem.categoria}</Header>\r\n                <p>\r\n                  <b>Detalle: </b> {activeItem.detalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(activeItem.fecha)\r\n                    .toISOString()\r\n                    .slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {activeItem.area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {activeItem.observador}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {activeItem.observado}\r\n                </p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"green\" onClick={() => setOpen(false)}>\r\n                OK\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        )}\r\n\r\n        <Dimmer active={buscar} page>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n        <Accordion fluid>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            Filtros\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            <>\r\n              <Input\r\n                label=\"Desde\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setInicio(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value > final && setFinal(e.target.value);\r\n                }}\r\n                value={inicio}\r\n                defaultValue={inicio}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Input\r\n                label=\"Hasta\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setFinal(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value < inicio && setInicio(e.target.value);\r\n                }}\r\n                value={final}\r\n                defaultValue={final}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Label>Registrado por </Label>\r\n              <Dropdown\r\n                fluid\r\n                multiple\r\n                search\r\n                selection\r\n                value={creador}\r\n                placeholder=\"Registrado por...\"\r\n                options={personal}\r\n                onChange={(e, { value }) => {\r\n                  setCreador(value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Button onClick={sacardata}>Buscar</Button>\r\n            </>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n      {dataFound && (\r\n        <Segment>\r\n          <Item.Group divided>\r\n            {dataFound.map((item) => (\r\n              <Item key={item.id}>\r\n                <Item.Content>\r\n                  <Item.Header\r\n                    as=\"a\"\r\n                    href={\"/observacion/\" + item.id}\r\n                    onClick={(e) => {\r\n                      setActiveItem((prevObject) => ({\r\n                        ...prevObject,\r\n                        id: item.id,\r\n                        rubro: item.rubro,\r\n                        categoria: item.categoria,\r\n                        observaciones: item.observaciones,\r\n                        detalle: item.obsDetalle,\r\n                        area: item.area,\r\n                        fecha: item.fecha,\r\n                        observador: item.nombre,\r\n                        observado: item.persObservadas,\r\n                        anexo: item.anexo ? item.anexo : dummyImg,\r\n                      }));\r\n                      //setOpen(true);\r\n                    }}\r\n                  >\r\n                    {item.rubro + \" - \" + item.categoria}\r\n                  </Item.Header>\r\n                  <Item.Meta>{item.observaciones}</Item.Meta>\r\n                  <Item.Description>\r\n                    {item.area +\r\n                      \" - \" +\r\n                      ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10)}\r\n                  </Item.Description>\r\n                  <Item.Extra>Observador:{item.nombre}</Item.Extra>\r\n                  <Item.Extra>\r\n                    Personas Observadas:{item.persObservadas}\r\n                  </Item.Extra>\r\n                  <Item.Extra>{item.obsDetalle}</Item.Extra>\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n          </Item.Group>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Consultas;\r\n","export default {\r\n  USER_ID: \"user_1s8Jx16sWB2djLHeed4yw\",\r\n  TEMPLATE_ID: \"template_oc6ugfi\",\r\n};\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Registros({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [idUnico, setID] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n  const [imgUpload, setImgUpload] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/images/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"images\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n                setImgUpload(fireBaseUrl);\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:E\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 4);\r\n      datas.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        src: cr.value,\r\n      });\r\n    }\r\n    setData(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  const handleTipoClick = (e) => {\r\n    if (tipo === e.target.name) {\r\n      setTipo(\"\");\r\n    } else {\r\n      setTipo(e.target.name);\r\n      console.log(e.target.name);\r\n      segCat.current.focus();\r\n      setCat(\"\");\r\n      setSubCat(\"\");\r\n      setSubCatData(\"\");\r\n    }\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    }\r\n  }, [areas]);\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  const handleCatClick = (e, { name }) => {\r\n    setSubCat(\"\");\r\n    setSubCatData(\"\");\r\n    setCat(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleStep = (e, { name }) => {\r\n    setStep(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleArea = (e, { name }) => {\r\n    setArea(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setConfirmar(true);\r\n  };\r\n\r\n  async function registrar() {\r\n    setLoading(true);\r\n    let wd = today.getDay();\r\n    wd === 0 ? (wd = 7) : (wd = wd);\r\n    let semana = FechaString(today.setDate(today.getDate() - wd + 1));\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const aplica = perfil === \"Registros\" ? \"Y\" : \"N\";\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    var j;\r\n    var UniqueID =\r\n      Date.now() +\r\n      user.substring(0, 2) +\r\n      tipo.substring(0, 1) +\r\n      subCat.substring(0, 2);\r\n    setID(UniqueID);\r\n    console.log(UniqueID);\r\n    for (j = 0; j < involucrados.length; j++) {\r\n      await sheet.addRow({\r\n        fecha: date,\r\n        fecha_hora: fecha,\r\n        nombre: creador,\r\n        area: area,\r\n        rubro: tipo,\r\n        categoria: cat,\r\n        observaciones: subCat,\r\n        pac: plan,\r\n        responsable: resp,\r\n        fecha_cierre: startDate,\r\n        anexo: imgUpload,\r\n        status: \"Pendiente\",\r\n        Personas_Observadas: involucrados[j],\r\n        id: UniqueID,\r\n        severidad: severidad,\r\n        Detalle: detalles,\r\n        Aplica: aplica,\r\n        semana: semana,\r\n        ids: 1 / involucrados.length,\r\n      });\r\n    }\r\n    if (correo !== \"No Aplica\") {\r\n      notificar(UniqueID);\r\n    }\r\n    setTipo(\"\");\r\n    setCat(\"\");\r\n    setSubCat(\"\");\r\n    setDetalles(\"\");\r\n    setInvolucrados([]);\r\n    setArea(\"\");\r\n    setPlan(\"\");\r\n    setResp(\"\");\r\n    setImageAsUrl(\"\");\r\n    setPreviewImg(\"\");\r\n    setLoading(false);\r\n    setConfirmar(false);\r\n    setSaving(true);\r\n  }\r\n\r\n  function notificar(codigo) {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      detalles: detalles,\r\n      imagen: \"https://www.miculturaqse507.com/sasso-app/observacion/\" + codigo,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n    setID(\"\");\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (subir) {\r\n      handleFireBaseUpload();\r\n    }\r\n  }, [subir]);\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div>\r\n          <Dimmer active={loading} page>\r\n            <Loader size=\"massive\">{data ? \"Saving\" : \"Loading\"}</Loader>\r\n          </Dimmer>\r\n          <Modal\r\n            header=\"Listo!\"\r\n            content=\"Su observación ha sido registrado exitosamente.\"\r\n            open={saving}\r\n            actions={[\r\n              {\r\n                key: \"done\",\r\n                content: \"Done\",\r\n                positive: true,\r\n                onClick: () => {\r\n                  setSaving(false);\r\n                  history.push(\"/observaciones\");\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <Modal\r\n            onClose={() => setConfirmar(false)}\r\n            onOpen={() => setConfirmar(true)}\r\n            open={confirmar}\r\n          >\r\n            <Modal.Header>Confirmar Información</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={previewImg} wrapped />\r\n              <Modal.Description>\r\n                <Header>Observacion de {tipo}</Header>\r\n                <p>{cat}</p>\r\n                <p>{subCat}</p>\r\n                <p>Severidad:{severidad}</p>\r\n                <Header>Persona(s) Observada(s)</Header>\r\n                {involucrados.map((item) => (\r\n                  <li>{item}</li>\r\n                ))}\r\n                <Header>Area</Header>\r\n                <p>{area}</p>\r\n                <Header>PLAN DE ACCION</Header>\r\n                <p>{plan}</p>\r\n                <p>Responsable: {resp}</p>\r\n                <p>Fecha de Cierre Previsto: {startDate}</p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"black\" onClick={() => setConfirmar(false)}>\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                content=\"Confirmar\"\r\n                labelPosition=\"right\"\r\n                icon=\"checkmark\"\r\n                onClick={() => {\r\n                  registrar();\r\n                }}\r\n                positive\r\n              />\r\n            </Modal.Actions>\r\n          </Modal>\r\n          {guardar ? (\r\n            <Button\r\n              fluid\r\n              color=\"green\"\r\n              content=\"Guardar\"\r\n              onClick={handleSave}\r\n            ></Button>\r\n          ) : null}\r\n          <Step.Group ordered size=\"mini\" attached=\"top\" unstackable>\r\n            <Step\r\n              active={step === \"Que\"}\r\n              name=\"Que\"\r\n              onClick={handleStep}\r\n              completed={que}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Observación</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"Donde\"}\r\n              name=\"Donde\"\r\n              onClick={handleStep}\r\n              completed={donde}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Area</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"PAC\"}\r\n              name=\"PAC\"\r\n              onClick={handleStep}\r\n              completed={pacStep}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>PAC</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n          </Step.Group>\r\n          <Segment attached>\r\n            {step === \"Que\" ? (\r\n              <Container>\r\n                {user === \"user\" && (\r\n                  <>\r\n                    <Segment>\r\n                      <Header>Nombre del Observador</Header>\r\n                      <Input\r\n                        fluid\r\n                        placeholder=\"Nombre del Observador...\"\r\n                        onChange={(e, { value }) => {\r\n                          setCreador(value);\r\n                        }}\r\n                      />\r\n                    </Segment>\r\n                  </>\r\n                )}\r\n                <Segment name=\"segmentTipo\">\r\n                  <Header>Tipo de Observación</Header>\r\n                  {tipos.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          circular\r\n                          name={item.name}\r\n                          onClick={handleTipoClick}\r\n                          active={tipo === item.name}\r\n                        >\r\n                          {item.id}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment name=\"segmentInvol\">\r\n                  <Header>Personas Responsables/Involucradas</Header>\r\n                  <Dropdown\r\n                    fluid\r\n                    multiple\r\n                    search\r\n                    selection\r\n                    value={involucrados}\r\n                    placeholder=\"Seleccionar Personas Involucradas\"\r\n                    options={personal}\r\n                    onChange={(e, { value }) => {\r\n                      setInvolucrados(value);\r\n                      console.log(value);\r\n                    }}\r\n                  />\r\n                </Segment>\r\n                <Ref innerRef={segCat}>\r\n                  <Segment name=\"segmentCat\">\r\n                    <Header>Categoria de la Observación</Header>\r\n                    <Card.Group itemsPerRow={4}>\r\n                      {catData\r\n                        ? catData.map((item) => (\r\n                            <Popup\r\n                              trigger={\r\n                                <Card\r\n                                  raised\r\n                                  color={\r\n                                    cat === item.Categoria ? \"red\" : \"black\"\r\n                                  }\r\n                                  name={item.Categoria}\r\n                                  onClick={handleCatClick}\r\n                                >\r\n                                  <Image\r\n                                    src={item.src}\r\n                                    size=\"mini\"\r\n                                    wrapped\r\n                                    ui={false}\r\n                                  />\r\n                                  <Card.Content>\r\n                                    {cat === item.Categoria ? (\r\n                                      <Icon\r\n                                        color=\"green\"\r\n                                        name=\"check circle\"\r\n                                      ></Icon>\r\n                                    ) : null}\r\n                                  </Card.Content>\r\n                                </Card>\r\n                              }\r\n                            >\r\n                              <Popup.Header>{item.Categoria}</Popup.Header>\r\n                            </Popup>\r\n                          ))\r\n                        : null}\r\n                    </Card.Group>\r\n                  </Segment>\r\n                </Ref>\r\n\r\n                {subCatData ? (\r\n                  <Ref innerRef={segSubCat}>\r\n                    <Segment name=\"segmentSubCat\">\r\n                      <Header>Observación</Header>\r\n                      <Dropdown\r\n                        fluid\r\n                        button\r\n                        search\r\n                        scrolling\r\n                        clearable\r\n                        value={subCat}\r\n                        placeholder=\"Seleccionar Observacion\"\r\n                        options={subCatData}\r\n                        onChange={(e, { value }) => {\r\n                          setSubCat(value);\r\n                        }}\r\n                      />\r\n                      <br />\r\n                      <Header>\r\n                        Severidad\r\n                        <Popup\r\n                          trigger={\r\n                            <div>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 0 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(1);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 1 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(2);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 2 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(3);\r\n                                }}\r\n                              ></Icon>\r\n                            </div>\r\n                          }\r\n                          content={\"Grado de Severidad: \" + severidad}\r\n                        ></Popup>\r\n                      </Header>\r\n                      <Form>\r\n                        <TextArea\r\n                          placeholder=\"Detalles\"\r\n                          onChange={(e, { value }) => {\r\n                            setDetalles(value);\r\n                          }}\r\n                        ></TextArea>\r\n                      </Form>\r\n                    </Segment>\r\n                  </Ref>\r\n                ) : null}\r\n              </Container>\r\n            ) : null}\r\n            {step === \"Donde\" && areas ? (\r\n              <div>\r\n                <Segment>\r\n                  <Header>Área de la Observación</Header>\r\n                  {areas.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          style={{ width: \"15vw\" }}\r\n                          name={item.name}\r\n                          onClick={handleArea}\r\n                          active={area === item.name}\r\n                        >\r\n                          {item.short}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      handleImageUpload(e);\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </Segment>\r\n              </div>\r\n            ) : null}\r\n            {step === \"PAC\" ? (\r\n              <Segment>\r\n                <Header>Acción Tomada</Header>\r\n                <Form>\r\n                  <TextArea\r\n                    placeholder=\"Escriba la Acción Tomada aquí...\"\r\n                    value={plan}\r\n                    onChange={(e) => {\r\n                      setPlan(e.target.value);\r\n                      console.log(e.target.value);\r\n                    }}\r\n                  ></TextArea>\r\n                </Form>\r\n                <Header>Fecha de Cierre Previsto</Header>\r\n                <Input\r\n                  fluid\r\n                  type=\"date\"\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                  defaultValue={startDate}\r\n                />\r\n                <Header>Responsable del Plan</Header>\r\n                <Dropdown\r\n                  fluid\r\n                  search\r\n                  selection\r\n                  placeholder=\"Seleccionar Responsable del Plan\"\r\n                  options={personal}\r\n                  value={resp}\r\n                  onChange={(e, { value }) => {\r\n                    setResp(value);\r\n                    console.log(value);\r\n                  }}\r\n                />\r\n              </Segment>\r\n            ) : null}\r\n          </Segment>\r\n        </div>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registros;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction Categorias({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n\r\n  const areas = [\r\n    { id: 2, name: \"Linea1\", short: \"L1\" },\r\n    { id: 3, name: \"Linea2\", short: \"L2\" },\r\n    { id: 4, name: \"Linea3\", short: \"L3\" },\r\n    { id: 5, name: \"Linea4\", short: \"L4\" },\r\n    { id: 6, name: \"Linea5\", short: \"L5\" },\r\n    { id: 1, name: \"Area de Reciclaje\", short: \"AR\" },\r\n    { id: 8, name: \"Sala de Jarabe\", short: \"SJ\" },\r\n    { id: 9, name: \"Taller de Mtto\", short: \"TM\" },\r\n    { id: 9, name: \"Area de Operaciones\", short: \"OP\" },\r\n    { id: 7, name: \"PTAR\", short: \"PTAR\" },\r\n    { id: 10, name: \"PTA\", short: \"PTA\" },\r\n    { id: 11, name: \"Oficina Administrativa\", short: \"ADM\" },\r\n  ];\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/iconos/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"iconos\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      var data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    console.log(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (imageAsUrl) {\r\n      console.log(imageAsUrl.imgUrl);\r\n    }\r\n  }, [imageAsUrl]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  async function registrar(tipo, categoria) {\r\n    handleFireBaseUpload();\r\n    console.log(imageAsUrl.imgUrl);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (\r\n        sheet.getCell(j, 0).value === tipo &&\r\n        sheet.getCell(j, 1).value === categoria\r\n      ) {\r\n        const imagen = sheet.getCell(j, 4);\r\n        imagen.value = imageAsUrl.imgUrl;\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function notificar() {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <Segment>\r\n          {data.map((item) => (\r\n            <Segment>\r\n              <Header>{item.Tipo}</Header>\r\n              <Form>\r\n                <TextArea value={item.Categoria}></TextArea>\r\n                <Header content={item.src}></Header>\r\n                <Input\r\n                  id=\"anexoImg\"\r\n                  fluid\r\n                  className=\"input-image\"\r\n                  type=\"file\"\r\n                  onChange={handleImageUpload}\r\n                />\r\n                <br />\r\n\r\n                <Button\r\n                  onClick={(e) => {\r\n                    registrar(item.Tipo, item.Categoria);\r\n                  }}\r\n                >\r\n                  SAVE\r\n                </Button>\r\n                <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n              </Form>\r\n            </Segment>\r\n          ))}\r\n        </Segment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categorias;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport {\r\n  Header,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Form,\r\n  Message,\r\n  Checkbox,\r\n  Popup,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Login() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"recordar\"]: [recordar, setRecordar],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState();\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const login = (event, password) => {\r\n    event.preventDefault();\r\n    var found = false;\r\n    for (var i = 0; i < userData.length; i++) {\r\n      if (userData[i].id === password) {\r\n        found = true;\r\n        setUser(userData[i].Nombre);\r\n        sessionStorage.user = userData[i].Nombre;\r\n        if (recordar) {\r\n          localStorage.user = userData[i].Nombre;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!found) alert(`Usuario No encontrado`);\r\n    if (found) {\r\n      if (pagina) {\r\n        history.push(pagina);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Ingresar con su Numero de Empleado\r\n        </Header>\r\n        <Form size=\"large\">\r\n          <Segment stacked>\r\n            <Popup\r\n              content=\"Numero de Empleado sin PA ni los 0 iniciales, Ejemplo: PA00123456 = 123456\"\r\n              trigger={\r\n                <Form.Input\r\n                  name=\"userPassword\"\r\n                  type=\"password\"\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Numero de Empleado\"\r\n                  onChange={(event) => onChangeHandler(event)}\r\n                />\r\n              }\r\n            />\r\n\r\n            <Button\r\n              color=\"red\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={(event) => {\r\n                login(event, password);\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          <Checkbox\r\n            label=\"Recordar Usuario\"\r\n            onChange={(e, { checked }) => {\r\n              checked ? setRecordar(true) : setRecordar(false);\r\n            }}\r\n          />\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport userData from \"./employee.json\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Perfil() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Segment>\r\n        <Header as=\"h4\">\r\n          {user}\r\n          <Button\r\n            floated=\"right\"\r\n            negative\r\n            onClick={() => {\r\n              setUser(\"\");\r\n              sessionStorage.removeItem(\"user\");\r\n              localStorage.removeItem(\"user\");\r\n              setPagina(\"/perfil\");\r\n              history.push(\"/Login\");\r\n            }}\r\n          >\r\n            Cerrar Sesión\r\n          </Button>\r\n        </Header>\r\n        <Segment>{userInfo[0].correo}</Segment>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Perfil;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { intlFormat } from \"date-fns\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  //var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da} ${hora}`;\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Schedule() {\r\n  const [persona, setPersona] = useState(); //variable para responsable de recorrido\r\n  const [lugar, setLugar] = useState(); //variable para area de recorrido\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const { [\"personal\"]: personal } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date())); //variable para fecha de recorrido\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        if (areas[j].name !== \"\") {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  async function registrar() {\r\n    setSaving(true);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[762667679];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    while (lastr--) {\r\n      try {\r\n        console.log(rows[lastr].Usuario);\r\n        if (\r\n          rows[lastr].Nombre == persona &&\r\n          rows[lastr].Fecha == fecha &&\r\n          rows[lastr].Area == lugar\r\n        ) {\r\n          console.log(\"Borrando\");\r\n          await rows[lastr].delete();\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        break;\r\n      }\r\n    }\r\n    await sheet.addRow({\r\n      Nombre: persona,\r\n      Fecha: fecha,\r\n      Area: lugar,\r\n      Usuario: user,\r\n      FechaProgramado: FechaStringLong(new Date()),\r\n    });\r\n    alert(\"Datos Guardados\");\r\n    setSaving(false);\r\n    setPersona();\r\n    setLugar();\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Dimmer active={saving} page>\r\n        <Loader size=\"massive\">{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Programar Recorrido\r\n        </Header>\r\n        <Form>\r\n          <b>Nombre*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Nombre de Empleado...\"\r\n            defaultValue={persona}\r\n            options={personal}\r\n            onChange={(e, { value }) => {\r\n              setPersona(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Area*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Area...\"\r\n            defaultValue={lugar}\r\n            options={listaArea}\r\n            onChange={(e, { value }) => {\r\n              setLugar(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            size=\"tiny\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n          <br></br>\r\n          <Button\r\n            disabled={!persona || !lugar}\r\n            negative\r\n            fluid\r\n            onClick={() => {\r\n              registrar();\r\n            }}\r\n          >\r\n            Programar\r\n          </Button>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n  Radio,\r\n  Popup,\r\n  Sticky,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { GradientDefs } from \"react-vis\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nexport default function ReporteDeTurno({ user }) {\r\n  const referencia = useRef(null);\r\n  const {\r\n    [\"reportData\"]: [reportData, setRepData],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const [area, setArea] = useState();\r\n  const [categoria, setCat] = useState();\r\n  const { personal: personal } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  const [reportes, setReportes] = useState(); //Listado completo de CheckList\r\n  const [sinFiltro, setSinFiltro] = useState();\r\n  const [checkList, setCheckList] = useState();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date()));\r\n  const [cats, setCats] = useState();\r\n  const [rubros, setRubros] = useState();\r\n  const [activeRubro, setActRubro] = useState();\r\n  const [subCat, setSubCat] = useState();\r\n  const [requerimientos, setReq] = useState();\r\n  const [activeReq, setActiveR] = useState();\r\n  const [incumple, setIncumple] = useState([]);\r\n  const [percentage, setPercentage] = useState();\r\n  const [turno, setTurno] = useState(1);\r\n  const [campoOblig, setCampoOblig] = useState(0);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [duplicado, setDuplicado] = useState(false);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [tipoReporte, setTipoRep] = useState(\"Reporte de Turno\");\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const turnos = [\"1\", \"2\", \"3\"];\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const history = useHistory();\r\n\r\n  async function handleImageUpload(event, rubro) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, url: \"\", preview: \"\", img: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, preview: e.target.result }\r\n              : x;\r\n          });\r\n        });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, img: compressedFile }\r\n              : x;\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      setImageAsFile(\"\");\r\n      setPreviewImg(dummyImg);\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, preview: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setPercentage(0);\r\n  }\r\n\r\n  async function handleFireBaseUpload(rubro) {\r\n    var boton = document.getElementById(\"btn\" + activeReq + activeRubro);\r\n    boton.disabled = true;\r\n    setPercentage(1);\r\n    const archivo =\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n        )\r\n      ].img;\r\n    const uploadTask = storage.ref(`/images/${archivo.name}`).put(archivo);\r\n    setPercentage(5);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        //takes a snap shot of the process as it is happening\r\n        console.log(snapShot);\r\n      },\r\n      (err) => {\r\n        //catches the errors\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        // gets the functions from storage refences the image storage in firebase by the children\r\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n        setPercentage(50);\r\n        storage\r\n          .ref(\"images\")\r\n          .child(archivo.name)\r\n          .getDownloadURL()\r\n          .then((fireBaseUrl) => {\r\n            setReportes((existingItems) => {\r\n              return existingItems.map((x) => {\r\n                return x.SubCategoria === activeRubro &&\r\n                  x.Categoria === activeReq\r\n                  ? { ...x, url: fireBaseUrl }\r\n                  : x;\r\n              });\r\n            });\r\n            setPercentage(100);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setRepData(datas);\r\n  };\r\n  const sacarReportes = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = 1259390435;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    var aplican = datas.filter((x) => x[\"Reporte de turno\"] === \"Y\");\r\n    if (window.location.href.includes(\"recorrido\")) {\r\n      aplican = datas.filter((x) => x[\"Recorrido\"] === \"Y\");\r\n    }\r\n    setSinFiltro(aplican);\r\n    setReportes(aplican);\r\n    setCats(\r\n      aplican\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  const sacarReportes2 = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = window.location.href.includes(\"recorrido\")\r\n      ? 1236777776\r\n      : 585241358;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    setReportes(datas);\r\n    setCats(\r\n      datas\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  async function registrar() {\r\n    setStatus(estados[0].caption);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n\r\n    if (duplicado) {\r\n      setStatus(estados[2].caption);\r\n      while (lastr--) {\r\n        try {\r\n          if (rows[lastr].Id == uniqueID) {\r\n            console.log(\"Borrando\");\r\n            await rows[lastr].delete();\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          sleep(60000);\r\n          lastr = lastr + 1;\r\n          continue;\r\n        }\r\n      }\r\n      setStatus(estados[0].caption);\r\n    }\r\n    var j;\r\n\r\n    for (j = 0; j < reportes.length; j++) {\r\n      try {\r\n        console.log(\"guardando\");\r\n        await sheet.addRow({\r\n          Area: area,\r\n          Usuario: user,\r\n          FechaRegistro: FechaStringLong(new Date()),\r\n          FechaRecorrido: fecha,\r\n          Tipo: reportes[j].Tipo,\r\n          Categoria: reportes[j].Categoria,\r\n          SubCategoria: reportes[j].SubCategoria,\r\n          Incumple: reportes[j].incumple,\r\n          Detalle: reportes[j].detalle,\r\n          PersonasObservadas: reportes[j].personas,\r\n          Imagen: reportes[j].url,\r\n          Turno: turno,\r\n          Reporte: tipoReporte,\r\n          Id: uniqueID,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n        sleep(60000);\r\n        j = j - 1;\r\n        continue;\r\n      }\r\n    }\r\n    alert(\"Datos Guardados\");\r\n    setActiveR();\r\n    setStatus();\r\n    setArea(\"\");\r\n    setActRubro();\r\n    setRepData();\r\n    setReportes();\r\n    setConfirmar(false);\r\n    history.push(\"/\");\r\n  }\r\n  const [lista, setLista] = useState();\r\n  const crearLista = (e, { name }) => {\r\n    if (activeReq == name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(name);\r\n    }\r\n    setLista(\r\n      reportData\r\n        .filter((item) => item.Nombre == name)\r\n        .map((item) => item.Rubro)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n  };\r\n  const revision = (e, { name, requerimiento }) => {\r\n    let observacion = { req: requerimiento, rubro: name };\r\n    if (\r\n      reportData[reportData.findIndex((x) => x.Rubro === name)].Acto === \"Y\"\r\n    ) {\r\n      observacion.obligatorio = 1;\r\n    }\r\n    if (incumple.some((e) => e.req === requerimiento && e.rubro === name)) {\r\n      let removeIndex = incumple.filter((e) => e.rubro !== name);\r\n      console.log(removeIndex);\r\n      // remove object\r\n      setIncumple(removeIndex);\r\n    } else {\r\n      setIncumple((oldArray) => [...oldArray, observacion]);\r\n    }\r\n  };\r\n  const validar = () => {\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n    let res = [];\r\n    res = reportData.filter((element) => {\r\n      return element.Id == uniqueID;\r\n    });\r\n    if (res.length > 0) {\r\n      setDuplicado(true);\r\n    } else {\r\n      setDuplicado(false);\r\n    }\r\n  };\r\n\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    // Return a function from the effect that removes the event listener\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var userArea = userData.filter((x) => x.Nombre === user)[0].Area;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        let keys = areas[j].keys;\r\n        if (\r\n          areas[j].name !== \"\" &&\r\n          (userArea.toLowerCase().includes(\"gerencia\") ||\r\n          window.location.href.includes(\"recorrido\")\r\n            ? true\r\n            : keys\r\n                .toLowerCase()\r\n                .split(\", \")\r\n                .some((w) => userArea.toLowerCase().includes(w)))\r\n        ) {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  useEffect(() => {\r\n    if (turno && area) {\r\n      if (!reportData) {\r\n        sacardata();\r\n      }\r\n      validar();\r\n    }\r\n  }, [area, turno]);\r\n\r\n  useEffect(() => {\r\n    console.log(incumple);\r\n  }, [incumple]);\r\n  useEffect(() => {\r\n    if (!reportData) {\r\n      sacardata();\r\n    }\r\n  }, [reportData]);\r\n  useEffect(() => {\r\n    if (!reportes) {\r\n      sacarReportes();\r\n    } else {\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    setArea();\r\n    setCat();\r\n    setReportes();\r\n    setRepData();\r\n    setActiveR();\r\n    setActRubro();\r\n    sacarReportes();\r\n    sacardata();\r\n    var url = window.location.href;\r\n    if ((pagina && pagina.includes(\"recorrido\")) || url.includes(\"recorrido\")) {\r\n      setTipoRep(\"Reporte de Recorrido\");\r\n    } else {\r\n      setTipoRep(\"Reporte de Turno\");\r\n    }\r\n  }, [pagina]);\r\n  function handleArea(e, { value }) {\r\n    setCat();\r\n    setActiveR();\r\n    var filtro = sinFiltro.filter((x) => x[value] === \"Y\");\r\n    setReportes(filtro);\r\n    setArea(value);\r\n  }\r\n\r\n  function handleCategorias(e) {\r\n    setCat(e.target.name);\r\n    if (reportes) {\r\n      var chklist = reportes.filter((item) => item.Tipo === e.target.name);\r\n      setCheckList(chklist);\r\n      setReq(\r\n        chklist\r\n          .map((item) => item.Categoria)\r\n          .filter((value, index, self) => self.indexOf(value) === index)\r\n      );\r\n    }\r\n  }\r\n  function handleSubCat(e) {\r\n    setSubCat(e.target.name);\r\n    if (activeReq === e.target.name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(e.target.name);\r\n    }\r\n    setRubros(\r\n      reportes\r\n        .filter((item) => item.Categoria === e.target.name)\r\n        .map((item) => item.SubCategoria)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setActRubro();\r\n  }\r\n\r\n  function handleCheck(e) {\r\n    var item = e.target.name;\r\n    var chk = e.target.id;\r\n    console.log(chk);\r\n    setActRubro(item);\r\n    var cumple;\r\n    if (chk.includes(\"Y\")) {\r\n      cumple = \"N\";\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === item && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n                detalle: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    } else {\r\n      cumple = \"Y\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === item && x.Categoria === activeReq\r\n          ? { ...x, incumple: cumple }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function HandleTodos(e, { checked }) {\r\n    var cumple;\r\n    if (checked) {\r\n      cumple = \"N\";\r\n    } else {\r\n      cumple = \"\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.Categoria === activeReq ? { ...x, incumple: cumple } : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleOpcional(e, { rubro }) {\r\n    setActRubro(rubro);\r\n    var aplica;\r\n    if (\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.Categoria === activeReq && x.SubCategoria === rubro\r\n        )\r\n      ].opcional === \"N\"\r\n    ) {\r\n      aplica = \"Y\";\r\n    } else {\r\n      aplica = \"N\";\r\n\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === rubro && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === rubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              opcional: aplica,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleObservados(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              personas: value.toString(),\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDetalles(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              detalle: value,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n      <Dimmer\r\n        active={\r\n          status || estados.filter((x) => x.caption === status).length != 0\r\n        }\r\n        page\r\n      >\r\n        <Loader size=\"massive\">{status}</Loader>\r\n      </Dimmer>\r\n      {reportes && (\r\n        <Modal\r\n          onClose={() => setConfirmar(false)}\r\n          onOpen={() => setConfirmar(true)}\r\n          size=\"large\"\r\n          open={confirmar}\r\n        >\r\n          <Modal.Header>Confirmar Información</Modal.Header>\r\n          <Modal.Content>\r\n            {duplicado && (\r\n              <Label basic color=\"red\" size=\"huge\">\r\n                <Icon name=\"warning sign\" />\r\n                Se sobreescribirá los datos\r\n              </Label>\r\n            )}\r\n            <h1>\r\n              {tipoReporte.includes(\"Recorrido\")\r\n                ? tipoReporte\r\n                : tipoReporte + \" \" + turno}\r\n            </h1>\r\n            <h2>{fecha}</h2>\r\n            <h3>{user}</h3>\r\n            <h4>{area}</h4>\r\n          </Modal.Content>\r\n\r\n          <Divider />\r\n          <Modal.Content>\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <b>Incumplimientos: </b>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <List>\r\n                {reportes\r\n                  .filter((x) => x.incumple === \"Y\")\r\n                  .map((item, index) => {\r\n                    return (\r\n                      <List.Item>\r\n                        {index + 1}. {item.Tipo} - {item.Categoria} -{\" \"}\r\n                        {item.SubCategoria}\r\n                      </List.Item>\r\n                    );\r\n                  })}\r\n              </List>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length == 0 && (\r\n              <b>Sin Incidencias</b>\r\n            )}\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"green\"\r\n              onClick={() => {\r\n                registrar();\r\n              }}\r\n            >\r\n              <Icon name=\"check\"></Icon>Confirmar\r\n            </Button>\r\n            <Button\r\n              secondary\r\n              color=\"red\"\r\n              onClick={() => {\r\n                setConfirmar(false);\r\n              }}\r\n            >\r\n              <Icon name=\"x\"></Icon>Cancelar\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      )}\r\n      <Grid.Row>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Segment basic>\r\n            <Header>{tipoReporte}</Header>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Area*</b>\r\n            <Dropdown\r\n              style={{ textAlign: \"center\" }}\r\n              fluid\r\n              search\r\n              selection\r\n              placeholder=\"Area...\"\r\n              options={listaArea}\r\n              onChange={handleArea}\r\n            ></Dropdown>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {area && tipoReporte.includes(\"Turno\") && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Turno*</b>\r\n            <Form>\r\n              <Grid columns={3}>\r\n                <Grid.Row>\r\n                  {turnos.map((x) => {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Radio\r\n                          label={x}\r\n                          checked={turno === x}\r\n                          onChange={() => {\r\n                            setTurno(x);\r\n                          }}\r\n                        ></Radio>\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {duplicado && area && turno && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" />\r\n              Ud. ya ha registrado un {tipoReporte} para {area}{\" \"}\r\n              {tipoReporte === \"Reporte de Turno\" ? \"del turno \" + turno : \"\"}{\" \"}\r\n              para el dia {fecha}, en caso que guardes se sobreescribira el\r\n              reporte anterior\r\n            </Label>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      <Grid.Row columns={4}>\r\n        {cats &&\r\n          turno &&\r\n          area &&\r\n          cats.map((item) => {\r\n            return (\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor:\r\n                      categoria === item\r\n                        ? colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].activo\r\n                        : colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].inactivo,\r\n                    color: colores.filter((x) => {\r\n                      return x.categoria === item;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleCategorias}\r\n                >\r\n                  {width > breakpoint\r\n                    ? colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].caption\r\n                    : colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].short}\r\n                  <Popup\r\n                    content=\"Cantidad de incumplimiento\"\r\n                    trigger={\r\n                      <Label\r\n                        style={{ left: \"90%\" }}\r\n                        color={\r\n                          reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length > 0\r\n                            ? \"red\"\r\n                            : \"grey\"\r\n                        }\r\n                        floating\r\n                        circular\r\n                        size=\"mini\"\r\n                      >\r\n                        {reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length}\r\n                      </Label>\r\n                    }\r\n                  />\r\n                </Button>\r\n              </Grid.Column>\r\n            );\r\n          })}\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              disabled={\r\n                !area |\r\n                !turno |\r\n                (reportes &&\r\n                  reportes.filter(\r\n                    (x) =>\r\n                      x.incumple === \"Y\" &&\r\n                      (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n                      x.personas === \"\"\r\n                  ).length > 0) |\r\n                (reportes.filter((x) => x.incumple === \"\").length > 0)\r\n              }\r\n              fluid\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Guardar\"\r\n              onClick={() => setConfirmar(true)}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {reportes &&\r\n        reportes.filter(\r\n          (x) =>\r\n            x.incumple === \"Y\" &&\r\n            (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n            x.personas === \"\"\r\n        ).length > 0 && (\r\n          <Grid.Row>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" /> Campo obligatorio sin completar\r\n            </Label>\r\n          </Grid.Row>\r\n        )}\r\n      {categoria && area && reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment\r\n              fluid\r\n              basic\r\n              style={{\r\n                color: colores.filter((x) => {\r\n                  return x.categoria === categoria;\r\n                })[0].activo,\r\n              }}\r\n            >\r\n              <Header\r\n                onClick={() => {\r\n                  console.log(reportes);\r\n                  console.log(activeReq);\r\n                  console.log(activeRubro);\r\n                }}\r\n              >\r\n                {categoria}\r\n                {\" Cumplimiento \"}\r\n                {Math.ceil(\r\n                  (reportes.filter(\r\n                    (x) => x.Tipo === categoria && x.incumple === \"N\"\r\n                  ).length /\r\n                    reportes.filter((x) => x.Tipo === categoria).length) *\r\n                    100\r\n                )}\r\n                %\r\n              </Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n\r\n      {requerimientos &&\r\n        categoria &&\r\n        area &&\r\n        reportes &&\r\n        requerimientos.map((item, reqIdx) => {\r\n          return (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].inactivo,\r\n                    color: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleSubCat}\r\n                >\r\n                  {item}\r\n                </Button>\r\n                {activeReq === item && (\r\n                  <Segment basic>\r\n                    <Grid verticalAlign=\"left\">\r\n                      <Checkbox\r\n                        key={reqIdx + \"AllY\"}\r\n                        requerimiento={activeReq}\r\n                        label={\"Todos Cumplen\"}\r\n                        onChange={HandleTodos}\r\n                      />\r\n                    </Grid>\r\n                    <Grid verticalAlign=\"left\">\r\n                      {rubros &&\r\n                        rubros.map((item, idx) => {\r\n                          return (\r\n                            <Grid.Row>\r\n                              <Grid.Column>\r\n                                {idx + 1 + \". \" + item}\r\n                                <br />\r\n                                <Grid.Row columns={3}>\r\n                                  <Grid.Column>Cumple?</Grid.Column>\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"Y\"}\r\n                                      id={idx + \"Y\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"Si\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"N\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                  <br />\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"N\"}\r\n                                      id={idx + \"N\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"No\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"Y\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                </Grid.Row>\r\n                                {reportes.filter(\r\n                                  (x) =>\r\n                                    x.SubCategoria === item &&\r\n                                    x.Categoria === activeReq\r\n                                )[0].incumple === \"Y\" && (\r\n                                  <Segment color=\"red\">\r\n                                    <Grid>\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"N\" && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Checkbox\r\n                                                fluid\r\n                                                requerimiento={activeReq}\r\n                                                rubro={item}\r\n                                                label=\"Personas Observadas?\"\r\n                                                checked={\r\n                                                  reportes.filter(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )[0].opcional === \"Y\"\r\n                                                }\r\n                                                onChange={handleOpcional}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        (reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"Y\" ||\r\n                                          reportes.filter(\r\n                                            (x) =>\r\n                                              x.SubCategoria === item &&\r\n                                              x.Categoria === activeReq\r\n                                          )[0].opcional === \"Y\") && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <b>Personas Observadas*</b>\r\n                                              <Dropdown\r\n                                                fluid\r\n                                                multiple\r\n                                                search\r\n                                                selection\r\n                                                defaultValue={\r\n                                                  reportes[\r\n                                                    reportes.findIndex(\r\n                                                      (x) =>\r\n                                                        x.Categoria ===\r\n                                                          activeReq &&\r\n                                                        x.SubCategoria === item\r\n                                                    )\r\n                                                  ].personas\r\n                                                    ? reportes[\r\n                                                        reportes.findIndex(\r\n                                                          (x) =>\r\n                                                            x.Categoria ===\r\n                                                              activeReq &&\r\n                                                            x.SubCategoria ===\r\n                                                              item\r\n                                                        )\r\n                                                      ].personas.split(\",\")\r\n                                                    : \"\"\r\n                                                }\r\n                                                placeholder=\"Seleccionar Personas Involucradas...\"\r\n                                                options={personal}\r\n                                                onChange={handleObservados}\r\n                                              ></Dropdown>\r\n                                              {!reportes[\r\n                                                reportes.findIndex(\r\n                                                  (x) =>\r\n                                                    x.Categoria === activeReq &&\r\n                                                    x.SubCategoria === item\r\n                                                )\r\n                                              ].personas && (\r\n                                                <Label\r\n                                                  basic\r\n                                                  color=\"red\"\r\n                                                  pointing\r\n                                                >\r\n                                                  <Icon name=\"warning sign\" />\r\n                                                  Por favor elija al menos una\r\n                                                  persona\r\n                                                </Label>\r\n                                              )}\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Detalles</b>\r\n                                          <Form>\r\n                                            <TextArea\r\n                                              placeholder=\"Detelles...\"\r\n                                              defaultValue={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.Categoria ===\r\n                                                        activeReq &&\r\n                                                      x.SubCategoria === item\r\n                                                  )\r\n                                                ].detalle\r\n                                                  ? reportes[\r\n                                                      reportes.findIndex(\r\n                                                        (x) =>\r\n                                                          x.Categoria ===\r\n                                                            activeReq &&\r\n                                                          x.SubCategoria ===\r\n                                                            item\r\n                                                      )\r\n                                                    ].detalle\r\n                                                  : \"\"\r\n                                              }\r\n                                              onChange={handleDetalles}\r\n                                            ></TextArea>\r\n                                          </Form>\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Imagen</b>\r\n                                          <Input\r\n                                            icon=\"camera\"\r\n                                            iconPosition=\"left\"\r\n                                            type=\"file\"\r\n                                            fluid\r\n                                            rubro={item}\r\n                                            onChange={(e, { rubro }) => {\r\n                                              handleImageUpload(e, rubro);\r\n                                            }}\r\n                                          />\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview &&\r\n                                        percentage == 0 && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Button\r\n                                                id={\"btn\" + activeReq + item}\r\n                                                rubro={item}\r\n                                                content=\"Confirmar\"\r\n                                                style={{\r\n                                                  backgroundColor:\r\n                                                    colores.filter((item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    })[0].inactivo,\r\n                                                  color: colores.filter(\r\n                                                    (item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    }\r\n                                                  )[0].texto,\r\n                                                }}\r\n                                                onClick={(e, { rubro }) => {\r\n                                                  handleFireBaseUpload(rubro);\r\n                                                }}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Progress\r\n                                              percent={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? 100\r\n                                                  : percentage\r\n                                              }\r\n                                              indicating={\r\n                                                !reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url && percentage != 100\r\n                                              }\r\n                                              success={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? true\r\n                                                  : percentage == 100\r\n                                              }\r\n                                              progress\r\n                                              label={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url || percentage == 100\r\n                                                  ? \"Cargado\"\r\n                                                  : percentage == 0\r\n                                                  ? \"\"\r\n                                                  : \"Cargando\"\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Image\r\n                                              size=\"medium\"\r\n                                              src={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].preview\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                    </Grid>\r\n                                  </Segment>\r\n                                )}\r\n                              </Grid.Column>\r\n                            </Grid.Row>\r\n                          );\r\n                        })}\r\n                    </Grid>\r\n                  </Segment>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { Dropdown, Grid, Header, Input, Segment } from \"semantic-ui-react\";\r\n\r\nfunction Minuta() {\r\n  const { personal } = useContext(Contexto);\r\n  return (\r\n    <Grid stackable>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <Header content=\"Administración de Minuta\" />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input fluid type=\"date\"></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row columns={3}>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Participantes</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Minuta;\r\n","import React, { useState, useContext } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Home from \"./Home.js\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport userData from \"./employee.json\";\nimport Add from \"./images/fondo.jpg\";\nimport {\n  Header,\n  Menu,\n  Icon,\n  Modal,\n  Button,\n  Input,\n  Segment,\n  Checkbox,\n  Sidebar,\n  Dropdown,\n  Label,\n} from \"semantic-ui-react\";\nimport Observacion from \"./observacion\";\nimport Tareas from \"./tareas\";\nimport Consultas from \"./consulta\";\nimport Registrar from \"./registrar\";\nimport Categorias from \"./tipos\";\nimport Login from \"./Login\";\nimport Reporte from \"./Reporte\";\nimport { Contexto } from \"./Contexto\";\nimport Perfil from \"./profile\";\nimport Schedule from \"./schedule\";\nimport Recorrido from \"./recorridos\";\nimport ReporteDeTurno from \"./reporteDeTurno\";\nimport Minuta from \"./minuta\";\n\nfunction App() {\n  let iniciado = null;\n  let caption = \"Sign In\";\n  if (sessionStorage.getItem(\"user\")) {\n    iniciado = sessionStorage.user;\n    caption = \"Sign Out\";\n  } else if (localStorage.getItem(\"user\")) {\n    iniciado = localStorage.user;\n    caption = \"Sign Out\";\n  }\n  const {\n    [\"user\"]: [user, setUser],\n  } = useContext(Contexto);\n  const {\n    [\"pagina\"]: [pagina, setPagina],\n  } = useContext(Contexto);\n  const {\n    [\"width\"]: [width, setWidth],\n  } = useContext(Contexto);\n  const breakpoint = 620;\n  const {\n    [\"areas\"]: [areas, setAreas],\n  } = useContext(Contexto);\n  const [session, setSession] = useState(caption);\n  const [open, setOpen] = React.useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [activeItem, setActiveItem] = useState(\"\");\n  const [recordar, setRecordar] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  };\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userPassword\") {\n      setPassword(value);\n    }\n  };\n\n  const login = (event, password) => {\n    event.preventDefault();\n    var found = false;\n    for (var i = 0; i < userData.length; i++) {\n      if (userData[i].id === password) {\n        found = true;\n        setUser(userData[i].Nombre);\n        sessionStorage.user = userData[i].Nombre;\n        if (recordar) {\n          localStorage.user = userData[i].Nombre;\n        }\n        setSession(\"Sign Out\");\n        break;\n      }\n    }\n    if (!found) alert(`Usuario No encontrado`);\n  };\n\n  React.useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    // Return a function from the effect that removes the event listener\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  return (\n    <Router basename={\"/\"}>\n      <div style={{ padding: \"2%\", backgroundImage: `url(${Add})` }}>\n        <Menu color=\"red\" size=\"huge\">\n          <Menu.Item header as={Link} to=\"/home\">\n            <b style={{ color: \"red\" }}>Mi Cultura QSEB</b>\n          </Menu.Item>\n          {width < breakpoint ? (\n            <Menu.Item position=\"right\">\n              <Icon\n                size=\"large\"\n                name=\"bars\"\n                color=\"red\"\n                onClick={() => {\n                  setVisible(true);\n                }}\n              />\n            </Menu.Item>\n          ) : (\n            <>\n              <Dropdown item text=\"Reportes\">\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    text=\"Reporte de Turno\"\n                    as={Link}\n                    to={user ? \"/Reporte\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/Reporte\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Recorridos\"\n                    as={Link}\n                    to={user ? \"/recorrido\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/recorrido\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Programar Recorridos\"\n                    as={Link}\n                    to={user ? \"/programar\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/programar\");\n                    }}\n                  />\n                  <Dropdown.Item text=\"Actos Inseguros\" />\n                  <Dropdown.Item text=\"Condiciones Inseguras\" />\n                </Dropdown.Menu>\n              </Dropdown>\n              <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n              <Menu.Item position=\"right\">\n                {user ? (\n                  //<Icon\n                  //  size=\"large\"\n                  // name=\"user circle\"\n                  //  color={user ? \"green\" : \"black\"}\n                  //>\n                  <Button\n                    icon=\"user \"\n                    color=\"green\"\n                    circular\n                    as={Link}\n                    to=\"/perfil\"\n                  />\n                ) : (\n                  <Button\n                    content=\"Iniciar Sesion\"\n                    style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                    as=\"a\"\n                    href=\"/Login\"\n                  />\n                )}\n              </Menu.Item>\n            </>\n          )}\n        </Menu>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            onHide={() => setVisible(false)}\n            vertical\n            direction=\"right\"\n            visible={visible}\n            width=\"wide\"\n            color=\"red\"\n          >\n            <Menu.Item\n              name=\"Reporte\"\n              as={Link}\n              to={user ? \"/Reporte\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/Reporte\");\n                setAreas();\n              }}\n            >\n              Reporte de Turno\n            </Menu.Item>\n            <Menu.Item\n              name=\"Recorridos\"\n              as={Link}\n              to={user ? \"/recorrido\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/recorrido\");\n                setAreas();\n              }}\n            >\n              Recorridos\n            </Menu.Item>\n            <Menu.Item\n              name=\"ProgramarRecorridos\"\n              as={Link}\n              to={user ? \"/programar\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/programar\");\n              }}\n            >\n              Programar Recorridos\n            </Menu.Item>\n            <Menu.Item name=\"ActosI\">Actos Inseguros</Menu.Item>\n            <Menu.Item name=\"CondicionesI\">Condiciones Inseguras</Menu.Item>\n            <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n            {user && user.includes(\"Cheung\") && (\n              <Menu.Item\n                name=\"Minutas\"\n                as={Link}\n                to={user ? \"/minutas\" : \"/Login\"}\n                onClick={() => {\n                  setVisible(false);\n                  setPagina(\"/minutas\");\n                }}\n              >\n                Minutas\n              </Menu.Item>\n            )}\n            <Menu.Item\n              name=\"Perfil\"\n              as={Link}\n              to={user ? \"/perfil\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n              }}\n            >\n              {user ? (\n                user\n              ) : (\n                <Button\n                  content=\"Iniciar Sesion\"\n                  style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                  as={Link}\n                  onClick={() => {\n                    setVisible(false);\n                  }}\n                  to=\"/Login\"\n                />\n              )}\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher>\n            <Segment\n              style={{\n                backgroundColor: \"whitesmoke\",\n                height: \"90vh\",\n                overflowY: \"scroll\",\n              }}\n            >\n              <Switch>\n                <Route\n                  exact\n                  path=\"/home\"\n                  render={(props) => <Home {...props} user={user} />}\n                />\n                <Route\n                  path=\"/registros\"\n                  render={(props) => <Registrar {...props} user={user} />}\n                />\n                <Route\n                  path=\"/tareas\"\n                  render={(props) => <Tareas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observaciones\"\n                  render={(props) => <Consultas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observacion/:id\"\n                  render={(props) => <Observacion {...props} user={user} />}\n                />\n                <Route\n                  path=\"/Login\"\n                  render={(props) => <Login {...props} user={user} />}\n                />\n                <Route\n                  path=\"/reporte\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/recorrido\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/perfil\"\n                  render={(props) => <Perfil {...props} user={user} />}\n                />\n                <Route\n                  path=\"/minutas\"\n                  render={(props) => <Minuta {...props} user={user} />}\n                />\n                <Route\n                  path=\"/programar\"\n                  render={(props) => <Schedule {...props} user={user} />}\n                />\n                <Route\n                  path=\"/\"\n                  render={(props) => <Home {...props} user={user} />}\n                />\n              </Switch>\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ContextoProvider from \"./Contexto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextoProvider>\n      <App />\n    </ContextoProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}