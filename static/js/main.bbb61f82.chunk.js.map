{"version":3,"sources":["Contexto.js","Home.js","images/fondo.jpg","observacion.js","firebase/firebase.js","tareas.js","consulta.js","apikeys.js","registrar.js","tipos.js","Login.js","profile.js","schedule.js","reporteDeTurno.js","minuta.js","App.js","serviceWorker.js","index.js"],"names":["Contexto","React","createContext","children","iniciado","sessionStorage","getItem","user","localStorage","useState","setUser","recordar","setRecordar","data","setData","data1","setdata1","data2","setdata2","areas","setAreas","reportData","setRepData","pagina","setPagina","window","innerWidth","width","setWidth","personal","j","userData","length","Nombre","push","key","text","value","categoria","activo","inactivo","texto","caption","short","gradient","cumple","contexto","colores","breakpoint","Provider","ExcelDateToJSDate","serial","utc_days","Math","floor","date_info","Date","fractional_day","total_seconds","seconds","hours","minutes","getFullYear","getMonth","getDate","FechaStringShort","fecha","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","Home","setData1","setData2","data3","setData3","setActiveMenu","filtros","setFiltros","estados","name","status","setStatus","grupoArea","setGrupoArea","area","setArea","setCategoria","activePeriod","setActPeriod","turno","setTurno","tipoReporte","setTipoReporte","rubros","Array","from","_","index","categorias_idx","lista","i","title","today","inicioDeSemana","yesterday","setDate","wd","getDay","semana","useContext","setColores","handleSemana","anno","substring","mes","dia","d","weekday","sacardata","a","datas","creds","require","doc","GoogleSpreadsheet","useServiceAccountAuth","loadInfo","sheet","sheetsById","getRows","rows","columnCount","cols","headerValues","encabezado","lastr","loadCells","startRowIndex","endRowIndex","startColumnIndex","endColumnIndex","getCell","datas_areas","unique","Set","map","item","grupo","sort","unshift","forEach","x","findIndex","y","Area","Tipo","Incumple","total","arr1","filter","Reporte","FechaRecorrido","orden","reduce","r","o","get","Object","assign","set","Map","values","cumplimiento","isNaN","ceil","b","arr","HandleTurnos","e","valor","target","id","tipo","includes","reporte","periodo","cat","lugar","t","numTurno","slice","reporteFiltrado","next","Turno","parseInt","arr2","Categoria","SubCategoria","incumple","arr3","cuentaPorUsuario","Usuario","Id","self","useEffect","Segment","basic","Header","as","icon","color","content","Grid","textAlign","verticalAlign","Dimmer","active","page","Loader","Row","Button","Group","inverted","style","borderRadius","onClick","Or","columns","Column","size","fluid","Icon","idx","padding","backgroundImage","borderStyle","borderWidth","borderColor","margin","Table","selectable","fixed","Body","Cell","rowSpan","toString","fill","console","log","List","divided","Item","avatar","Content","Observacion","params","useParams","startDate","dd","mm","yyyy","hora","getHours","minutos","getMinutes","date","toISOString","ar","br","cr","dr","er","fr","gr","hr","ir","jr","kr","lr","mr","nr","or","pr","qr","rr","sr","tr","ur","vr","fecha_hora","nombre","rubro","observaciones","severidad","pac","fecha_cierre","responsable","anexo","confirmado","extension","nueva_fecha","detalle","anexo2","obsDetalle","persObservadas","aplica","personas","join","Container","Image","src","Description","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","auth","firestore","xltoDate","fechaStr","Tareas","myData","setMyData","myPac","setMyPac","activoID","setActivoID","totalPagina","setTotalPagina","setExtension","extDate","setExtDate","setDetalle","previewImg","saving","setSaving","preventDate","setPreventDate","pap","setpap","setImageAsFile","imgUrl","imageAsUrl","setImageAsUrl","setSubir","event","files","imageFile","reader","FileReader","preview","document","querySelector","onload","setAttribute","result","readAsDataURL","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","err","registrar","extendido","wr","xr","formula","saveUpdatedCells","display","alignItems","justifyContent","Pagination","defaultActivePage","ellipsisItem","firstItem","lastItem","prevItem","nextItem","totalPages","onPageChange","activePage","round","height","overflowY","toUpperCase","FechaString","Checkbox","disabled","label","checked","onChange","Input","type","defaultValue","Form","TextArea","detalle_pac","placeholder","className","alt","priceEls","querySelectorAll","innerText","click","iniciar","Consultas","dataFound","setDataFound","inicio","setInicio","final","setFinal","activeIndex","setActiveIndex","buscar","setBuscar","creador","setCreador","activeItem","setActiveItem","open","setOpen","keyA","keyB","Modal","onClose","onOpen","image","wrapped","observador","observado","Actions","Accordion","Title","titleProps","Label","Dropdown","multiple","search","selection","href","prevObject","Meta","Extra","Registros","dummyImg","setID","loading","setLoading","perfil","setPerfil","correo","setCorreo","step","setStep","setTipo","setCat","catData","setCatData","subCatData","setSubCatData","subCat","setSubCat","detalles","setDetalles","que","setQue","donde","setDonde","pacStep","setPacStep","involucrados","setInvolucrados","plan","setPlan","setStartDate","resp","setResp","segCat","useRef","segSubCat","setPreviewImg","imageAsFile","subir","guardar","setGuardar","confirmar","setConfirmar","setSeveridad","imgUpload","setImgUpload","history","useHistory","Blob","archivoSelect","error","ref","put","on","snapShot","child","getDownloadURL","then","fireBaseUrl","datas2","sheet2","rows2","handleTipoClick","current","focus","sacarAreas","datosUsuario","Perfil","datoResp","handleCatClick","handleStep","handleArea","UniqueID","now","addRow","Personas_Observadas","Detalle","Aplica","ids","notificar","codigo","templateParams","to_email","fecha_limite","qseb","observacion","imagen","registrado","emailjs","send","apiKeys","response","handleFireBaseUpload","header","actions","positive","labelPosition","Step","ordered","attached","unstackable","completed","Popup","trigger","circular","Ref","innerRef","Card","itemsPerRow","raised","ui","button","scrolling","clearable","handleImageUpload","Categorias","Login","password","setPassword","maxWidth","stacked","iconPosition","currentTarget","onChangeHandler","preventDefault","found","alert","login","Message","userInfo","floated","negative","removeItem","FechaStringLong","hour","minute","Schedule","persona","setPersona","setLugar","listaArea","setListaArea","setFecha","Fecha","delete","FechaProgramado","sleep","milliseconds","currentDate","ReporteDeTurno","reportes","setReportes","sinFiltro","setSinFiltro","setCheckList","cats","setCats","setRubros","activeRubro","setActRubro","requerimientos","setReq","activeReq","setActiveR","percentage","setPercentage","duplicado","setDuplicado","setTipoRep","existingItems","url","img","getElementById","archivo","uploadTask","sacarReportes","location","opcional","aplican","indexOf","uniqueID","FechaRegistro","PersonasObservadas","Imagen","handleCategorias","chklist","handleSubCat","handleCheck","chk","HandleTodos","handleOpcional","handleObservados","handleDetalles","handleWindowResize","addEventListener","removeEventListener","userArea","keys","toLowerCase","split","some","w","element","validar","Divider","secondary","filtro","Radio","backgroundColor","left","floating","Acto","reqIdx","requerimiento","pointing","Progress","percent","indicating","success","progress","Minuta","stackable","App","visible","setVisible","basename","Add","Menu","Link","to","position","Sidebar","Pushable","animation","onHide","vertical","direction","Pusher","exact","path","render","props","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bbb61f82.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport userData from \"./employee.json\";\r\n\r\nexport const Contexto = React.createContext(null);\r\n\r\nexport default ({ children }) => {\r\n  let iniciado = null;\r\n  if (sessionStorage.getItem(\"user\")) {\r\n    iniciado = sessionStorage.user;\r\n  } else if (localStorage.getItem(\"user\")) {\r\n    iniciado = localStorage.user;\r\n  }\r\n  const [user, setUser] = useState(iniciado);\r\n  const [recordar, setRecordar] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [data1, setdata1] = useState();\r\n  const [data2, setdata2] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [reportData, setRepData] = useState();\r\n  const [pagina, setPagina] = useState();\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const personal = [];\r\n  for (var j = 0; j < userData.length; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  var breakpoint = 620;\r\n  const color = [\r\n    {\r\n      categoria: \"Calidad\",\r\n      activo: \"#FF5300\",\r\n      inactivo: \"#FF915C\",\r\n      texto: \"white\",\r\n      caption: \"Quality\",\r\n      short: \"Q\",\r\n      gradient: \"linear-gradient(to right,#fc4a1a,#f7b733)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Seguridad\",\r\n      activo: \"#5A0FC4\",\r\n      inactivo: \"#8857D1\",\r\n      texto: \"white\",\r\n      caption: \"Safety\",\r\n      short: \"S\",\r\n      gradient: \"linear-gradient(to right,#8E2DE2,#4A00E0)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Ambiente\",\r\n      activo: \"#00C37E\",\r\n      inactivo: \"#4ACFA0\",\r\n      texto: \"white\",\r\n      caption: \"Environment\",\r\n      short: \"E\",\r\n      gradient: \"linear-gradient(to right,#56ab2f,#a8e063)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Bioseguridad\",\r\n      activo: \"#FFE700\",\r\n      inactivo: \"#FFEF5C\",\r\n      texto: \"black\",\r\n      caption: \"BioS\",\r\n      short: \"B\",\r\n      gradient: \"linear-gradient(to right,#ffe259,#ffa751)\",\r\n      cumple: 100,\r\n    },\r\n  ];\r\n  const [colores, setColores] = useState(color);\r\n  const contexto = {\r\n    user: [user, setUser],\r\n    recordar: [recordar, setRecordar],\r\n    data: [data, setData],\r\n    areas: [areas, setAreas],\r\n    reportData: [reportData, setRepData],\r\n    personal: personal,\r\n    colores: [colores, setColores],\r\n    pagina: [pagina, setPagina],\r\n    width: [width, setWidth],\r\n    data1: [data1, setdata1],\r\n    data2: [data2, setdata2],\r\n    breakpoint: breakpoint,\r\n    userData: userData,\r\n  };\r\n\r\n  return <Contexto.Provider value={contexto}>{children}</Contexto.Provider>;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Dimmer,\r\n  Loader,\r\n  Grid,\r\n  Header,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  Segment,\r\n  Menu,\r\n  List,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  LabelSeries,\r\n  Hint,\r\n  HorizontalBarSeries,\r\n  DiscreteColorLegend,\r\n  RadialChart,\r\n} from \"react-vis\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Home({ user }) {\r\n  const [data, setData] = useState();\r\n  const [data1, setData1] = useState(); // para detallar cada categoria\r\n  const [data2, setData2] = useState(); // para detallar cada categoria por area\r\n  const [data3, setData3] = useState(); // para detallar usuario que reportan\r\n  const [catId, setCatId] = useState();\r\n  const [detalleArea, setDArea] = useState();\r\n  const [activeMenu, setActiveMenu] = useState(\"ReporteT\");\r\n  const [hoy, setHoy] = useState();\r\n  const [ayer, setAyer] = useState();\r\n  const [mes, setMes] = useState();\r\n  const [filtros, setFiltros] = useState(false);\r\n  const [chartData, setChartData] = useState();\r\n  const [chartMes, setChartMes] = useState();\r\n  const [chartRubros, setChartRubros] = useState();\r\n  const [mesAnterior, setMesAnterior] = useState();\r\n  const [aplicable, setAplicable] = useState();\r\n  const [prueba, setPrueba] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [grupoArea, setGrupoArea] = useState();\r\n  const [area, setArea] = useState(\"Todas\");\r\n  const [categoria, setCategoria] = useState();\r\n  const [leyendaMes, setLeyendaMes] = useState();\r\n  const [leyenda, setLeyenda] = useState();\r\n  const [activeIndex, setActIdx] = useState();\r\n  const [activePeriod, setActPeriod] = useState(\"Esta Semana\");\r\n  const [turno, setTurno] = useState(\"Todos\");\r\n  const [tipoReporte, setTipoReporte] = useState(\"Reporte de Turno\");\r\n  //Fechas\r\n  //fechas estan erradas hay que corregir\r\n  const dias = Array.from({ length: 31 }, (_, index) => index + 1);\r\n  const meses = Array.from({ length: 12 }, (_, index) => index + 1);\r\n  const rubros = [\"Seguridad\", \"Calidad\", \"Ambiental\", \"Bioseguridad\"];\r\n  const categorias_idx = [\"Q\", \"S\", \"E\", \"B\"];\r\n  const lista = [];\r\n  for (var i = 0; i < rubros.length; i++) {\r\n    lista.push({ title: rubros[i] });\r\n  }\r\n  let today = new Date();\r\n  let inicioDeSemana = new Date();\r\n  let yesterday = new Date(today);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  let wd = today.getDay();\r\n  wd === 0 ? (wd = 7) : (wd = wd);\r\n  //Fechas\r\n  const [dataSemana, setDS] = useState();\r\n  const [semana, setSemana] = useState(\r\n    FechaStringShort(inicioDeSemana.setDate(inicioDeSemana.getDate() - wd + 1))\r\n  );\r\n  const turnos = [\"Todos\", \"Turno 1\", \"Turno 2\", \"Turno 3\"];\r\n  const periodos = [\"Esta Semana\", \"Este Mes\", \"Hoy\", \"Ayer\", \"Seleccionar\"];\r\n  const [periodo, setPeriodo] = useState();\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  function handleSemana(fecha) {\r\n    var anno = fecha.substring(0, 4);\r\n    var mes = fecha.substring(5, 7);\r\n    var dia = fecha.substring(8, 10);\r\n    var d = new Date(anno, mes - 1, dia);\r\n    let weekday = d.getDay();\r\n    weekday === 0 ? (weekday = 7) : (weekday = weekday);\r\n    d.setDate(d.getDate() - weekday + 1);\r\n    return FechaStringShort(d);\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    setStatus(estados[1].caption);\r\n    let data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    let sheet = doc.sheetsById[1249329599];\r\n    let rows = await sheet.getRows();\r\n    let cols = await sheet.columnCount;\r\n    let encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    //AREAS\r\n    sheet = doc.sheetsById[1705686078];\r\n    rows = await sheet.getRows();\r\n    cols = await sheet.columnCount;\r\n    encabezado = await sheet.headerValues;\r\n    let datas_areas = [];\r\n    lastr = rows.length + 1;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas_areas.push(data);\r\n    }\r\n    setAreas(datas_areas);\r\n    const unique = [...new Set(datas_areas.map((item) => item.grupo))];\r\n    unique.sort();\r\n    unique.unshift(\"Todas\");\r\n    setGrupoArea(unique);\r\n    //AREAS\r\n    datas.forEach((x) => {\r\n      x.grupo =\r\n        datas_areas[datas_areas.findIndex((y) => y.name === x.Area)].grupo;\r\n      x.short = colores[colores.findIndex((y) => y.categoria === x.Tipo)].short;\r\n      x.activo =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].activo;\r\n      x.inactivo =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].inactivo;\r\n      x.gradient =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].gradient;\r\n      x.caption =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].caption;\r\n      x.texto = colores[colores.findIndex((y) => y.categoria === x.Tipo)].texto;\r\n      if (x.Incumple === \"Y\") {\r\n        x.cumple = 0;\r\n      } else {\r\n        x.cumple = 1;\r\n      }\r\n      x.total = 1;\r\n    });\r\n    let arr1 = datas\r\n      .filter(\r\n        (item) =>\r\n          item.Reporte === tipoReporte &&\r\n          handleSemana(\r\n            FechaStringShort(ExcelDateToJSDate(item.FechaRecorrido))\r\n          ) == semana\r\n      )\r\n      .map(\r\n        ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        }) => ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        })\r\n      );\r\n\r\n    arr1.forEach((x) => {\r\n      x.categoria = x.Tipo;\r\n      delete x.Tipo;\r\n      x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n    });\r\n    arr1 = [\r\n      ...arr1\r\n        .reduce((r, o) => {\r\n          const key = o.categoria;\r\n          const item =\r\n            r.get(key) ||\r\n            Object.assign({}, o, {\r\n              cumple: 0,\r\n              total: 0,\r\n            });\r\n\r\n          item.cumple += o.cumple;\r\n          item.total += o.total;\r\n          return r.set(key, item);\r\n        }, new Map())\r\n        .values(),\r\n    ];\r\n    arr1.forEach((x) => {\r\n      var cumplimiento = isNaN(x.cumple / x.total)\r\n        ? \"-\"\r\n        : Math.ceil((x.cumple / x.total) * 100) + \"%\";\r\n      x.cumplimiento = cumplimiento;\r\n    });\r\n    arr1.sort((a, b) => a.orden - b.orden);\r\n\r\n    setData(datas);\r\n    let arr = [...colores];\r\n    arr.forEach((x) => {\r\n      let cumplimiento =\r\n        arr1.filter((item) => item.categoria === x.categoria).length != 0\r\n          ? arr1.filter((item) => item.categoria === x.categoria)[0]\r\n              .cumplimiento\r\n          : \"-\";\r\n      x.cumplimiento = cumplimiento;\r\n    });\r\n    setColores(arr);\r\n    setStatus();\r\n  };\r\n\r\n  function HandleTurnos(e, { name }) {\r\n    var valor = e.target.id;\r\n    var tipo = e.target.name;\r\n    if (!tipo) {\r\n      tipo = name;\r\n    }\r\n    if (!tipo) {\r\n      if (valor.includes(\"Reporte\")) {\r\n        tipo = \"Reporte\";\r\n      }\r\n    }\r\n    if (tipo) {\r\n      let reporte = tipoReporte;\r\n      let periodo = activePeriod;\r\n      let cat = categoria;\r\n      let lugar = area;\r\n      let t = turno;\r\n      let numTurno = t.slice(-1);\r\n      setCategoria();\r\n      if (tipo.includes(\"Turno\")) {\r\n        setTurno(valor);\r\n        numTurno = valor.slice(-1);\r\n        t = valor;\r\n      } else if (tipo.includes(\"Reporte\") | tipo.includes(\"clipboard\")) {\r\n        setActiveMenu(tipo);\r\n        setTipoReporte(valor);\r\n        reporte = valor;\r\n      } else if (tipo.includes(\"Area\")) {\r\n        setArea(valor);\r\n        lugar = valor;\r\n      } else if (tipo.includes(\"btn\")) {\r\n        setCategoria(valor);\r\n        cat = valor;\r\n      } else {\r\n        setActPeriod(valor);\r\n        periodo = valor;\r\n      }\r\n      const reporteFiltrado = data.filter(\r\n        (next) =>\r\n          next.Reporte === reporte &&\r\n          (periodo === \"Esta Semana\"\r\n            ? handleSemana(\r\n                FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n              ) == semana\r\n            : periodo === \"Este Mes\"\r\n            ? FechaStringShort(\r\n                ExcelDateToJSDate(next.FechaRecorrido)\r\n              ).substring(5, 7) === FechaStringShort(today).substring(5, 7)\r\n            : periodo === \"Hoy\"\r\n            ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n              FechaStringShort(today)\r\n            : periodo === \"Ayer\"\r\n            ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n              FechaStringShort(yesterday)\r\n            : true) &&\r\n          (reporte.includes(\"Turno\") && t !== \"Todos\"\r\n            ? next.Turno === parseInt(numTurno)\r\n            : true) &&\r\n          (lugar !== \"Todas\" ? next.grupo === lugar : true)\r\n      );\r\n      let arr1 = reporteFiltrado.map(\r\n        ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        }) => ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        })\r\n      );\r\n      arr1.forEach((x) => {\r\n        x.categoria = x.Tipo;\r\n        delete x.Tipo;\r\n        x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n      });\r\n      arr1 = [\r\n        ...arr1\r\n          .reduce((r, o) => {\r\n            const key = o.categoria;\r\n            const item =\r\n              r.get(key) ||\r\n              Object.assign({}, o, {\r\n                cumple: 0,\r\n                total: 0,\r\n              });\r\n\r\n            item.cumple += o.cumple;\r\n            item.total += o.total;\r\n            return r.set(key, item);\r\n          }, new Map())\r\n          .values(),\r\n      ];\r\n      arr1.forEach((x) => {\r\n        var cumplimiento = isNaN(x.cumple / x.total)\r\n          ? \"-\"\r\n          : Math.ceil((x.cumple / x.total) * 100) + \"%\";\r\n        x.cumplimiento = cumplimiento;\r\n      });\r\n      arr1.sort((a, b) => a.orden - b.orden);\r\n      let arr = [...colores];\r\n      arr.forEach((x) => {\r\n        let cumplimiento =\r\n          arr1.filter((item) => item.categoria === x.categoria).length != 0\r\n            ? arr1.filter((item) => item.categoria === x.categoria)[0]\r\n                .cumplimiento\r\n            : \"-\";\r\n        x.cumplimiento = cumplimiento;\r\n      });\r\n      setColores(arr);\r\n      if (tipo.includes(\"btn\") || cat) {\r\n        let arr2 = reporteFiltrado\r\n          .filter((item) => item.Tipo == valor && item.Incumple == \"Y\")\r\n          .map(\r\n            ({\r\n              Tipo,\r\n              Categoria,\r\n              SubCategoria,\r\n              Area,\r\n              short,\r\n              caption,\r\n              texto,\r\n              activo,\r\n              inactivo,\r\n              gradient,\r\n            }) => ({\r\n              Tipo,\r\n              Categoria,\r\n              SubCategoria,\r\n              Area,\r\n              short,\r\n              caption,\r\n              texto,\r\n              activo,\r\n              inactivo,\r\n              gradient,\r\n            })\r\n          );\r\n        arr2.forEach((x) => {\r\n          x.incumple = 1;\r\n          x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n        });\r\n        let arr3 = arr2.map(({ Area, ...remainingAttrs }) => remainingAttrs);\r\n        arr3 = [\r\n          ...arr3\r\n            .reduce((r, o) => {\r\n              const key = o.Tipo + \"-\" + o.Categoria;\r\n              const item =\r\n                r.get(key) ||\r\n                Object.assign({}, o, {\r\n                  incumple: 0,\r\n                });\r\n\r\n              item.incumple += o.incumple;\r\n              return r.set(key, item);\r\n            }, new Map())\r\n            .values(),\r\n        ];\r\n        arr2 = [\r\n          ...arr2\r\n            .reduce((r, o) => {\r\n              const key = o.Tipo + \"-\" + o.Categoria + \"-\" + o.SubCategoria;\r\n              const item =\r\n                r.get(key) ||\r\n                Object.assign({}, o, {\r\n                  incumple: 0,\r\n                });\r\n\r\n              item.incumple += o.incumple;\r\n              return r.set(key, item);\r\n            }, new Map())\r\n            .values(),\r\n        ];\r\n        arr3.sort((a, b) => b.incumple - a.incumple);\r\n        arr2.sort((a, b) => b.incumple - a.incumple);\r\n        setData1(arr3);\r\n        setData2(arr2);\r\n      }\r\n      let registrosPorUsuario = reporteFiltrado.map(\r\n        ({\r\n          Tipo,\r\n          Usuario,\r\n          Id,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n          Reporte,\r\n        }) => ({\r\n          Tipo,\r\n          Usuario,\r\n          Id,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n          Reporte,\r\n        })\r\n      );\r\n      let cuentaPorUsuario = registrosPorUsuario.map(\r\n        ({ Usuario, Id, Reporte }) => ({\r\n          Usuario,\r\n          Id,\r\n          Reporte,\r\n        })\r\n      );\r\n      cuentaPorUsuario = cuentaPorUsuario.filter(\r\n        (value, index, self) =>\r\n          index ===\r\n          self.findIndex(\r\n            (t) =>\r\n              t.Usuario === value.Usuario &&\r\n              t.Id === value.Id &&\r\n              t.Reporte === value.Reporte\r\n          )\r\n      );\r\n      setData3(cuentaPorUsuario);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Segment basic>\r\n        <Header as=\"h2\" icon=\"dashboard\" color=\"red\" content=\"Dashboard\" />\r\n      </Segment>\r\n\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n        <Dimmer\r\n          active={\r\n            status || estados.filter((x) => x.caption === status).length != 0\r\n          }\r\n          page\r\n        >\r\n          <Loader>{status}</Loader>\r\n        </Dimmer>\r\n        <Grid.Row>\r\n          <Header>\r\n            <Button.Group>\r\n              <Button\r\n                id=\"Reporte de Turno\"\r\n                color=\"red\"\r\n                name=\"ReporteT\"\r\n                inverted={tipoReporte !== \"Reporte de Turno\"}\r\n                style={{ borderRadius: \"15px\" }}\r\n                onClick={HandleTurnos}\r\n              >\r\n                Reporte de Turno\r\n              </Button>\r\n              <Button.Or color=\"red\" text={\"o\"} />\r\n              <Button\r\n                id=\"Reporte de Recorrido\"\r\n                color=\"red\"\r\n                name=\"ReporteR\"\r\n                inverted={tipoReporte !== \"Reporte de Recorrido\"}\r\n                style={{ borderRadius: \"15px\" }}\r\n                onClick={HandleTurnos}\r\n              >\r\n                Reporte de Recorrido\r\n              </Button>\r\n            </Button.Group>\r\n          </Header>\r\n        </Grid.Row>\r\n        <Grid.Row columns={4}>\r\n          <Grid.Column>\r\n            <Button\r\n              size=\"mini\"\r\n              basic\r\n              style={{ borderRadius: \"15px\" }}\r\n              fluid\r\n              onClick={() => {\r\n                filtros ? setFiltros(false) : setFiltros(true);\r\n              }}\r\n            >\r\n              <Icon name=\"arrow down\"></Icon> Filtros\r\n            </Button>\r\n          </Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n          <Grid.Column></Grid.Column>\r\n        </Grid.Row>\r\n        {filtros && (\r\n          <>\r\n            <b>Periodo</b>\r\n            <Grid.Row>\r\n              {periodos.map((x, idx) => {\r\n                return (\r\n                  <Grid.Column width={4} style={{ padding: \"2px\" }}>\r\n                    <Button\r\n                      size=\"tiny\"\r\n                      color=\"red\"\r\n                      inverted\r\n                      content={x}\r\n                      name={\"Periodo\" + idx}\r\n                      id={x}\r\n                      active={activePeriod === x}\r\n                      fluid\r\n                      style={{ borderRadius: \"15px\" }}\r\n                      onClick={HandleTurnos}\r\n                    />\r\n                  </Grid.Column>\r\n                );\r\n              })}\r\n            </Grid.Row>\r\n            <b>Area</b>\r\n            <Grid.Row>\r\n              {grupoArea.map((x, idx) => {\r\n                return (\r\n                  <Grid.Column width={5} style={{ padding: \"2px\" }}>\r\n                    <Button\r\n                      size=\"tiny\"\r\n                      color=\"red\"\r\n                      inverted\r\n                      content={x}\r\n                      name={\"Area\" + idx}\r\n                      id={x}\r\n                      active={area === x}\r\n                      fluid\r\n                      style={{ borderRadius: \"15px\" }}\r\n                      onClick={HandleTurnos}\r\n                    />\r\n                  </Grid.Column>\r\n                );\r\n              })}\r\n            </Grid.Row>\r\n            {tipoReporte === \"Reporte de Turno\" && <b>Turno</b>}\r\n            <Grid.Row columns=\"equal\">\r\n              {tipoReporte === \"Reporte de Turno\" &&\r\n                turnos.map((x, idx) => {\r\n                  return (\r\n                    <Grid.Column>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"red\"\r\n                        inverted\r\n                        content={x}\r\n                        name={\"Turno\" + idx}\r\n                        id={x}\r\n                        active={turno === x}\r\n                        fluid\r\n                        style={{ borderRadius: \"15px\" }}\r\n                        onClick={HandleTurnos}\r\n                      />\r\n                    </Grid.Column>\r\n                  );\r\n                })}\r\n            </Grid.Row>\r\n          </>\r\n        )}\r\n        {width <= breakpoint && data && (\r\n          <Grid.Row columns={2}>\r\n            {colores.map((x, idx) => {\r\n              if (idx < 2) {\r\n                return (\r\n                  <Grid.Column>\r\n                    <Button\r\n                      id={x.categoria}\r\n                      name={\"btn\" + x.short}\r\n                      onClick={HandleTurnos}\r\n                      fluid\r\n                      style={{\r\n                        backgroundImage: x.gradient,\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      <h1\r\n                        id={x.categoria}\r\n                        name={\"btn_title\" + x.short}\r\n                        style={{\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        {x.cumplimiento}\r\n                      </h1>\r\n                      <p\r\n                        id={x.categoria}\r\n                        name={\"btn_text\" + x.short}\r\n                        style={{\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        {x.categoria}\r\n                      </p>\r\n                    </Button>\r\n                  </Grid.Column>\r\n                );\r\n              }\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n        {width <= breakpoint && data && (\r\n          <Grid.Row columns={2}>\r\n            {colores.map((x, idx) => {\r\n              if (idx >= 2) {\r\n                return (\r\n                  <Grid.Column>\r\n                    <Button\r\n                      id={x.categoria}\r\n                      name={\"btn\" + x.short}\r\n                      onClick={HandleTurnos}\r\n                      fluid\r\n                      style={{\r\n                        backgroundImage: x.gradient,\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      <h1\r\n                        id={x.categoria}\r\n                        name={\"btn_title\" + x.short}\r\n                        style={{\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        {x.cumplimiento}\r\n                      </h1>\r\n                      <p\r\n                        id={x.categoria}\r\n                        name={\"btn_text\" + x.short}\r\n                        style={{\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        {x.categoria}\r\n                      </p>\r\n                    </Button>\r\n                  </Grid.Column>\r\n                );\r\n              }\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n        {width > breakpoint && data && (\r\n          <Grid.Row columns={4}>\r\n            {colores.map((x, idx) => {\r\n              return (\r\n                <Grid.Column>\r\n                  <Button\r\n                    id={x.categoria}\r\n                    name={\"btn\" + x.short}\r\n                    onClick={HandleTurnos}\r\n                    fluid\r\n                    style={{\r\n                      backgroundImage: x.gradient,\r\n                      color: x.texto,\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    <h1\r\n                      id={x.categoria}\r\n                      name={\"btn_title\" + x.short}\r\n                      style={{\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      {x.cumplimiento}\r\n                    </h1>\r\n                    <p\r\n                      id={x.categoria}\r\n                      name={\"btn_text\" + x.short}\r\n                      style={{\r\n                        color: x.texto,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      {x.categoria}\r\n                    </p>\r\n                  </Button>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n        )}\r\n      </Grid>\r\n      <br />\r\n      {categoria && data1.filter((x) => x.Tipo === categoria).length != 0 && (\r\n        <Segment\r\n          basic\r\n          style={{\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"2px\",\r\n            borderColor: data1[0].inactivo,\r\n            borderRadius: \"15px\",\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                {data1 && data2 && <Header as=\"h1\">{categoria}</Header>}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row columns={1} padding>\r\n              <Grid.Column>\r\n                {categoria === \"Bioseguridad\" &&\r\n                  data2.filter((x) => x.Tipo === categoria).length != 0 && (\r\n                    <Table selectable fixed>\r\n                      <Table.Body>\r\n                        <Table.Row>\r\n                          <Table.Cell\r\n                            rowSpan={data2\r\n                              .filter((x) => x.Tipo === categoria)\r\n                              .length.toString()}\r\n                          >\r\n                            <Header as=\"h2\">Bioseguridad</Header>\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            {\r\n                              data2.filter((x) => x.Tipo === categoria)[0]\r\n                                .SubCategoria\r\n                            }\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            {data2.filter((x) => x.Tipo === categoria)[0]\r\n                              .incumple &&\r\n                              Array(\r\n                                data2.filter((x) => x.Tipo === categoria)[0]\r\n                                  .incumple\r\n                              )\r\n                                .fill(0)\r\n                                .map((_, i) => (\r\n                                  <Icon name=\"x\" color=\"red\"></Icon>\r\n                                ))}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                        {data2\r\n                          .filter((x) => x.Tipo === categoria)\r\n                          .map((x, idx) => {\r\n                            if (idx > 0) {\r\n                              return (\r\n                                <Table.Row>\r\n                                  <Table.Cell>{x.SubCategoria}</Table.Cell>\r\n                                  <Table.Cell>\r\n                                    {x.incumple &&\r\n                                      Array(x.incumple)\r\n                                        .fill(0)\r\n                                        .map((_, i) => (\r\n                                          <Icon name=\"x\" color=\"red\"></Icon>\r\n                                        ))}\r\n                                  </Table.Cell>\r\n                                </Table.Row>\r\n                              );\r\n                            }\r\n                          })}\r\n                      </Table.Body>\r\n                    </Table>\r\n                  )}\r\n                {data1 && categoria !== \"Bioseguridad\" && (\r\n                  <Table fixed selectable>\r\n                    <Table.Body>\r\n                      {data1 &&\r\n                        categoria !== \"Bioseguridad\" &&\r\n                        data1.map((x) => {\r\n                          return (\r\n                            <>\r\n                              <Table.Row\r\n                                onClick={() => {\r\n                                  console.log(data2);\r\n                                }}\r\n                              >\r\n                                <Table.Cell>\r\n                                  <Header as=\"h2\">{x.Categoria}</Header>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                  {x.incumple &&\r\n                                    Array(x.incumple)\r\n                                      .fill(0)\r\n                                      .map((_, i) => (\r\n                                        <Icon name=\"x\" color=\"red\"></Icon>\r\n                                      ))}\r\n                                </Table.Cell>\r\n                              </Table.Row>\r\n                            </>\r\n                          );\r\n                        })}\r\n                    </Table.Body>\r\n                  </Table>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n      )}\r\n      {data3 && data3.length > 0 && (\r\n        <Segment>\r\n          <Header>Registros por Usuario</Header>\r\n          <List divided verticalAlign=\"middle\" size=\"huge\">\r\n            {[\r\n              ...new Map(data3.map((item) => [item[\"Usuario\"], item])).values(),\r\n            ].map((x) => {\r\n              return (\r\n                <List.Item>\r\n                  <Icon avatar name=\"user circle outline\" size=\"big\" />\r\n                  <List.Content>{x.Usuario}</List.Content>\r\n                  <List.Content>\r\n                    {tipoReporte}:{\" \"}\r\n                    {\r\n                      data3.filter(\r\n                        (item) =>\r\n                          item.Usuario === x.Usuario &&\r\n                          item.Reporte === tipoReporte\r\n                      ).length\r\n                    }\r\n                  </List.Content>\r\n                </List.Item>\r\n              );\r\n            })}\r\n          </List>\r\n        </Segment>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/fondo.bff34455.jpg\";","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Card,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Observacion({ user }) {\r\n  let params = useParams();\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas = datas.filter((item) => {\r\n      return item.id === params.id;\r\n    });\r\n\r\n    if (datas.length > 1) {\r\n      var personas = datas.map((e) => e.persObservadas).join(\", \");\r\n      console.log(personas);\r\n      datas[0].persObservadas = personas;\r\n      datas = datas.slice(0, 1);\r\n    }\r\n\r\n    setData(datas);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    console.log(params);\r\n    !data && sacardata();\r\n    data && console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {data && (\r\n        <Segment\r\n          onClick={() => {\r\n            console.log(data);\r\n          }}\r\n        >\r\n          <Item>\r\n            <Item.Image size=\"medium\" src={data[0].anexo} />\r\n\r\n            <Item.Content>\r\n              <Item.Header as=\"h2\">\r\n                {data[0].rubro + \" - \" + data[0].categoria}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                <p>\r\n                  <b>Detalle: </b> {data[0].observaciones}\r\n                  {data[0].obsDetalle && \" : \" + data[0].obsDetalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(data[0].fecha).toISOString().slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {data[0].area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {data[0].nombre}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {data[0].persObservadas}\r\n                </p>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Observacion;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD2qP-hydl9iaoxa0FO07FG5KDu9d3bGuA\",\r\n  authDomain: \"sasso-test-285920.firebaseapp.com\",\r\n  databaseURL: \"https://sasso-test-285920.firebaseio.com\",\r\n  projectId: \"sasso-test-285920\",\r\n  storageBucket: \"sasso-test-285920.appspot.com\",\r\n  messagingSenderId: \"191632707331\",\r\n  appId: \"1:191632707331:web:954ff5c5c38d8dcae4e336\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst getUserDocument = async (uid) => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching user\", error);\r\n  }\r\n};\r\nconst generateUserDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n  if (!snapshot.exists) {\r\n    const { Nombre, Correo, Apellido } = user;\r\n    try {\r\n      await userRef.set({\r\n        Nombre,\r\n        Correo,\r\n        Apellido,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user document\", error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\nexport {\r\n  storage,\r\n  auth,\r\n  firestore,\r\n  generateUserDocument,\r\n  getUserDocument,\r\n  firebase as default,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Statistic,\r\n  Divider,\r\n  Dimmer,\r\n  Loader,\r\n  Pagination,\r\n  Card,\r\n  Label,\r\n  Checkbox,\r\n  TextArea,\r\n  List,\r\n  Header,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${da}-${mo}-${ye}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction xltoDate(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo}-${da}`;\r\n  if (mo < 10) {\r\n    fechaStr = `${ye}-0${mo}-${da}`;\r\n  }\r\n\r\n  return fechaStr;\r\n}\r\n\r\nfunction Tareas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [data, setData] = useState(\"\");\r\n  const [myData, setMyData] = useState(\"\");\r\n  const [myPac, setMyPac] = useState(\"\");\r\n  const [activoID, setActivoID] = useState(\"\");\r\n  const [pagina, setPagina] = useState(1);\r\n  const [totalPagina, setTotalPagina] = useState(0);\r\n  const [extension, setExtension] = useState(\"N\");\r\n  const [extDate, setExtDate] = useState(date);\r\n  const [detalle, setDetalle] = useState(\"\");\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [saving, setSaving] = useState(false);\r\n  const [preventDate, setPreventDate] = useState(date);\r\n  const [pap, setpap] = useState(\"\");\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      reader.onload = function (e) {\r\n        preview.setAttribute(\"src\", e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      preview = document.querySelector(\"#blah\");\r\n      preview.setAttribute(\"src\", \"\");\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  const handleFireBaseUpload = (e) => {\r\n    if (subir) {\r\n      e.preventDefault();\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      }\r\n      const uploadTask = storage\r\n        .ref(`/images/${imageAsFile.name}`)\r\n        .put(imageAsFile);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapShot) => {\r\n          //takes a snap shot of the process as it is happening\r\n          console.log(snapShot);\r\n        },\r\n        (err) => {\r\n          //catches the errors\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          // gets the functions from storage refences the image storage in firebase by the children\r\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n          storage\r\n            .ref(\"images\")\r\n            .child(imageAsFile.name)\r\n            .getDownloadURL()\r\n            .then((fireBaseUrl) => {\r\n              setImageAsUrl((prevObject) => ({\r\n                ...prevObject,\r\n                imgUrl: fireBaseUrl,\r\n              }));\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.responsable === user;\r\n      })\r\n    );\r\n    setMyPac(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      })\r\n    );\r\n    setTotalPagina(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      }).length\r\n    );\r\n    try {\r\n      setActivoID(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].id\r\n      );\r\n      setExtension(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].extension\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setSaving(true);\r\n    let extendido = extension;\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (sheet.getCell(j, 18).value === activoID) {\r\n        const mr = sheet.getCell(j, 12);\r\n        const or = sheet.getCell(j, 14);\r\n        const pr = sheet.getCell(j, 15);\r\n        const qr = sheet.getCell(j, 16);\r\n        const rr = sheet.getCell(j, 17);\r\n        const wr = sheet.getCell(j, 22);\r\n        const xr = sheet.getCell(j, 23);\r\n        mr.value = \"Pendiente Aprobacion\";\r\n        or.value = extendido;\r\n        if (extDate) {\r\n          pr.formula =\r\n            \"=date(\" +\r\n            extDate.substring(0, 4) +\r\n            \",\" +\r\n            extDate.substring(5, 7) +\r\n            \",\" +\r\n            extDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (pap) {\r\n          wr.value = pap;\r\n        }\r\n        if (preventDate) {\r\n          xr.formula =\r\n            \"=date(\" +\r\n            preventDate.substring(0, 4) +\r\n            \",\" +\r\n            preventDate.substring(5, 7) +\r\n            \",\" +\r\n            preventDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (detalle) {\r\n          qr.value = detalle;\r\n        }\r\n        if (imageAsUrl.imgUrl) {\r\n          rr.value = imageAsUrl.imgUrl;\r\n        }\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n    setSaving(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container>\r\n      <Dimmer active={!data || saving} page>\r\n        <Loader>{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      {user ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Pagination\r\n              defaultActivePage={1}\r\n              ellipsisItem={{\r\n                content: <Icon name=\"ellipsis horizontal\" />,\r\n                icon: true,\r\n              }}\r\n              firstItem={{\r\n                content: <Icon name=\"angle double left\" />,\r\n                icon: true,\r\n              }}\r\n              lastItem={{\r\n                content: <Icon name=\"angle double right\" />,\r\n                icon: true,\r\n              }}\r\n              prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\r\n              nextItem={{ content: <Icon name=\"angle right\" />, icon: true }}\r\n              totalPages={totalPagina}\r\n              onPageChange={(e, { activePage }) => {\r\n                setPagina(activePage);\r\n                setActivoID(myPac[activePage - 1].id);\r\n                setSubir(false);\r\n                setImageAsUrl(\"\");\r\n                setImageAsFile(\"\");\r\n                setExtension(myPac[activePage - 1].extension);\r\n                setExtension(date);\r\n                var preview = document.querySelector(\"#blah\");\r\n                preview.setAttribute(\"src\", \"\");\r\n                var archivoSelect = document.querySelector(\"#anexoImg\");\r\n                archivoSelect.value = \"\";\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <Segment>\r\n            <Header>Tareas</Header>\r\n            <List>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" />\r\n                <List.Content>\r\n                  <b>{myData.length} Acciones Totales</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"red\" />\r\n                <List.Content>\r\n                  <b>{myPac.length} Acciones Pendientes</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"green\" />\r\n                <List.Content>\r\n                  <b>\r\n                    {100 - Math.round((myPac.length / myData.length) * 100, 2)}{\" \"}\r\n                    % completada\r\n                  </b>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Segment>\r\n          <Segment\r\n            style={{\r\n              height: \"60vh\",\r\n              overflowY: \"scroll\",\r\n            }}\r\n          >\r\n            {myPac && myPac.length !== 0 ? (\r\n              <>\r\n                <Header>{myPac[pagina - 1].rubro.toUpperCase()}</Header>\r\n                <p>\r\n                  {myPac[pagina - 1].categoria}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].area}\r\n                  <br></br>\r\n                  Registrado por: {myPac[pagina - 1].nombre}\r\n                  <br></br>\r\n                  Hallazgo: {myPac[pagina - 1].observaciones}\r\n                </p>\r\n                <Header>Acciones Tomadas</Header>\r\n                <p>{myPac[pagina - 1].pac}</p>\r\n                <p>\r\n                  Fecha Limite Inicial:{\" \"}\r\n                  {FechaString(\r\n                    ExcelDateToJSDate(myPac[pagina - 1].fecha_cierre)\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" ? (\r\n                    <Checkbox\r\n                      disabled\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      checked\r\n                    />\r\n                  ) : (\r\n                    <Checkbox\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      onChange={() => {\r\n                        if (extension !== \"N\") {\r\n                          setExtension(\"N\");\r\n                        } else {\r\n                          setExtension(\"Y\");\r\n                        }\r\n                      }}\r\n                      checked={extension === \"Y\"}\r\n                    />\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" || extension === \"Y\" ? (\r\n                    <Input\r\n                      size=\"mini\"\r\n                      type=\"date\"\r\n                      onChange={(e) => {\r\n                        setExtDate(e.target.value);\r\n                      }}\r\n                      defaultValue={\r\n                        myPac[pagina - 1].extension === \"Y\"\r\n                          ? xltoDate(\r\n                              ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                            )\r\n                          : date\r\n                      }\r\n                    />\r\n                  ) : null}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Detalle Adicional\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"pacDetail\"\r\n                      name=\"planDetail\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      value={myPac[pagina - 1].detalle_pac}\r\n                      onChange={(e, { value }) => {\r\n                        setDetalle(value);\r\n                      }}\r\n                      placeholder=\"Detalle adicional de la acción tomada...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Acciones Preventivas</Header>\r\n                  <Input\r\n                    size=\"mini\"\r\n                    type=\"date\"\r\n                    onChange={(e) => {\r\n                      setPreventDate(e.target.value);\r\n                    }}\r\n                    defaultValue={\r\n                      myPac[pagina - 1].extension === \"Y\"\r\n                        ? xltoDate(\r\n                            ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                          )\r\n                        : date\r\n                    }\r\n                  />\r\n                  <br></br>\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"ppreventiva\"\r\n                      name=\"ppreventiva\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      onChange={(e, { value }) => {\r\n                        setpap(value);\r\n                      }}\r\n                      placeholder=\"Detalle de acción preventiva...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={handleImageUpload}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </p>\r\n\r\n                <div className=\"ui two buttons\">\r\n                  <Button color=\"yellow\" onClick={registrar}>\r\n                    Guardar\r\n                  </Button>\r\n                  <Button color=\"green\">Solicitar Aprobacion</Button>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Tareas;\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Modal,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Consultas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    setBuscar(true);\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas.sort(function (a, b) {\r\n      var keyA = a.fecha_hora,\r\n        keyB = b.fecha_hora;\r\n      // Compare the 2 dates\r\n      if (keyA > keyB) return -1;\r\n      if (keyA < keyB) return 1;\r\n      return 0;\r\n    });\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.nombre === user;\r\n      })\r\n    );\r\n    setDataFound(\r\n      datas.filter((item) => {\r\n        if (creador.length !== 0) {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final &&\r\n            creador.includes(item.nombre)\r\n          );\r\n        } else {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final\r\n          );\r\n        }\r\n      })\r\n    );\r\n    setBuscar(false);\r\n    setActiveIndex(-1);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    !data && sacardata();\r\n    data && console.log(myData);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Segment>\r\n        {activeItem && (\r\n          <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n          >\r\n            <Modal.Header>{activeItem.observaciones}</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={activeItem.anexo} wrapped />\r\n              <Modal.Description>\r\n                <Header>{activeItem.rubro + \"-\" + activeItem.categoria}</Header>\r\n                <p>\r\n                  <b>Detalle: </b> {activeItem.detalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(activeItem.fecha)\r\n                    .toISOString()\r\n                    .slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {activeItem.area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {activeItem.observador}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {activeItem.observado}\r\n                </p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"green\" onClick={() => setOpen(false)}>\r\n                OK\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        )}\r\n\r\n        <Dimmer active={buscar} page>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n        <Accordion fluid>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            Filtros\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            <>\r\n              <Input\r\n                label=\"Desde\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setInicio(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value > final && setFinal(e.target.value);\r\n                }}\r\n                value={inicio}\r\n                defaultValue={inicio}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Input\r\n                label=\"Hasta\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setFinal(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value < inicio && setInicio(e.target.value);\r\n                }}\r\n                value={final}\r\n                defaultValue={final}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Label>Registrado por </Label>\r\n              <Dropdown\r\n                fluid\r\n                multiple\r\n                search\r\n                selection\r\n                value={creador}\r\n                placeholder=\"Registrado por...\"\r\n                options={personal}\r\n                onChange={(e, { value }) => {\r\n                  setCreador(value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Button onClick={sacardata}>Buscar</Button>\r\n            </>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n      {dataFound && (\r\n        <Segment>\r\n          <Item.Group divided>\r\n            {dataFound.map((item) => (\r\n              <Item key={item.id}>\r\n                <Item.Content>\r\n                  <Item.Header\r\n                    as=\"a\"\r\n                    href={\"/observacion/\" + item.id}\r\n                    onClick={(e) => {\r\n                      setActiveItem((prevObject) => ({\r\n                        ...prevObject,\r\n                        id: item.id,\r\n                        rubro: item.rubro,\r\n                        categoria: item.categoria,\r\n                        observaciones: item.observaciones,\r\n                        detalle: item.obsDetalle,\r\n                        area: item.area,\r\n                        fecha: item.fecha,\r\n                        observador: item.nombre,\r\n                        observado: item.persObservadas,\r\n                        anexo: item.anexo ? item.anexo : dummyImg,\r\n                      }));\r\n                      //setOpen(true);\r\n                    }}\r\n                  >\r\n                    {item.rubro + \" - \" + item.categoria}\r\n                  </Item.Header>\r\n                  <Item.Meta>{item.observaciones}</Item.Meta>\r\n                  <Item.Description>\r\n                    {item.area +\r\n                      \" - \" +\r\n                      ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10)}\r\n                  </Item.Description>\r\n                  <Item.Extra>Observador:{item.nombre}</Item.Extra>\r\n                  <Item.Extra>\r\n                    Personas Observadas:{item.persObservadas}\r\n                  </Item.Extra>\r\n                  <Item.Extra>{item.obsDetalle}</Item.Extra>\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n          </Item.Group>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Consultas;\r\n","export default {\r\n  USER_ID: \"user_1s8Jx16sWB2djLHeed4yw\",\r\n  TEMPLATE_ID: \"template_oc6ugfi\",\r\n};\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Registros({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [idUnico, setID] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n  const [imgUpload, setImgUpload] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/images/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"images\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n                setImgUpload(fireBaseUrl);\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:E\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 4);\r\n      datas.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        src: cr.value,\r\n      });\r\n    }\r\n    setData(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  const handleTipoClick = (e) => {\r\n    if (tipo === e.target.name) {\r\n      setTipo(\"\");\r\n    } else {\r\n      setTipo(e.target.name);\r\n      console.log(e.target.name);\r\n      segCat.current.focus();\r\n      setCat(\"\");\r\n      setSubCat(\"\");\r\n      setSubCatData(\"\");\r\n    }\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    }\r\n  }, [areas]);\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  const handleCatClick = (e, { name }) => {\r\n    setSubCat(\"\");\r\n    setSubCatData(\"\");\r\n    setCat(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleStep = (e, { name }) => {\r\n    setStep(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleArea = (e, { name }) => {\r\n    setArea(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setConfirmar(true);\r\n  };\r\n\r\n  async function registrar() {\r\n    setLoading(true);\r\n    let wd = today.getDay();\r\n    wd === 0 ? (wd = 7) : (wd = wd);\r\n    let semana = FechaString(today.setDate(today.getDate() - wd + 1));\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const aplica = perfil === \"Registros\" ? \"Y\" : \"N\";\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    var j;\r\n    var UniqueID =\r\n      Date.now() +\r\n      user.substring(0, 2) +\r\n      tipo.substring(0, 1) +\r\n      subCat.substring(0, 2);\r\n    setID(UniqueID);\r\n    console.log(UniqueID);\r\n    for (j = 0; j < involucrados.length; j++) {\r\n      await sheet.addRow({\r\n        fecha: date,\r\n        fecha_hora: fecha,\r\n        nombre: creador,\r\n        area: area,\r\n        rubro: tipo,\r\n        categoria: cat,\r\n        observaciones: subCat,\r\n        pac: plan,\r\n        responsable: resp,\r\n        fecha_cierre: startDate,\r\n        anexo: imgUpload,\r\n        status: \"Pendiente\",\r\n        Personas_Observadas: involucrados[j],\r\n        id: UniqueID,\r\n        severidad: severidad,\r\n        Detalle: detalles,\r\n        Aplica: aplica,\r\n        semana: semana,\r\n        ids: 1 / involucrados.length,\r\n      });\r\n    }\r\n    if (correo !== \"No Aplica\") {\r\n      notificar(UniqueID);\r\n    }\r\n    setTipo(\"\");\r\n    setCat(\"\");\r\n    setSubCat(\"\");\r\n    setDetalles(\"\");\r\n    setInvolucrados([]);\r\n    setArea(\"\");\r\n    setPlan(\"\");\r\n    setResp(\"\");\r\n    setImageAsUrl(\"\");\r\n    setPreviewImg(\"\");\r\n    setLoading(false);\r\n    setConfirmar(false);\r\n    setSaving(true);\r\n  }\r\n\r\n  function notificar(codigo) {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      detalles: detalles,\r\n      imagen: \"https://www.miculturaqse507.com/sasso-app/observacion/\" + codigo,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n    setID(\"\");\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (subir) {\r\n      handleFireBaseUpload();\r\n    }\r\n  }, [subir]);\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div>\r\n          <Dimmer active={loading} page>\r\n            <Loader size=\"massive\">{data ? \"Saving\" : \"Loading\"}</Loader>\r\n          </Dimmer>\r\n          <Modal\r\n            header=\"Listo!\"\r\n            content=\"Su observación ha sido registrado exitosamente.\"\r\n            open={saving}\r\n            actions={[\r\n              {\r\n                key: \"done\",\r\n                content: \"Done\",\r\n                positive: true,\r\n                onClick: () => {\r\n                  setSaving(false);\r\n                  history.push(\"/observaciones\");\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <Modal\r\n            onClose={() => setConfirmar(false)}\r\n            onOpen={() => setConfirmar(true)}\r\n            open={confirmar}\r\n          >\r\n            <Modal.Header>Confirmar Información</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={previewImg} wrapped />\r\n              <Modal.Description>\r\n                <Header>Observacion de {tipo}</Header>\r\n                <p>{cat}</p>\r\n                <p>{subCat}</p>\r\n                <p>Severidad:{severidad}</p>\r\n                <Header>Persona(s) Observada(s)</Header>\r\n                {involucrados.map((item) => (\r\n                  <li>{item}</li>\r\n                ))}\r\n                <Header>Area</Header>\r\n                <p>{area}</p>\r\n                <Header>PLAN DE ACCION</Header>\r\n                <p>{plan}</p>\r\n                <p>Responsable: {resp}</p>\r\n                <p>Fecha de Cierre Previsto: {startDate}</p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"black\" onClick={() => setConfirmar(false)}>\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                content=\"Confirmar\"\r\n                labelPosition=\"right\"\r\n                icon=\"checkmark\"\r\n                onClick={() => {\r\n                  registrar();\r\n                }}\r\n                positive\r\n              />\r\n            </Modal.Actions>\r\n          </Modal>\r\n          {guardar ? (\r\n            <Button\r\n              fluid\r\n              color=\"green\"\r\n              content=\"Guardar\"\r\n              onClick={handleSave}\r\n            ></Button>\r\n          ) : null}\r\n          <Step.Group ordered size=\"mini\" attached=\"top\" unstackable>\r\n            <Step\r\n              active={step === \"Que\"}\r\n              name=\"Que\"\r\n              onClick={handleStep}\r\n              completed={que}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Observación</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"Donde\"}\r\n              name=\"Donde\"\r\n              onClick={handleStep}\r\n              completed={donde}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Area</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"PAC\"}\r\n              name=\"PAC\"\r\n              onClick={handleStep}\r\n              completed={pacStep}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>PAC</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n          </Step.Group>\r\n          <Segment attached>\r\n            {step === \"Que\" ? (\r\n              <Container>\r\n                {user === \"user\" && (\r\n                  <>\r\n                    <Segment>\r\n                      <Header>Nombre del Observador</Header>\r\n                      <Input\r\n                        fluid\r\n                        placeholder=\"Nombre del Observador...\"\r\n                        onChange={(e, { value }) => {\r\n                          setCreador(value);\r\n                        }}\r\n                      />\r\n                    </Segment>\r\n                  </>\r\n                )}\r\n                <Segment name=\"segmentTipo\">\r\n                  <Header>Tipo de Observación</Header>\r\n                  {tipos.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          circular\r\n                          name={item.name}\r\n                          onClick={handleTipoClick}\r\n                          active={tipo === item.name}\r\n                        >\r\n                          {item.id}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment name=\"segmentInvol\">\r\n                  <Header>Personas Responsables/Involucradas</Header>\r\n                  <Dropdown\r\n                    fluid\r\n                    multiple\r\n                    search\r\n                    selection\r\n                    value={involucrados}\r\n                    placeholder=\"Seleccionar Personas Involucradas\"\r\n                    options={personal}\r\n                    onChange={(e, { value }) => {\r\n                      setInvolucrados(value);\r\n                      console.log(value);\r\n                    }}\r\n                  />\r\n                </Segment>\r\n                <Ref innerRef={segCat}>\r\n                  <Segment name=\"segmentCat\">\r\n                    <Header>Categoria de la Observación</Header>\r\n                    <Card.Group itemsPerRow={4}>\r\n                      {catData\r\n                        ? catData.map((item) => (\r\n                            <Popup\r\n                              trigger={\r\n                                <Card\r\n                                  raised\r\n                                  color={\r\n                                    cat === item.Categoria ? \"red\" : \"black\"\r\n                                  }\r\n                                  name={item.Categoria}\r\n                                  onClick={handleCatClick}\r\n                                >\r\n                                  <Image\r\n                                    src={item.src}\r\n                                    size=\"mini\"\r\n                                    wrapped\r\n                                    ui={false}\r\n                                  />\r\n                                  <Card.Content>\r\n                                    {cat === item.Categoria ? (\r\n                                      <Icon\r\n                                        color=\"green\"\r\n                                        name=\"check circle\"\r\n                                      ></Icon>\r\n                                    ) : null}\r\n                                  </Card.Content>\r\n                                </Card>\r\n                              }\r\n                            >\r\n                              <Popup.Header>{item.Categoria}</Popup.Header>\r\n                            </Popup>\r\n                          ))\r\n                        : null}\r\n                    </Card.Group>\r\n                  </Segment>\r\n                </Ref>\r\n\r\n                {subCatData ? (\r\n                  <Ref innerRef={segSubCat}>\r\n                    <Segment name=\"segmentSubCat\">\r\n                      <Header>Observación</Header>\r\n                      <Dropdown\r\n                        fluid\r\n                        button\r\n                        search\r\n                        scrolling\r\n                        clearable\r\n                        value={subCat}\r\n                        placeholder=\"Seleccionar Observacion\"\r\n                        options={subCatData}\r\n                        onChange={(e, { value }) => {\r\n                          setSubCat(value);\r\n                        }}\r\n                      />\r\n                      <br />\r\n                      <Header>\r\n                        Severidad\r\n                        <Popup\r\n                          trigger={\r\n                            <div>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 0 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(1);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 1 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(2);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 2 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(3);\r\n                                }}\r\n                              ></Icon>\r\n                            </div>\r\n                          }\r\n                          content={\"Grado de Severidad: \" + severidad}\r\n                        ></Popup>\r\n                      </Header>\r\n                      <Form>\r\n                        <TextArea\r\n                          placeholder=\"Detalles\"\r\n                          onChange={(e, { value }) => {\r\n                            setDetalles(value);\r\n                          }}\r\n                        ></TextArea>\r\n                      </Form>\r\n                    </Segment>\r\n                  </Ref>\r\n                ) : null}\r\n              </Container>\r\n            ) : null}\r\n            {step === \"Donde\" && areas ? (\r\n              <div>\r\n                <Segment>\r\n                  <Header>Área de la Observación</Header>\r\n                  {areas.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          style={{ width: \"15vw\" }}\r\n                          name={item.name}\r\n                          onClick={handleArea}\r\n                          active={area === item.name}\r\n                        >\r\n                          {item.short}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      handleImageUpload(e);\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </Segment>\r\n              </div>\r\n            ) : null}\r\n            {step === \"PAC\" ? (\r\n              <Segment>\r\n                <Header>Acción Tomada</Header>\r\n                <Form>\r\n                  <TextArea\r\n                    placeholder=\"Escriba la Acción Tomada aquí...\"\r\n                    value={plan}\r\n                    onChange={(e) => {\r\n                      setPlan(e.target.value);\r\n                      console.log(e.target.value);\r\n                    }}\r\n                  ></TextArea>\r\n                </Form>\r\n                <Header>Fecha de Cierre Previsto</Header>\r\n                <Input\r\n                  fluid\r\n                  type=\"date\"\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                  defaultValue={startDate}\r\n                />\r\n                <Header>Responsable del Plan</Header>\r\n                <Dropdown\r\n                  fluid\r\n                  search\r\n                  selection\r\n                  placeholder=\"Seleccionar Responsable del Plan\"\r\n                  options={personal}\r\n                  value={resp}\r\n                  onChange={(e, { value }) => {\r\n                    setResp(value);\r\n                    console.log(value);\r\n                  }}\r\n                />\r\n              </Segment>\r\n            ) : null}\r\n          </Segment>\r\n        </div>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registros;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction Categorias({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n\r\n  const areas = [\r\n    { id: 2, name: \"Linea1\", short: \"L1\" },\r\n    { id: 3, name: \"Linea2\", short: \"L2\" },\r\n    { id: 4, name: \"Linea3\", short: \"L3\" },\r\n    { id: 5, name: \"Linea4\", short: \"L4\" },\r\n    { id: 6, name: \"Linea5\", short: \"L5\" },\r\n    { id: 1, name: \"Area de Reciclaje\", short: \"AR\" },\r\n    { id: 8, name: \"Sala de Jarabe\", short: \"SJ\" },\r\n    { id: 9, name: \"Taller de Mtto\", short: \"TM\" },\r\n    { id: 9, name: \"Area de Operaciones\", short: \"OP\" },\r\n    { id: 7, name: \"PTAR\", short: \"PTAR\" },\r\n    { id: 10, name: \"PTA\", short: \"PTA\" },\r\n    { id: 11, name: \"Oficina Administrativa\", short: \"ADM\" },\r\n  ];\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/iconos/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"iconos\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      var data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    console.log(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (imageAsUrl) {\r\n      console.log(imageAsUrl.imgUrl);\r\n    }\r\n  }, [imageAsUrl]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  async function registrar(tipo, categoria) {\r\n    handleFireBaseUpload();\r\n    console.log(imageAsUrl.imgUrl);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (\r\n        sheet.getCell(j, 0).value === tipo &&\r\n        sheet.getCell(j, 1).value === categoria\r\n      ) {\r\n        const imagen = sheet.getCell(j, 4);\r\n        imagen.value = imageAsUrl.imgUrl;\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function notificar() {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <Segment>\r\n          {data.map((item) => (\r\n            <Segment>\r\n              <Header>{item.Tipo}</Header>\r\n              <Form>\r\n                <TextArea value={item.Categoria}></TextArea>\r\n                <Header content={item.src}></Header>\r\n                <Input\r\n                  id=\"anexoImg\"\r\n                  fluid\r\n                  className=\"input-image\"\r\n                  type=\"file\"\r\n                  onChange={handleImageUpload}\r\n                />\r\n                <br />\r\n\r\n                <Button\r\n                  onClick={(e) => {\r\n                    registrar(item.Tipo, item.Categoria);\r\n                  }}\r\n                >\r\n                  SAVE\r\n                </Button>\r\n                <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n              </Form>\r\n            </Segment>\r\n          ))}\r\n        </Segment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categorias;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport {\r\n  Header,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Form,\r\n  Message,\r\n  Checkbox,\r\n  Popup,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Login() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"recordar\"]: [recordar, setRecordar],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState();\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const login = (event, password) => {\r\n    event.preventDefault();\r\n    var found = false;\r\n    for (var i = 0; i < userData.length; i++) {\r\n      if (userData[i].id === password) {\r\n        found = true;\r\n        setUser(userData[i].Nombre);\r\n        sessionStorage.user = userData[i].Nombre;\r\n        if (recordar) {\r\n          localStorage.user = userData[i].Nombre;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!found) alert(`Usuario No encontrado`);\r\n    if (found) {\r\n      if (pagina) {\r\n        history.push(pagina);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Ingresar con su Numero de Empleado\r\n        </Header>\r\n        <Form size=\"large\">\r\n          <Segment stacked>\r\n            <Popup\r\n              content=\"Numero de Empleado sin PA ni los 0 iniciales, Ejemplo: PA00123456 = 123456\"\r\n              trigger={\r\n                <Form.Input\r\n                  name=\"userPassword\"\r\n                  type=\"password\"\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Numero de Empleado\"\r\n                  onChange={(event) => onChangeHandler(event)}\r\n                />\r\n              }\r\n            />\r\n\r\n            <Button\r\n              color=\"red\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={(event) => {\r\n                login(event, password);\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          <Checkbox\r\n            label=\"Recordar Usuario\"\r\n            onChange={(e, { checked }) => {\r\n              checked ? setRecordar(true) : setRecordar(false);\r\n            }}\r\n          />\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport userData from \"./employee.json\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Perfil() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Segment>\r\n        <Header as=\"h4\">\r\n          {user}\r\n          <Button\r\n            floated=\"right\"\r\n            negative\r\n            onClick={() => {\r\n              setUser(\"\");\r\n              sessionStorage.removeItem(\"user\");\r\n              localStorage.removeItem(\"user\");\r\n              setPagina(\"/perfil\");\r\n              history.push(\"/Login\");\r\n            }}\r\n          >\r\n            Cerrar Sesión\r\n          </Button>\r\n        </Header>\r\n        <Segment>{userInfo[0].correo}</Segment>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Perfil;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { intlFormat } from \"date-fns\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  //var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da} ${hora}`;\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Schedule() {\r\n  const [persona, setPersona] = useState(); //variable para responsable de recorrido\r\n  const [lugar, setLugar] = useState(); //variable para area de recorrido\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const { [\"personal\"]: personal } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date())); //variable para fecha de recorrido\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        if (areas[j].name !== \"\") {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  async function registrar() {\r\n    setSaving(true);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[762667679];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    while (lastr--) {\r\n      try {\r\n        console.log(rows[lastr].Usuario);\r\n        if (\r\n          rows[lastr].Nombre == persona &&\r\n          rows[lastr].Fecha == fecha &&\r\n          rows[lastr].Area == lugar\r\n        ) {\r\n          console.log(\"Borrando\");\r\n          await rows[lastr].delete();\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        break;\r\n      }\r\n    }\r\n    await sheet.addRow({\r\n      Nombre: persona,\r\n      Fecha: fecha,\r\n      Area: lugar,\r\n      Usuario: user,\r\n      FechaProgramado: FechaStringLong(new Date()),\r\n    });\r\n    alert(\"Datos Guardados\");\r\n    setSaving(false);\r\n    setPersona();\r\n    setLugar();\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Dimmer active={saving} page>\r\n        <Loader size=\"massive\">{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Programar Recorrido\r\n        </Header>\r\n        <Form>\r\n          <b>Nombre*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Nombre de Empleado...\"\r\n            defaultValue={persona}\r\n            options={personal}\r\n            onChange={(e, { value }) => {\r\n              setPersona(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Area*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Area...\"\r\n            defaultValue={lugar}\r\n            options={listaArea}\r\n            onChange={(e, { value }) => {\r\n              setLugar(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            size=\"tiny\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n          <br></br>\r\n          <Button\r\n            disabled={!persona || !lugar}\r\n            negative\r\n            fluid\r\n            onClick={() => {\r\n              registrar();\r\n            }}\r\n          >\r\n            Programar\r\n          </Button>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n  Radio,\r\n  Popup,\r\n  Sticky,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { GradientDefs } from \"react-vis\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nexport default function ReporteDeTurno({ user }) {\r\n  const referencia = useRef(null);\r\n  const {\r\n    [\"reportData\"]: [reportData, setRepData],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const [area, setArea] = useState();\r\n  const [categoria, setCat] = useState();\r\n  const { personal: personal } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  const [reportes, setReportes] = useState(); //Listado completo de CheckList\r\n  const [sinFiltro, setSinFiltro] = useState();\r\n  const [checkList, setCheckList] = useState();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date()));\r\n  const [cats, setCats] = useState();\r\n  const [rubros, setRubros] = useState();\r\n  const [activeRubro, setActRubro] = useState();\r\n  const [subCat, setSubCat] = useState();\r\n  const [requerimientos, setReq] = useState();\r\n  const [activeReq, setActiveR] = useState();\r\n  const [incumple, setIncumple] = useState([]);\r\n  const [percentage, setPercentage] = useState();\r\n  const [turno, setTurno] = useState(1);\r\n  const [campoOblig, setCampoOblig] = useState(0);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [duplicado, setDuplicado] = useState(false);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [tipoReporte, setTipoRep] = useState(\"Reporte de Turno\");\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const turnos = [\"1\", \"2\", \"3\"];\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const history = useHistory();\r\n\r\n  async function handleImageUpload(event, rubro) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, url: \"\", preview: \"\", img: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, preview: e.target.result }\r\n              : x;\r\n          });\r\n        });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, img: compressedFile }\r\n              : x;\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      setImageAsFile(\"\");\r\n      setPreviewImg(dummyImg);\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, preview: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setPercentage(0);\r\n  }\r\n\r\n  async function handleFireBaseUpload(rubro) {\r\n    var boton = document.getElementById(\"btn\" + activeReq + activeRubro);\r\n    boton.disabled = true;\r\n    setPercentage(1);\r\n    const archivo =\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n        )\r\n      ].img;\r\n    const uploadTask = storage.ref(`/images/${archivo.name}`).put(archivo);\r\n    setPercentage(5);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        //takes a snap shot of the process as it is happening\r\n        console.log(snapShot);\r\n      },\r\n      (err) => {\r\n        //catches the errors\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        // gets the functions from storage refences the image storage in firebase by the children\r\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n        setPercentage(50);\r\n        storage\r\n          .ref(\"images\")\r\n          .child(archivo.name)\r\n          .getDownloadURL()\r\n          .then((fireBaseUrl) => {\r\n            setReportes((existingItems) => {\r\n              return existingItems.map((x) => {\r\n                return x.SubCategoria === activeRubro &&\r\n                  x.Categoria === activeReq\r\n                  ? { ...x, url: fireBaseUrl }\r\n                  : x;\r\n              });\r\n            });\r\n            setPercentage(100);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setRepData(datas);\r\n  };\r\n  const sacarReportes = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = 1259390435;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    var aplican = datas.filter((x) => x[\"Reporte de turno\"] === \"Y\");\r\n    if (window.location.href.includes(\"recorrido\")) {\r\n      aplican = datas.filter((x) => x[\"Recorrido\"] === \"Y\");\r\n    }\r\n    setSinFiltro(aplican);\r\n    setReportes(aplican);\r\n    setCats(\r\n      aplican\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  const sacarReportes2 = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = window.location.href.includes(\"recorrido\")\r\n      ? 1236777776\r\n      : 585241358;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    setReportes(datas);\r\n    setCats(\r\n      datas\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  async function registrar() {\r\n    setStatus(estados[0].caption);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n\r\n    if (duplicado) {\r\n      setStatus(estados[2].caption);\r\n      while (lastr--) {\r\n        try {\r\n          if (rows[lastr].Id == uniqueID) {\r\n            console.log(\"Borrando\");\r\n            await rows[lastr].delete();\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          sleep(60000);\r\n          lastr = lastr + 1;\r\n          continue;\r\n        }\r\n      }\r\n      setStatus(estados[0].caption);\r\n    }\r\n    var j;\r\n\r\n    for (j = 0; j < reportes.length; j++) {\r\n      try {\r\n        console.log(\"guardando\");\r\n        await sheet.addRow({\r\n          Area: area,\r\n          Usuario: user,\r\n          FechaRegistro: FechaStringLong(new Date()),\r\n          FechaRecorrido: fecha,\r\n          Tipo: reportes[j].Tipo,\r\n          Categoria: reportes[j].Categoria,\r\n          SubCategoria: reportes[j].SubCategoria,\r\n          Incumple: reportes[j].incumple,\r\n          Detalle: reportes[j].detalle,\r\n          PersonasObservadas: reportes[j].personas,\r\n          Imagen: reportes[j].url,\r\n          Turno: turno,\r\n          Reporte: tipoReporte,\r\n          Id: uniqueID,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n        sleep(60000);\r\n        j = j - 1;\r\n        continue;\r\n      }\r\n    }\r\n    alert(\"Datos Guardados\");\r\n    setActiveR();\r\n    setStatus();\r\n    setArea(\"\");\r\n    setActRubro();\r\n    setRepData();\r\n    setReportes();\r\n    setConfirmar(false);\r\n    history.push(\"/\");\r\n  }\r\n  const [lista, setLista] = useState();\r\n  const crearLista = (e, { name }) => {\r\n    if (activeReq == name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(name);\r\n    }\r\n    setLista(\r\n      reportData\r\n        .filter((item) => item.Nombre == name)\r\n        .map((item) => item.Rubro)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n  };\r\n  const revision = (e, { name, requerimiento }) => {\r\n    let observacion = { req: requerimiento, rubro: name };\r\n    if (\r\n      reportData[reportData.findIndex((x) => x.Rubro === name)].Acto === \"Y\"\r\n    ) {\r\n      observacion.obligatorio = 1;\r\n    }\r\n    if (incumple.some((e) => e.req === requerimiento && e.rubro === name)) {\r\n      let removeIndex = incumple.filter((e) => e.rubro !== name);\r\n      console.log(removeIndex);\r\n      // remove object\r\n      setIncumple(removeIndex);\r\n    } else {\r\n      setIncumple((oldArray) => [...oldArray, observacion]);\r\n    }\r\n  };\r\n  const validar = () => {\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n    let res = [];\r\n    res = reportData.filter((element) => {\r\n      return element.Id == uniqueID;\r\n    });\r\n    if (res.length > 0) {\r\n      setDuplicado(true);\r\n    } else {\r\n      setDuplicado(false);\r\n    }\r\n  };\r\n\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    // Return a function from the effect that removes the event listener\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var userArea = userData.filter((x) => x.Nombre === user)[0].Area;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        let keys = areas[j].keys;\r\n        if (\r\n          areas[j].name !== \"\" &&\r\n          (userArea.toLowerCase().includes(\"gerencia\") ||\r\n          window.location.href.includes(\"recorrido\")\r\n            ? true\r\n            : keys\r\n                .toLowerCase()\r\n                .split(\", \")\r\n                .some((w) => userArea.toLowerCase().includes(w)))\r\n        ) {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  useEffect(() => {\r\n    if (turno && area) {\r\n      if (!reportData) {\r\n        sacardata();\r\n      }\r\n      validar();\r\n    }\r\n  }, [area, turno]);\r\n\r\n  useEffect(() => {\r\n    console.log(incumple);\r\n  }, [incumple]);\r\n  useEffect(() => {\r\n    if (!reportData) {\r\n      sacardata();\r\n    }\r\n  }, [reportData]);\r\n  useEffect(() => {\r\n    if (!reportes) {\r\n      sacarReportes();\r\n    } else {\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    setArea();\r\n    setCat();\r\n    setReportes();\r\n    setRepData();\r\n    setActiveR();\r\n    setActRubro();\r\n    sacarReportes();\r\n    sacardata();\r\n    var url = window.location.href;\r\n    if ((pagina && pagina.includes(\"recorrido\")) || url.includes(\"recorrido\")) {\r\n      setTipoRep(\"Reporte de Recorrido\");\r\n    } else {\r\n      setTipoRep(\"Reporte de Turno\");\r\n    }\r\n  }, [pagina]);\r\n  function handleArea(e, { value }) {\r\n    setCat();\r\n    setActiveR();\r\n    var filtro = sinFiltro.filter((x) => x[value] === \"Y\");\r\n    setReportes(filtro);\r\n    setArea(value);\r\n  }\r\n\r\n  function handleCategorias(e) {\r\n    setCat(e.target.name);\r\n    if (reportes) {\r\n      var chklist = reportes.filter((item) => item.Tipo === e.target.name);\r\n      setCheckList(chklist);\r\n      setReq(\r\n        chklist\r\n          .map((item) => item.Categoria)\r\n          .filter((value, index, self) => self.indexOf(value) === index)\r\n      );\r\n    }\r\n  }\r\n  function handleSubCat(e) {\r\n    setSubCat(e.target.name);\r\n    if (activeReq === e.target.name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(e.target.name);\r\n    }\r\n    setRubros(\r\n      reportes\r\n        .filter((item) => item.Categoria === e.target.name)\r\n        .map((item) => item.SubCategoria)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setActRubro();\r\n  }\r\n\r\n  function handleCheck(e) {\r\n    var item = e.target.name;\r\n    var chk = e.target.id;\r\n    console.log(chk);\r\n    setActRubro(item);\r\n    var cumple;\r\n    if (chk.includes(\"Y\")) {\r\n      cumple = \"N\";\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === item && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n                detalle: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    } else {\r\n      cumple = \"Y\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === item && x.Categoria === activeReq\r\n          ? { ...x, incumple: cumple }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function HandleTodos(e, { checked }) {\r\n    var cumple;\r\n    if (checked) {\r\n      cumple = \"N\";\r\n    } else {\r\n      cumple = \"\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.Categoria === activeReq ? { ...x, incumple: cumple } : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleOpcional(e, { rubro }) {\r\n    setActRubro(rubro);\r\n    var aplica;\r\n    if (\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.Categoria === activeReq && x.SubCategoria === rubro\r\n        )\r\n      ].opcional === \"N\"\r\n    ) {\r\n      aplica = \"Y\";\r\n    } else {\r\n      aplica = \"N\";\r\n\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === rubro && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === rubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              opcional: aplica,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleObservados(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              personas: value.toString(),\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDetalles(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              detalle: value,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n      <Dimmer\r\n        active={\r\n          status || estados.filter((x) => x.caption === status).length != 0\r\n        }\r\n        page\r\n      >\r\n        <Loader size=\"massive\">{status}</Loader>\r\n      </Dimmer>\r\n      {reportes && (\r\n        <Modal\r\n          onClose={() => setConfirmar(false)}\r\n          onOpen={() => setConfirmar(true)}\r\n          size=\"large\"\r\n          open={confirmar}\r\n        >\r\n          <Modal.Header>Confirmar Información</Modal.Header>\r\n          <Modal.Content>\r\n            {duplicado && (\r\n              <Label basic color=\"red\" size=\"huge\">\r\n                <Icon name=\"warning sign\" />\r\n                Se sobreescribirá los datos\r\n              </Label>\r\n            )}\r\n            <h1>\r\n              {tipoReporte.includes(\"Recorrido\")\r\n                ? tipoReporte\r\n                : tipoReporte + \" \" + turno}\r\n            </h1>\r\n            <h2>{fecha}</h2>\r\n            <h3>{user}</h3>\r\n            <h4>{area}</h4>\r\n          </Modal.Content>\r\n\r\n          <Divider />\r\n          <Modal.Content>\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <b>Incumplimientos: </b>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <List>\r\n                {reportes\r\n                  .filter((x) => x.incumple === \"Y\")\r\n                  .map((item, index) => {\r\n                    return (\r\n                      <List.Item>\r\n                        {index + 1}. {item.Tipo} - {item.Categoria} -{\" \"}\r\n                        {item.SubCategoria}\r\n                      </List.Item>\r\n                    );\r\n                  })}\r\n              </List>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length == 0 && (\r\n              <b>Sin Incidencias</b>\r\n            )}\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"green\"\r\n              onClick={() => {\r\n                registrar();\r\n              }}\r\n            >\r\n              <Icon name=\"check\"></Icon>Confirmar\r\n            </Button>\r\n            <Button\r\n              secondary\r\n              color=\"red\"\r\n              onClick={() => {\r\n                setConfirmar(false);\r\n              }}\r\n            >\r\n              <Icon name=\"x\"></Icon>Cancelar\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      )}\r\n      <Grid.Row>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Segment basic>\r\n            <Header>{tipoReporte}</Header>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Area*</b>\r\n            <Dropdown\r\n              style={{ textAlign: \"center\" }}\r\n              fluid\r\n              search\r\n              selection\r\n              placeholder=\"Area...\"\r\n              options={listaArea}\r\n              onChange={handleArea}\r\n            ></Dropdown>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {area && tipoReporte.includes(\"Turno\") && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Turno*</b>\r\n            <Form>\r\n              <Grid columns={3}>\r\n                <Grid.Row>\r\n                  {turnos.map((x) => {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Radio\r\n                          label={x}\r\n                          checked={turno === x}\r\n                          onChange={() => {\r\n                            setTurno(x);\r\n                          }}\r\n                        ></Radio>\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {duplicado && area && turno && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" />\r\n              Ud. ya ha registrado un {tipoReporte} para {area}{\" \"}\r\n              {tipoReporte === \"Reporte de Turno\" ? \"del turno \" + turno : \"\"}{\" \"}\r\n              para el dia {fecha}, en caso que guardes se sobreescribira el\r\n              reporte anterior\r\n            </Label>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      <Grid.Row columns={4}>\r\n        {cats &&\r\n          turno &&\r\n          area &&\r\n          cats.map((item) => {\r\n            return (\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor:\r\n                      categoria === item\r\n                        ? colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].activo\r\n                        : colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].inactivo,\r\n                    color: colores.filter((x) => {\r\n                      return x.categoria === item;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleCategorias}\r\n                >\r\n                  {width > breakpoint\r\n                    ? colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].caption\r\n                    : colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].short}\r\n                  <Popup\r\n                    content=\"Cantidad de incumplimiento\"\r\n                    trigger={\r\n                      <Label\r\n                        style={{ left: \"90%\" }}\r\n                        color={\r\n                          reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length > 0\r\n                            ? \"red\"\r\n                            : \"grey\"\r\n                        }\r\n                        floating\r\n                        circular\r\n                        size=\"mini\"\r\n                      >\r\n                        {reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length}\r\n                      </Label>\r\n                    }\r\n                  />\r\n                </Button>\r\n              </Grid.Column>\r\n            );\r\n          })}\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              disabled={\r\n                !area |\r\n                !turno |\r\n                (reportes &&\r\n                  reportes.filter(\r\n                    (x) =>\r\n                      x.incumple === \"Y\" &&\r\n                      (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n                      x.personas === \"\"\r\n                  ).length > 0) |\r\n                (reportes.filter((x) => x.incumple === \"\").length > 0)\r\n              }\r\n              fluid\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Guardar\"\r\n              onClick={() => setConfirmar(true)}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {reportes &&\r\n        reportes.filter(\r\n          (x) =>\r\n            x.incumple === \"Y\" &&\r\n            (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n            x.personas === \"\"\r\n        ).length > 0 && (\r\n          <Grid.Row>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" /> Campo obligatorio sin completar\r\n            </Label>\r\n          </Grid.Row>\r\n        )}\r\n      {categoria && area && reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment\r\n              fluid\r\n              basic\r\n              style={{\r\n                color: colores.filter((x) => {\r\n                  return x.categoria === categoria;\r\n                })[0].activo,\r\n              }}\r\n            >\r\n              <Header\r\n                onClick={() => {\r\n                  console.log(reportes);\r\n                  console.log(activeReq);\r\n                  console.log(activeRubro);\r\n                }}\r\n              >\r\n                {categoria}\r\n                {\" Cumplimiento \"}\r\n                {Math.ceil(\r\n                  (reportes.filter(\r\n                    (x) => x.Tipo === categoria && x.incumple === \"N\"\r\n                  ).length /\r\n                    reportes.filter((x) => x.Tipo === categoria).length) *\r\n                    100\r\n                )}\r\n                %\r\n              </Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n\r\n      {requerimientos &&\r\n        categoria &&\r\n        area &&\r\n        reportes &&\r\n        requerimientos.map((item, reqIdx) => {\r\n          return (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].inactivo,\r\n                    color: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleSubCat}\r\n                >\r\n                  {item}\r\n                </Button>\r\n                {activeReq === item && (\r\n                  <Segment basic>\r\n                    <Grid verticalAlign=\"left\">\r\n                      <Checkbox\r\n                        key={reqIdx + \"AllY\"}\r\n                        requerimiento={activeReq}\r\n                        label={\"Todos Cumplen\"}\r\n                        onChange={HandleTodos}\r\n                      />\r\n                    </Grid>\r\n                    <Grid verticalAlign=\"left\">\r\n                      {rubros &&\r\n                        rubros.map((item, idx) => {\r\n                          return (\r\n                            <Grid.Row>\r\n                              <Grid.Column>\r\n                                {idx + 1 + \". \" + item}\r\n                                <br />\r\n                                <Grid.Row columns={3}>\r\n                                  <Grid.Column>Cumple?</Grid.Column>\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"Y\"}\r\n                                      id={idx + \"Y\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"Si\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"N\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                  <br />\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"N\"}\r\n                                      id={idx + \"N\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"No\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"Y\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                </Grid.Row>\r\n                                {reportes.filter(\r\n                                  (x) =>\r\n                                    x.SubCategoria === item &&\r\n                                    x.Categoria === activeReq\r\n                                )[0].incumple === \"Y\" && (\r\n                                  <Segment color=\"red\">\r\n                                    <Grid>\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"N\" && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Checkbox\r\n                                                fluid\r\n                                                requerimiento={activeReq}\r\n                                                rubro={item}\r\n                                                label=\"Personas Observadas?\"\r\n                                                checked={\r\n                                                  reportes.filter(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )[0].opcional === \"Y\"\r\n                                                }\r\n                                                onChange={handleOpcional}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        (reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"Y\" ||\r\n                                          reportes.filter(\r\n                                            (x) =>\r\n                                              x.SubCategoria === item &&\r\n                                              x.Categoria === activeReq\r\n                                          )[0].opcional === \"Y\") && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <b>Personas Observadas*</b>\r\n                                              <Dropdown\r\n                                                fluid\r\n                                                multiple\r\n                                                search\r\n                                                selection\r\n                                                defaultValue={\r\n                                                  reportes[\r\n                                                    reportes.findIndex(\r\n                                                      (x) =>\r\n                                                        x.Categoria ===\r\n                                                          activeReq &&\r\n                                                        x.SubCategoria === item\r\n                                                    )\r\n                                                  ].personas\r\n                                                    ? reportes[\r\n                                                        reportes.findIndex(\r\n                                                          (x) =>\r\n                                                            x.Categoria ===\r\n                                                              activeReq &&\r\n                                                            x.SubCategoria ===\r\n                                                              item\r\n                                                        )\r\n                                                      ].personas.split(\",\")\r\n                                                    : \"\"\r\n                                                }\r\n                                                placeholder=\"Seleccionar Personas Involucradas...\"\r\n                                                options={personal}\r\n                                                onChange={handleObservados}\r\n                                              ></Dropdown>\r\n                                              {!reportes[\r\n                                                reportes.findIndex(\r\n                                                  (x) =>\r\n                                                    x.Categoria === activeReq &&\r\n                                                    x.SubCategoria === item\r\n                                                )\r\n                                              ].personas && (\r\n                                                <Label\r\n                                                  basic\r\n                                                  color=\"red\"\r\n                                                  pointing\r\n                                                >\r\n                                                  <Icon name=\"warning sign\" />\r\n                                                  Por favor elija al menos una\r\n                                                  persona\r\n                                                </Label>\r\n                                              )}\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Detalles</b>\r\n                                          <Form>\r\n                                            <TextArea\r\n                                              placeholder=\"Detelles...\"\r\n                                              defaultValue={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.Categoria ===\r\n                                                        activeReq &&\r\n                                                      x.SubCategoria === item\r\n                                                  )\r\n                                                ].detalle\r\n                                                  ? reportes[\r\n                                                      reportes.findIndex(\r\n                                                        (x) =>\r\n                                                          x.Categoria ===\r\n                                                            activeReq &&\r\n                                                          x.SubCategoria ===\r\n                                                            item\r\n                                                      )\r\n                                                    ].detalle\r\n                                                  : \"\"\r\n                                              }\r\n                                              onChange={handleDetalles}\r\n                                            ></TextArea>\r\n                                          </Form>\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Imagen</b>\r\n                                          <Input\r\n                                            icon=\"camera\"\r\n                                            iconPosition=\"left\"\r\n                                            type=\"file\"\r\n                                            fluid\r\n                                            rubro={item}\r\n                                            onChange={(e, { rubro }) => {\r\n                                              handleImageUpload(e, rubro);\r\n                                            }}\r\n                                          />\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview &&\r\n                                        percentage == 0 && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Button\r\n                                                id={\"btn\" + activeReq + item}\r\n                                                rubro={item}\r\n                                                content=\"Confirmar\"\r\n                                                style={{\r\n                                                  backgroundColor:\r\n                                                    colores.filter((item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    })[0].inactivo,\r\n                                                  color: colores.filter(\r\n                                                    (item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    }\r\n                                                  )[0].texto,\r\n                                                }}\r\n                                                onClick={(e, { rubro }) => {\r\n                                                  handleFireBaseUpload(rubro);\r\n                                                }}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Progress\r\n                                              percent={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? 100\r\n                                                  : percentage\r\n                                              }\r\n                                              indicating={\r\n                                                !reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url && percentage != 100\r\n                                              }\r\n                                              success={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? true\r\n                                                  : percentage == 100\r\n                                              }\r\n                                              progress\r\n                                              label={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url || percentage == 100\r\n                                                  ? \"Cargado\"\r\n                                                  : percentage == 0\r\n                                                  ? \"\"\r\n                                                  : \"Cargando\"\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Image\r\n                                              size=\"medium\"\r\n                                              src={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].preview\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                    </Grid>\r\n                                  </Segment>\r\n                                )}\r\n                              </Grid.Column>\r\n                            </Grid.Row>\r\n                          );\r\n                        })}\r\n                    </Grid>\r\n                  </Segment>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { Dropdown, Grid, Header, Input, Segment } from \"semantic-ui-react\";\r\n\r\nfunction Minuta() {\r\n  const { personal } = useContext(Contexto);\r\n  return (\r\n    <Grid stackable>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <Header content=\"Administración de Minuta\" />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input fluid type=\"date\"></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row columns={3}>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Participantes</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Minuta;\r\n","import React, { useState, useContext } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Home from \"./Home.js\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport userData from \"./employee.json\";\nimport Add from \"./images/fondo.jpg\";\nimport {\n  Header,\n  Menu,\n  Icon,\n  Modal,\n  Button,\n  Input,\n  Segment,\n  Checkbox,\n  Sidebar,\n  Dropdown,\n  Label,\n} from \"semantic-ui-react\";\nimport Observacion from \"./observacion\";\nimport Tareas from \"./tareas\";\nimport Consultas from \"./consulta\";\nimport Registrar from \"./registrar\";\nimport Categorias from \"./tipos\";\nimport Login from \"./Login\";\nimport Reporte from \"./Reporte\";\nimport { Contexto } from \"./Contexto\";\nimport Perfil from \"./profile\";\nimport Schedule from \"./schedule\";\nimport Recorrido from \"./recorridos\";\nimport ReporteDeTurno from \"./reporteDeTurno\";\nimport Minuta from \"./minuta\";\n\nfunction App() {\n  let iniciado = null;\n  let caption = \"Sign In\";\n  if (sessionStorage.getItem(\"user\")) {\n    iniciado = sessionStorage.user;\n    caption = \"Sign Out\";\n  } else if (localStorage.getItem(\"user\")) {\n    iniciado = localStorage.user;\n    caption = \"Sign Out\";\n  }\n  const {\n    [\"user\"]: [user, setUser],\n  } = useContext(Contexto);\n  const {\n    [\"pagina\"]: [pagina, setPagina],\n  } = useContext(Contexto);\n  const {\n    [\"width\"]: [width, setWidth],\n  } = useContext(Contexto);\n  const breakpoint = 620;\n  const {\n    [\"areas\"]: [areas, setAreas],\n  } = useContext(Contexto);\n  const [session, setSession] = useState(caption);\n  const [open, setOpen] = React.useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [activeItem, setActiveItem] = useState(\"\");\n  const [recordar, setRecordar] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  };\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userPassword\") {\n      setPassword(value);\n    }\n  };\n\n  const login = (event, password) => {\n    event.preventDefault();\n    var found = false;\n    for (var i = 0; i < userData.length; i++) {\n      if (userData[i].id === password) {\n        found = true;\n        setUser(userData[i].Nombre);\n        sessionStorage.user = userData[i].Nombre;\n        if (recordar) {\n          localStorage.user = userData[i].Nombre;\n        }\n        setSession(\"Sign Out\");\n        break;\n      }\n    }\n    if (!found) alert(`Usuario No encontrado`);\n  };\n\n  React.useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    // Return a function from the effect that removes the event listener\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  return (\n    <Router basename={\"/\"}>\n      <div style={{ padding: \"2%\", backgroundImage: `url(${Add})` }}>\n        <Menu color=\"red\" size=\"huge\">\n          <Menu.Item header as={Link} to=\"/home\">\n            <b style={{ color: \"red\" }}>Mi Cultura QSEB</b>\n          </Menu.Item>\n          {width < breakpoint ? (\n            <Menu.Item position=\"right\">\n              <Icon\n                size=\"large\"\n                name=\"bars\"\n                color=\"red\"\n                onClick={() => {\n                  setVisible(true);\n                }}\n              />\n            </Menu.Item>\n          ) : (\n            <>\n              <Dropdown item text=\"Reportes\">\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    text=\"Reporte de Turno\"\n                    as={Link}\n                    to={user ? \"/Reporte\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/Reporte\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Recorridos\"\n                    as={Link}\n                    to={user ? \"/recorrido\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/recorrido\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Programar Recorridos\"\n                    as={Link}\n                    to={user ? \"/programar\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/programar\");\n                    }}\n                  />\n                  <Dropdown.Item text=\"Actos Inseguros\" />\n                  <Dropdown.Item text=\"Condiciones Inseguras\" />\n                </Dropdown.Menu>\n              </Dropdown>\n              <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n              <Menu.Item position=\"right\">\n                {user ? (\n                  //<Icon\n                  //  size=\"large\"\n                  // name=\"user circle\"\n                  //  color={user ? \"green\" : \"black\"}\n                  //>\n                  <Button\n                    icon=\"user \"\n                    color=\"green\"\n                    circular\n                    as={Link}\n                    to=\"/perfil\"\n                  />\n                ) : (\n                  <Button\n                    content=\"Iniciar Sesion\"\n                    style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                    as=\"a\"\n                    href=\"/Login\"\n                  />\n                )}\n              </Menu.Item>\n            </>\n          )}\n        </Menu>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            onHide={() => setVisible(false)}\n            vertical\n            direction=\"right\"\n            visible={visible}\n            width=\"wide\"\n            color=\"red\"\n          >\n            <Menu.Item\n              name=\"Reporte\"\n              as={Link}\n              to={user ? \"/Reporte\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/Reporte\");\n                setAreas();\n              }}\n            >\n              Reporte de Turno\n            </Menu.Item>\n            <Menu.Item\n              name=\"Recorridos\"\n              as={Link}\n              to={user ? \"/recorrido\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/recorrido\");\n                setAreas();\n              }}\n            >\n              Recorridos\n            </Menu.Item>\n            <Menu.Item\n              name=\"ProgramarRecorridos\"\n              as={Link}\n              to={user ? \"/programar\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/programar\");\n              }}\n            >\n              Programar Recorridos\n            </Menu.Item>\n            <Menu.Item name=\"ActosI\">Actos Inseguros</Menu.Item>\n            <Menu.Item name=\"CondicionesI\">Condiciones Inseguras</Menu.Item>\n            <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n            {user && user.includes(\"Cheung\") && (\n              <Menu.Item\n                name=\"Minutas\"\n                as={Link}\n                to={user ? \"/minutas\" : \"/Login\"}\n                onClick={() => {\n                  setVisible(false);\n                  setPagina(\"/minutas\");\n                }}\n              >\n                Minutas\n              </Menu.Item>\n            )}\n            <Menu.Item\n              name=\"Perfil\"\n              as={Link}\n              to={user ? \"/perfil\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n              }}\n            >\n              {user ? (\n                user\n              ) : (\n                <Button\n                  content=\"Iniciar Sesion\"\n                  style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                  as={Link}\n                  onClick={() => {\n                    setVisible(false);\n                  }}\n                  to=\"/Login\"\n                />\n              )}\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher>\n            <Segment\n              style={{\n                backgroundColor: \"whitesmoke\",\n                height: \"90vh\",\n                overflowY: \"scroll\",\n              }}\n            >\n              <Switch>\n                <Route\n                  exact\n                  path=\"/home\"\n                  render={(props) => <Home {...props} user={user} />}\n                />\n                <Route\n                  path=\"/registros\"\n                  render={(props) => <Registrar {...props} user={user} />}\n                />\n                <Route\n                  path=\"/tareas\"\n                  render={(props) => <Tareas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observaciones\"\n                  render={(props) => <Consultas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observacion/:id\"\n                  render={(props) => <Observacion {...props} user={user} />}\n                />\n                <Route\n                  path=\"/Login\"\n                  render={(props) => <Login {...props} user={user} />}\n                />\n                <Route\n                  path=\"/reporte\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/recorrido\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/perfil\"\n                  render={(props) => <Perfil {...props} user={user} />}\n                />\n                <Route\n                  path=\"/minutas\"\n                  render={(props) => <Minuta {...props} user={user} />}\n                />\n                <Route\n                  path=\"/programar\"\n                  render={(props) => <Schedule {...props} user={user} />}\n                />\n                <Route\n                  path=\"/\"\n                  render={(props) => <Home {...props} user={user} />}\n                />\n              </Switch>\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ContextoProvider from \"./Contexto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextoProvider>\n      <App />\n    </ContextoProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}