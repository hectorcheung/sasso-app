{"version":3,"sources":["Contexto.js","Home.js","images/fondo.jpg","observacion.js","firebase/firebase.js","tareas.js","consulta.js","apikeys.js","registrar.js","tipos.js","Login.js","profile.js","schedule.js","reporteDeTurno.js","minuta.js","Dummy.png","desviaciones.js","App.js","serviceWorker.js","index.js"],"names":["Contexto","React","createContext","children","iniciado","sessionStorage","getItem","user","localStorage","useState","setUser","recordar","setRecordar","data","setData","data1","setdata1","data2","setdata2","desviaciones","setDesviaciones","misReq","setMisReq","misTareas","setMisTareas","areas","setAreas","grupoArea","setGrupoArea","reportData","setRepData","pagina","setPagina","window","innerWidth","width","setWidth","personal","j","userData","length","Nombre","push","key","text","value","color","categoria","activo","inactivo","texto","caption","short","gradient","cumple","contexto","colores","breakpoint","Provider","ExcelDateToJSDate","serial","utc_days","Math","floor","date_info","Date","fractional_day","total_seconds","seconds","hours","minutes","getFullYear","getMonth","getDate","FechaStringShort","fecha","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","Home","history","useHistory","setData1","setData2","data3","setData3","setActiveMenu","filtros","setFiltros","estados","name","status","setStatus","useContext","area","setArea","setCategoria","activePeriod","setActPeriod","turno","setTurno","tipoReporte","setTipoReporte","useFitText","fontSize","ref","tiposDeReportes","Array","from","_","index","rubros","categorias_idx","lista","i","title","today","inicioDeSemana","yesterday","setDate","wd","getDay","semana","turnos","periodos","setColores","handleSemana","anno","substring","mes","dia","d","weekday","sacardata","a","datas","creds","require","doc","GoogleSpreadsheet","useServiceAccountAuth","loadInfo","sheet","sheetsById","getRows","rows","columnCount","cols","headerValues","encabezado","lastr","loadCells","startRowIndex","endRowIndex","startColumnIndex","endColumnIndex","getCell","datas_areas","unique","Set","map","item","grupo","sort","unshift","forEach","x","findIndex","y","Area","Tipo","Incumple","total","arr1","filter","Reporte","FechaRecorrido","orden","reduce","r","o","get","Object","assign","set","Map","values","cumplimiento","isNaN","ceil","b","arr","incumplimientos","miData","misReqs","AreaResponsable","userArea","grupoAreaKey","toLowerCase","split","some","w","includes","misTasks","Responsable","HandleTurnos","e","target","id","valor","tipo","reporte","periodo","cat","lugar","t","numTurno","slice","reporteFiltrado","next","Turno","parseInt","arr2","Categoria","SubCategoria","incumple","arr3","cuentaPorUsuario","Usuario","Id","self","useEffect","Dimmer","active","page","Loader","Segment","basic","Header","as","icon","content","Grid","textAlign","verticalAlign","Row","Button","Group","inverted","style","borderRadius","onClick","Or","columns","Column","size","fluid","Icon","idx","padding","backgroundImage","borderStyle","borderWidth","borderColor","margin","Table","selectable","fixed","Body","Cell","rowSpan","toString","fill","console","log","List","divided","Item","avatar","Content","height","marginLeft","marginRight","float","class","visibility","href","display","overflow","toUpperCase","backgroundColor","opacity","className","marginTop","overflowY","max","apply","porcentaje","fontWeight","Estatus","Observacion","params","useParams","startDate","dd","mm","yyyy","hora","getHours","minutos","getMinutes","date","toISOString","ar","br","cr","dr","er","fr","gr","hr","ir","jr","kr","lr","mr","nr","or","pr","qr","rr","sr","tr","ur","vr","fecha_hora","nombre","rubro","observaciones","severidad","pac","fecha_cierre","responsable","anexo","confirmado","extension","nueva_fecha","detalle","anexo2","obsDetalle","persObservadas","aplica","personas","join","Container","Image","src","Description","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","auth","firestore","xltoDate","fechaStr","Tareas","myData","setMyData","myPac","setMyPac","activoID","setActivoID","totalPagina","setTotalPagina","setExtension","extDate","setExtDate","setDetalle","previewImg","saving","setSaving","preventDate","setPreventDate","pap","setpap","setImageAsFile","imgUrl","imageAsUrl","setImageAsUrl","setSubir","event","files","imageFile","reader","FileReader","preview","document","querySelector","onload","setAttribute","result","readAsDataURL","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","err","registrar","extendido","wr","xr","formula","saveUpdatedCells","alignItems","justifyContent","Pagination","defaultActivePage","ellipsisItem","firstItem","lastItem","prevItem","nextItem","totalPages","onPageChange","activePage","round","FechaString","Checkbox","disabled","label","checked","onChange","Input","type","defaultValue","Form","TextArea","detalle_pac","placeholder","alt","priceEls","querySelectorAll","innerText","click","iniciar","Consultas","dataFound","setDataFound","inicio","setInicio","final","setFinal","activeIndex","setActiveIndex","buscar","setBuscar","creador","setCreador","activeItem","setActiveItem","open","setOpen","keyA","keyB","Modal","onClose","onOpen","image","wrapped","observador","observado","Actions","Accordion","Title","titleProps","Label","Dropdown","multiple","search","selection","prevObject","Meta","Extra","Registros","dummyImg","setID","loading","setLoading","perfil","setPerfil","correo","setCorreo","step","setStep","setTipo","setCat","catData","setCatData","subCatData","setSubCatData","subCat","setSubCat","detalles","setDetalles","que","setQue","donde","setDonde","pacStep","setPacStep","involucrados","setInvolucrados","plan","setPlan","setStartDate","resp","setResp","segCat","useRef","segSubCat","setPreviewImg","imageAsFile","subir","guardar","setGuardar","confirmar","setConfirmar","setSeveridad","imgUpload","setImgUpload","Blob","archivoSelect","error","put","on","snapShot","child","getDownloadURL","then","fireBaseUrl","datas2","sheet2","rows2","handleTipoClick","current","focus","sacarAreas","datosUsuario","Perfil","datoResp","handleCatClick","handleStep","handleArea","UniqueID","now","addRow","Personas_Observadas","Detalle","Aplica","ids","notificar","codigo","templateParams","to_email","fecha_limite","qseb","observacion","imagen","registrado","emailjs","send","apiKeys","response","handleFireBaseUpload","header","actions","positive","labelPosition","Step","ordered","attached","unstackable","completed","Popup","trigger","circular","Ref","innerRef","Card","itemsPerRow","raised","ui","button","scrolling","clearable","handleImageUpload","Categorias","Login","password","setPassword","maxWidth","stacked","iconPosition","currentTarget","onChangeHandler","preventDefault","found","alert","login","Message","userInfo","floated","negative","removeItem","FechaStringLong","hour","minute","Schedule","persona","setPersona","setLugar","listaArea","setListaArea","setFecha","Fecha","delete","FechaProgramado","sleep","milliseconds","currentDate","ReporteDeTurno","reportes","setReportes","sinFiltro","setSinFiltro","setCheckList","cats","setCats","setRubros","activeRubro","setActRubro","requerimientos","setReq","activeReq","setActiveR","percentage","setPercentage","duplicado","setDuplicado","setTipoRep","existingItems","url","img","getElementById","archivo","uploadTask","sacarReportes","location","opcional","aplican","indexOf","uniqueID","FechaRegistro","PersonasObservadas","Imagen","handleCategorias","chklist","handleSubCat","handleCheck","chk","HandleTodos","handleOpcional","handleObservados","handleDetalles","handleWindowResize","addEventListener","removeEventListener","keys","element","validar","Divider","secondary","filtro","Radio","left","floating","Acto","reqIdx","requerimiento","pointing","Progress","percent","indicating","success","progress","Minuta","stackable","Desviaciones","estado","setEstado","Status","papName","setPapName","papDesc","setPapDesc","papAreaResp","setPapAreaResp","elem","classList","add","PAPDesc","PAPFechaCreado","save","closeNav","position","papdesc","remove","dummy","for","hidden","selected","App","visible","setVisible","basename","Add","Menu","Link","to","Sidebar","Pushable","animation","onHide","vertical","direction","Pusher","exact","path","render","props","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.af82b3a2.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport userData from \"./employee.json\";\r\n\r\nexport const Contexto = React.createContext(null);\r\n\r\nexport default ({ children }) => {\r\n  let iniciado = null;\r\n  if (sessionStorage.getItem(\"user\")) {\r\n    iniciado = sessionStorage.user;\r\n  } else if (localStorage.getItem(\"user\")) {\r\n    iniciado = localStorage.user;\r\n  }\r\n  const [user, setUser] = useState(iniciado);\r\n  const [recordar, setRecordar] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [data1, setdata1] = useState();\r\n  const [data2, setdata2] = useState();\r\n  const [desviaciones, setDesviaciones] = useState();\r\n  const [misReq, setMisReq] = useState();\r\n  const [misTareas, setMisTareas] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const [grupoArea, setGrupoArea] = useState();\r\n  const [reportData, setRepData] = useState();\r\n  const [pagina, setPagina] = useState();\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const personal = [];\r\n  for (var j = 0; j < userData.length; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  var breakpoint = 620;\r\n  const color = [\r\n    {\r\n      categoria: \"Calidad\",\r\n      activo: \"#FF5300\",\r\n      inactivo: \"#FF915C\",\r\n      texto: \"white\",\r\n      caption: \"Quality\",\r\n      short: \"Q\",\r\n      gradient: \"linear-gradient(to right,#fc4a1a,#f7b733)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Seguridad\",\r\n      activo: \"#5A0FC4\",\r\n      inactivo: \"#8857D1\",\r\n      texto: \"white\",\r\n      caption: \"Safety\",\r\n      short: \"S\",\r\n      gradient: \"linear-gradient(to right,#8E2DE2,#4A00E0)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Ambiente\",\r\n      activo: \"#00C37E\",\r\n      inactivo: \"#4ACFA0\",\r\n      texto: \"white\",\r\n      caption: \"Environment\",\r\n      short: \"E\",\r\n      gradient: \"linear-gradient(to right,#56ab2f,#a8e063)\",\r\n      cumple: 100,\r\n    },\r\n    {\r\n      categoria: \"Bioseguridad\",\r\n      activo: \"#FFE700\",\r\n      inactivo: \"#FFEF5C\",\r\n      texto: \"black\",\r\n      caption: \"BioS\",\r\n      short: \"B\",\r\n      gradient: \"linear-gradient(to right,#ffe259,#ffa751)\",\r\n      cumple: 100,\r\n    },\r\n  ];\r\n  const [colores, setColores] = useState(color);\r\n  const contexto = {\r\n    user: [user, setUser],\r\n    recordar: [recordar, setRecordar],\r\n    data: [data, setData],\r\n    areas: [areas, setAreas],\r\n    grupoArea: [grupoArea, setGrupoArea],\r\n    reportData: [reportData, setRepData],\r\n    personal: personal,\r\n    colores: [colores, setColores],\r\n    color: color,\r\n    pagina: [pagina, setPagina],\r\n    width: [width, setWidth],\r\n    data1: [data1, setdata1],\r\n    data2: [data2, setdata2],\r\n    desviaciones: [desviaciones, setDesviaciones],\r\n    misReq: [misReq, setMisReq],\r\n    misTareas: [misTareas, setMisTareas],\r\n    breakpoint: breakpoint,\r\n    userData: userData,\r\n  };\r\n\r\n  return <Contexto.Provider value={contexto}>{children}</Contexto.Provider>;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport useFitText from \"use-fit-text\";\r\nimport {\r\n  Dimmer,\r\n  Loader,\r\n  Grid,\r\n  Header,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  Segment,\r\n  Menu,\r\n  List,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  LabelSeries,\r\n  Hint,\r\n  HorizontalBarSeries,\r\n  DiscreteColorLegend,\r\n  RadialChart,\r\n} from \"react-vis\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Home({ user }) {\r\n  const history = useHistory();\r\n  const [data, setData] = useState();\r\n  const [data1, setData1] = useState(); // para detallar cada categoria\r\n  const [data2, setData2] = useState(); // para detallar cada categoria por area\r\n  const [data3, setData3] = useState(); // para detallar usuario que reportan\r\n  const [catId, setCatId] = useState();\r\n  const [detalleArea, setDArea] = useState();\r\n  const [activeMenu, setActiveMenu] = useState(\"ReporteT\");\r\n  const [hoy, setHoy] = useState();\r\n  const [ayer, setAyer] = useState();\r\n  const [mes, setMes] = useState();\r\n  const [filtros, setFiltros] = useState(false);\r\n  const [chartData, setChartData] = useState();\r\n  const [chartMes, setChartMes] = useState();\r\n  const [chartRubros, setChartRubros] = useState();\r\n  const [mesAnterior, setMesAnterior] = useState();\r\n  const [aplicable, setAplicable] = useState();\r\n  const [prueba, setPrueba] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const [areas, setAreas] = useState();\r\n  const {\r\n    [\"grupoArea\"]: [grupoArea, setGrupoArea],\r\n  } = useContext(Contexto);\r\n  const [area, setArea] = useState(\"Todas\");\r\n  const [categoria, setCategoria] = useState();\r\n  const [leyendaMes, setLeyendaMes] = useState();\r\n  const [leyenda, setLeyenda] = useState();\r\n  const [activeIndex, setActIdx] = useState();\r\n  const [activePeriod, setActPeriod] = useState(\"Esta Semana\");\r\n  const [turno, setTurno] = useState(\"Todos\");\r\n  const [tipoReporte, setTipoReporte] = useState(\"Reporte de Turno\");\r\n  const { fontSize, ref } = useFitText();\r\n  //Fechas\r\n  //fechas estan erradas hay que corregir\r\n  const dias = Array.from({ length: 31 }, (_, index) => index + 1);\r\n  const meses = Array.from({ length: 12 }, (_, index) => index + 1);\r\n  const tiposDeReportes = [\"Reporte de Turno\", \"Reporte de Recorrido\"];\r\n  const rubros = [\"Seguridad\", \"Calidad\", \"Ambiental\", \"Bioseguridad\"];\r\n  const categorias_idx = [\"Q\", \"S\", \"E\", \"B\"];\r\n  const lista = [];\r\n  for (var i = 0; i < rubros.length; i++) {\r\n    lista.push({ title: rubros[i] });\r\n  }\r\n  let today = new Date();\r\n  let inicioDeSemana = new Date();\r\n  let yesterday = new Date(today);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  let wd = today.getDay();\r\n  wd === 0 ? (wd = 7) : (wd = wd);\r\n  //Fechas\r\n  const [dataSemana, setDS] = useState();\r\n  const [semana, setSemana] = useState(\r\n    FechaStringShort(inicioDeSemana.setDate(inicioDeSemana.getDate() - wd + 1))\r\n  );\r\n  const turnos = [\"Todos\", \"Turno 1\", \"Turno 2\", \"Turno 3\"];\r\n  const periodos = [\"Esta Semana\", \"Este Mes\", \"Hoy\", \"Ayer\", \"Seleccionar\"];\r\n  const [periodo, setPeriodo] = useState();\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"desviaciones\"]: [desviaciones, setDesviaciones],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"misReq\"]: [misReq, setMisReq],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"misTareas\"]: [misTareas, setMisTareas],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const { color: color } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  function handleSemana(fecha) {\r\n    var anno = fecha.substring(0, 4);\r\n    var mes = fecha.substring(5, 7);\r\n    var dia = fecha.substring(8, 10);\r\n    var d = new Date(anno, mes - 1, dia);\r\n    let weekday = d.getDay();\r\n    weekday === 0 ? (weekday = 7) : (weekday = weekday);\r\n    d.setDate(d.getDate() - weekday + 1);\r\n    return FechaStringShort(d);\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    setStatus(estados[1].caption);\r\n    let data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    let sheet = doc.sheetsById[1249329599];\r\n    let rows = await sheet.getRows();\r\n    let cols = await sheet.columnCount;\r\n    let encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    //AREAS\r\n    sheet = doc.sheetsById[1705686078];\r\n    rows = await sheet.getRows();\r\n    cols = await sheet.columnCount;\r\n    encabezado = await sheet.headerValues;\r\n    let datas_areas = [];\r\n    lastr = rows.length + 1;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas_areas.push(data);\r\n    }\r\n    setAreas(datas_areas);\r\n    const unique = [...new Set(datas_areas.map((item) => item.grupo))];\r\n    unique.sort();\r\n    unique.unshift(\"Todas\");\r\n    setGrupoArea(unique);\r\n    //AREAS\r\n    datas.forEach((x) => {\r\n      x.grupo =\r\n        datas_areas[datas_areas.findIndex((y) => y.name === x.Area)].grupo;\r\n      x.short = colores[colores.findIndex((y) => y.categoria === x.Tipo)].short;\r\n      x.activo =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].activo;\r\n      x.inactivo =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].inactivo;\r\n      x.gradient =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].gradient;\r\n      x.caption =\r\n        colores[colores.findIndex((y) => y.categoria === x.Tipo)].caption;\r\n      x.texto = colores[colores.findIndex((y) => y.categoria === x.Tipo)].texto;\r\n      if (x.Incumple === \"Y\") {\r\n        x.cumple = 0;\r\n      } else {\r\n        x.cumple = 1;\r\n      }\r\n      x.total = 1;\r\n    });\r\n    let arr1 = datas\r\n      .filter(\r\n        (item) =>\r\n          item.Reporte === tipoReporte &&\r\n          handleSemana(\r\n            FechaStringShort(ExcelDateToJSDate(item.FechaRecorrido))\r\n          ) == semana\r\n      )\r\n      .map(\r\n        ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        }) => ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        })\r\n      );\r\n\r\n    arr1.forEach((x) => {\r\n      x.categoria = x.Tipo;\r\n      delete x.Tipo;\r\n      x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n    });\r\n    arr1 = [\r\n      ...arr1\r\n        .reduce((r, o) => {\r\n          const key = o.categoria;\r\n          const item =\r\n            r.get(key) ||\r\n            Object.assign({}, o, {\r\n              cumple: 0,\r\n              total: 0,\r\n            });\r\n\r\n          item.cumple += o.cumple;\r\n          item.total += o.total;\r\n          return r.set(key, item);\r\n        }, new Map())\r\n        .values(),\r\n    ];\r\n    arr1.forEach((x) => {\r\n      var cumplimiento = isNaN(x.cumple / x.total)\r\n        ? \"-\"\r\n        : Math.ceil((x.cumple / x.total) * 100) + \"%\";\r\n      x.cumplimiento = cumplimiento;\r\n    });\r\n    arr1.sort((a, b) => a.orden - b.orden);\r\n\r\n    setData(datas);\r\n    let arr = [...colores];\r\n    arr.forEach((x) => {\r\n      let cumplimiento =\r\n        arr1.filter((item) => item.categoria === x.categoria).length != 0\r\n          ? arr1.filter((item) => item.categoria === x.categoria)[0]\r\n              .cumplimiento\r\n          : \"-\";\r\n      x.cumplimiento = cumplimiento;\r\n    });\r\n    setColores(arr);\r\n    let incumplimientos = datas.filter((x) => x.Incumple === \"Y\");\r\n    let miData = incumplimientos;\r\n    let misReqs = incumplimientos.filter((x) => x.AreaResponsable !== null);\r\n    let misTasks;\r\n    if (user) {\r\n      var userArea = userData.filter((x) => x.Nombre === user)[0].Area;\r\n      let grupoAreaKey = datas_areas.filter((y) =>\r\n        y[\"keys\"]\r\n          .toLowerCase()\r\n          .split(\", \")\r\n          .some((w) => userArea.toLowerCase().includes(w))\r\n      );\r\n      if (!userArea.toLowerCase().includes(\"gerencia\")) {\r\n        miData = miData.filter((x) => x.grupo === grupoAreaKey[0].grupo);\r\n      }\r\n      if (!userArea.toLowerCase().includes(\"gerencia\")) {\r\n        misReqs = incumplimientos.filter(\r\n          (x) => x.AreaResponsable === grupoAreaKey[0].grupo\r\n        );\r\n      }\r\n      misTasks = incumplimientos.filter((x) => x.Responsable === user);\r\n    }\r\n    setDesviaciones(miData);\r\n    setMisReq(misReqs);\r\n    misTasks && setMisTareas(misTasks);\r\n    setStatus();\r\n  };\r\n\r\n  function HandleTurnos(e) {\r\n    const { name, id } = e.target;\r\n    var valor = e.target.id;\r\n    var tipo = e.target.name;\r\n    if (!tipo) {\r\n      tipo = name;\r\n    }\r\n    if (!valor) {\r\n      valor = id;\r\n    }\r\n    if (!tipo) {\r\n      if (valor.includes(\"Reporte\")) {\r\n        tipo = \"Reporte\";\r\n      }\r\n    }\r\n    if (tipo) {\r\n      let reporte = tipoReporte;\r\n      let periodo = activePeriod;\r\n      let cat = categoria;\r\n      let lugar = area;\r\n      let t = turno;\r\n      let numTurno = t.slice(-1);\r\n      setCategoria();\r\n      if (tipo.includes(\"Turno\")) {\r\n        setTurno(valor);\r\n        numTurno = valor.slice(-1);\r\n        t = valor;\r\n      } else if (tipo.includes(\"Reporte\") | tipo.includes(\"clipboard\")) {\r\n        setActiveMenu(tipo);\r\n        setTipoReporte(valor);\r\n        reporte = valor;\r\n      } else if (tipo.includes(\"Area\")) {\r\n        setArea(valor);\r\n        lugar = valor;\r\n      } else if (tipo.includes(\"btn\")) {\r\n        setCategoria(valor);\r\n        cat = valor;\r\n      } else {\r\n        setActPeriod(valor);\r\n        periodo = valor;\r\n      }\r\n      const reporteFiltrado = data.filter(\r\n        (next) =>\r\n          next.Reporte === reporte &&\r\n          (periodo === \"Esta Semana\"\r\n            ? handleSemana(\r\n                FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido))\r\n              ) == semana\r\n            : periodo === \"Este Mes\"\r\n            ? FechaStringShort(\r\n                ExcelDateToJSDate(next.FechaRecorrido)\r\n              ).substring(5, 7) === FechaStringShort(today).substring(5, 7)\r\n            : periodo === \"Hoy\"\r\n            ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n              FechaStringShort(today)\r\n            : periodo === \"Ayer\"\r\n            ? FechaStringShort(ExcelDateToJSDate(next.FechaRecorrido)) ===\r\n              FechaStringShort(yesterday)\r\n            : true) &&\r\n          (reporte.includes(\"Turno\") && t !== \"Todos\"\r\n            ? next.Turno === parseInt(numTurno)\r\n            : true) &&\r\n          (lugar !== \"Todas\" ? next.grupo === lugar : true)\r\n      );\r\n      let arr1 = reporteFiltrado.map(\r\n        ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        }) => ({\r\n          Tipo,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n        })\r\n      );\r\n      arr1.forEach((x) => {\r\n        x.categoria = x.Tipo;\r\n        delete x.Tipo;\r\n        x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n      });\r\n      arr1 = [\r\n        ...arr1\r\n          .reduce((r, o) => {\r\n            const key = o.categoria;\r\n            const item =\r\n              r.get(key) ||\r\n              Object.assign({}, o, {\r\n                cumple: 0,\r\n                total: 0,\r\n              });\r\n\r\n            item.cumple += o.cumple;\r\n            item.total += o.total;\r\n            return r.set(key, item);\r\n          }, new Map())\r\n          .values(),\r\n      ];\r\n      arr1.forEach((x) => {\r\n        var cumplimiento = isNaN(x.cumple / x.total)\r\n          ? \"-\"\r\n          : Math.ceil((x.cumple / x.total) * 100) + \"%\";\r\n        x.cumplimiento = cumplimiento;\r\n      });\r\n      arr1.sort((a, b) => a.orden - b.orden);\r\n      let arr = [...colores];\r\n      arr.forEach((x) => {\r\n        let cumplimiento =\r\n          arr1.filter((item) => item.categoria === x.categoria).length != 0\r\n            ? arr1.filter((item) => item.categoria === x.categoria)[0]\r\n                .cumplimiento\r\n            : \"-\";\r\n        x.cumplimiento = cumplimiento;\r\n      });\r\n      setColores(arr);\r\n      if (tipo.includes(\"btn\") || cat) {\r\n        let arr2 = reporteFiltrado\r\n          .filter((item) => item.Tipo == valor && item.Incumple == \"Y\")\r\n          .map(\r\n            ({\r\n              Tipo,\r\n              Categoria,\r\n              SubCategoria,\r\n              Area,\r\n              short,\r\n              caption,\r\n              texto,\r\n              activo,\r\n              inactivo,\r\n              gradient,\r\n            }) => ({\r\n              Tipo,\r\n              Categoria,\r\n              SubCategoria,\r\n              Area,\r\n              short,\r\n              caption,\r\n              texto,\r\n              activo,\r\n              inactivo,\r\n              gradient,\r\n            })\r\n          );\r\n        arr2.forEach((x) => {\r\n          x.incumple = 1;\r\n          x.orden = categorias_idx.findIndex((y) => y === x.short);\r\n        });\r\n        let arr3 = arr2.map(({ Area, ...remainingAttrs }) => remainingAttrs);\r\n        arr3 = [\r\n          ...arr3\r\n            .reduce((r, o) => {\r\n              const key = o.Tipo + \"-\" + o.Categoria;\r\n              const item =\r\n                r.get(key) ||\r\n                Object.assign({}, o, {\r\n                  incumple: 0,\r\n                });\r\n\r\n              item.incumple += o.incumple;\r\n              return r.set(key, item);\r\n            }, new Map())\r\n            .values(),\r\n        ];\r\n        arr2 = [\r\n          ...arr2\r\n            .reduce((r, o) => {\r\n              const key = o.Tipo + \"-\" + o.Categoria + \"-\" + o.SubCategoria;\r\n              const item =\r\n                r.get(key) ||\r\n                Object.assign({}, o, {\r\n                  incumple: 0,\r\n                });\r\n\r\n              item.incumple += o.incumple;\r\n              return r.set(key, item);\r\n            }, new Map())\r\n            .values(),\r\n        ];\r\n        arr3.sort((a, b) => b.incumple - a.incumple);\r\n        arr2.sort((a, b) => b.incumple - a.incumple);\r\n        setData1(arr3);\r\n        setData2(arr2);\r\n      }\r\n      let registrosPorUsuario = reporteFiltrado.map(\r\n        ({\r\n          Tipo,\r\n          Usuario,\r\n          Id,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n          Reporte,\r\n        }) => ({\r\n          Tipo,\r\n          Usuario,\r\n          Id,\r\n          short,\r\n          caption,\r\n          texto,\r\n          activo,\r\n          inactivo,\r\n          gradient,\r\n          cumple,\r\n          total,\r\n          Reporte,\r\n        })\r\n      );\r\n      let cuentaPorUsuario = registrosPorUsuario.map(\r\n        ({ Usuario, Id, Reporte }) => ({\r\n          Usuario,\r\n          Id,\r\n          Reporte,\r\n        })\r\n      );\r\n      cuentaPorUsuario = cuentaPorUsuario.filter(\r\n        (value, index, self) =>\r\n          index ===\r\n          self.findIndex(\r\n            (t) =>\r\n              t.Usuario === value.Usuario &&\r\n              t.Id === value.Id &&\r\n              t.Reporte === value.Reporte\r\n          )\r\n      );\r\n      setData3(cuentaPorUsuario);\r\n    }\r\n  }\r\n  const arr = [\"Q\", \"S\", \"E\", \"B\"];\r\n  const arr1 = [\"Top\", \"Status\", \"Cumplimiento\"];\r\n  const filtros2 = [\"Tipo\", \"Fecha\", \"Area\", \"Turno\"];\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dimmer\r\n        active={\r\n          status || estados.filter((x) => x.caption === status).length != 0\r\n        }\r\n        page\r\n      >\r\n        <Loader>{status}</Loader>\r\n      </Dimmer>\r\n      {width <= breakpoint ? (\r\n        <>\r\n          <Segment basic>\r\n            <Header as=\"h2\" icon=\"dashboard\" color=\"red\" content=\"Dashboard\" />\r\n          </Segment>\r\n\r\n          <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n            <Grid.Row>\r\n              <Header>\r\n                <Button.Group>\r\n                  <Button\r\n                    id=\"Reporte de Turno\"\r\n                    color=\"red\"\r\n                    name=\"ReporteT\"\r\n                    inverted={tipoReporte !== \"Reporte de Turno\"}\r\n                    style={{ borderRadius: \"15px\" }}\r\n                    onClick={HandleTurnos}\r\n                  >\r\n                    Reporte de Turno\r\n                  </Button>\r\n                  <Button.Or color=\"red\" text={\"o\"} />\r\n                  <Button\r\n                    id=\"Reporte de Recorrido\"\r\n                    color=\"red\"\r\n                    name=\"ReporteR\"\r\n                    inverted={tipoReporte !== \"Reporte de Recorrido\"}\r\n                    style={{ borderRadius: \"15px\" }}\r\n                    onClick={HandleTurnos}\r\n                  >\r\n                    Reporte de Recorrido\r\n                  </Button>\r\n                </Button.Group>\r\n              </Header>\r\n            </Grid.Row>\r\n            <Grid.Row columns={4}>\r\n              <Grid.Column>\r\n                <Button\r\n                  size=\"mini\"\r\n                  basic\r\n                  style={{ borderRadius: \"15px\" }}\r\n                  fluid\r\n                  onClick={() => {\r\n                    filtros ? setFiltros(false) : setFiltros(true);\r\n                  }}\r\n                >\r\n                  <Icon name=\"arrow down\"></Icon> Filtros\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column></Grid.Column>\r\n              <Grid.Column></Grid.Column>\r\n              <Grid.Column></Grid.Column>\r\n            </Grid.Row>\r\n            {filtros && (\r\n              <>\r\n                <b>Periodo</b>\r\n                <Grid.Row>\r\n                  {periodos.map((x, idx) => {\r\n                    return (\r\n                      <Grid.Column width={4} style={{ padding: \"2px\" }}>\r\n                        <Button\r\n                          size=\"tiny\"\r\n                          color=\"red\"\r\n                          inverted\r\n                          content={x}\r\n                          name={\"Periodo\" + idx}\r\n                          id={x}\r\n                          active={activePeriod === x}\r\n                          fluid\r\n                          style={{ borderRadius: \"15px\" }}\r\n                          onClick={HandleTurnos}\r\n                        />\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n                <b>Area</b>\r\n                <Grid.Row>\r\n                  {grupoArea.map((x, idx) => {\r\n                    return (\r\n                      <Grid.Column width={5} style={{ padding: \"2px\" }}>\r\n                        <Button\r\n                          size=\"tiny\"\r\n                          color=\"red\"\r\n                          inverted\r\n                          content={x}\r\n                          name={\"Area\" + idx}\r\n                          id={x}\r\n                          active={area === x}\r\n                          fluid\r\n                          style={{ borderRadius: \"15px\" }}\r\n                          onClick={HandleTurnos}\r\n                        />\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n                {tipoReporte === \"Reporte de Turno\" && <b>Turno</b>}\r\n                <Grid.Row columns=\"equal\">\r\n                  {tipoReporte === \"Reporte de Turno\" &&\r\n                    turnos.map((x, idx) => {\r\n                      return (\r\n                        <Grid.Column>\r\n                          <Button\r\n                            size=\"small\"\r\n                            color=\"red\"\r\n                            inverted\r\n                            content={x}\r\n                            name={\"Turno\" + idx}\r\n                            id={x}\r\n                            active={turno === x}\r\n                            fluid\r\n                            style={{ borderRadius: \"15px\" }}\r\n                            onClick={HandleTurnos}\r\n                          />\r\n                        </Grid.Column>\r\n                      );\r\n                    })}\r\n                </Grid.Row>\r\n              </>\r\n            )}\r\n            {width <= breakpoint && data && (\r\n              <Grid.Row columns={2}>\r\n                {colores.map((x, idx) => {\r\n                  if (idx < 2) {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Button\r\n                          id={x.categoria}\r\n                          name={\"btn\" + x.short}\r\n                          onClick={HandleTurnos}\r\n                          fluid\r\n                          style={{\r\n                            backgroundImage: x.gradient,\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          <h1\r\n                            id={x.categoria}\r\n                            name={\"btn_title\" + x.short}\r\n                            style={{\r\n                              color: x.texto,\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {x.cumplimiento}\r\n                          </h1>\r\n                          <p\r\n                            id={x.categoria}\r\n                            name={\"btn_text\" + x.short}\r\n                            style={{\r\n                              color: x.texto,\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {x.categoria}\r\n                          </p>\r\n                        </Button>\r\n                      </Grid.Column>\r\n                    );\r\n                  }\r\n                })}\r\n              </Grid.Row>\r\n            )}\r\n            {width <= breakpoint && data && (\r\n              <Grid.Row columns={2}>\r\n                {colores.map((x, idx) => {\r\n                  if (idx >= 2) {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Button\r\n                          id={x.categoria}\r\n                          name={\"btn\" + x.short}\r\n                          onClick={HandleTurnos}\r\n                          fluid\r\n                          style={{\r\n                            backgroundImage: x.gradient,\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          <h1\r\n                            id={x.categoria}\r\n                            name={\"btn_title\" + x.short}\r\n                            style={{\r\n                              color: x.texto,\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {x.cumplimiento}\r\n                          </h1>\r\n                          <p\r\n                            id={x.categoria}\r\n                            name={\"btn_text\" + x.short}\r\n                            style={{\r\n                              color: x.texto,\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {x.categoria}\r\n                          </p>\r\n                        </Button>\r\n                      </Grid.Column>\r\n                    );\r\n                  }\r\n                })}\r\n              </Grid.Row>\r\n            )}\r\n            {width > breakpoint && data && (\r\n              <Grid.Row columns={4}>\r\n                {colores.map((x, idx) => {\r\n                  return (\r\n                    <Grid.Column>\r\n                      <Button\r\n                        id={x.categoria}\r\n                        name={\"btn\" + x.short}\r\n                        onClick={HandleTurnos}\r\n                        fluid\r\n                        style={{\r\n                          backgroundImage: x.gradient,\r\n                          color: x.texto,\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        <h1\r\n                          id={x.categoria}\r\n                          name={\"btn_title\" + x.short}\r\n                          style={{\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          {x.cumplimiento}\r\n                        </h1>\r\n                        <p\r\n                          id={x.categoria}\r\n                          name={\"btn_text\" + x.short}\r\n                          style={{\r\n                            color: x.texto,\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        >\r\n                          {x.categoria}\r\n                        </p>\r\n                      </Button>\r\n                    </Grid.Column>\r\n                  );\r\n                })}\r\n              </Grid.Row>\r\n            )}\r\n          </Grid>\r\n          <br />\r\n          {categoria && data1.filter((x) => x.Tipo === categoria).length != 0 && (\r\n            <Segment\r\n              basic\r\n              style={{\r\n                borderStyle: \"solid\",\r\n                borderWidth: \"2px\",\r\n                borderColor: data1[0].inactivo,\r\n                borderRadius: \"15px\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <Grid>\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    {data1 && data2 && <Header as=\"h1\">{categoria}</Header>}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row columns={1} padding>\r\n                  <Grid.Column>\r\n                    {categoria === \"Bioseguridad\" &&\r\n                      data2.filter((x) => x.Tipo === categoria).length != 0 && (\r\n                        <Table selectable fixed>\r\n                          <Table.Body>\r\n                            <Table.Row>\r\n                              <Table.Cell\r\n                                rowSpan={data2\r\n                                  .filter((x) => x.Tipo === categoria)\r\n                                  .length.toString()}\r\n                              >\r\n                                <Header as=\"h2\">Bioseguridad</Header>\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {\r\n                                  data2.filter((x) => x.Tipo === categoria)[0]\r\n                                    .SubCategoria\r\n                                }\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {data2.filter((x) => x.Tipo === categoria)[0]\r\n                                  .incumple &&\r\n                                  Array(\r\n                                    data2.filter((x) => x.Tipo === categoria)[0]\r\n                                      .incumple\r\n                                  )\r\n                                    .fill(0)\r\n                                    .map((_, i) => (\r\n                                      <Icon name=\"x\" color=\"red\"></Icon>\r\n                                    ))}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                            {data2\r\n                              .filter((x) => x.Tipo === categoria)\r\n                              .map((x, idx) => {\r\n                                if (idx > 0) {\r\n                                  return (\r\n                                    <Table.Row>\r\n                                      <Table.Cell>{x.SubCategoria}</Table.Cell>\r\n                                      <Table.Cell>\r\n                                        {x.incumple &&\r\n                                          Array(x.incumple)\r\n                                            .fill(0)\r\n                                            .map((_, i) => (\r\n                                              <Icon name=\"x\" color=\"red\"></Icon>\r\n                                            ))}\r\n                                      </Table.Cell>\r\n                                    </Table.Row>\r\n                                  );\r\n                                }\r\n                              })}\r\n                          </Table.Body>\r\n                        </Table>\r\n                      )}\r\n                    {data1 && categoria !== \"Bioseguridad\" && (\r\n                      <Table fixed selectable>\r\n                        <Table.Body>\r\n                          {data1 &&\r\n                            categoria !== \"Bioseguridad\" &&\r\n                            data1.map((x) => {\r\n                              return (\r\n                                <>\r\n                                  <Table.Row\r\n                                    onClick={() => {\r\n                                      console.log(data2);\r\n                                    }}\r\n                                  >\r\n                                    <Table.Cell>\r\n                                      <Header as=\"h2\">{x.Categoria}</Header>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>\r\n                                      {x.incumple &&\r\n                                        Array(x.incumple)\r\n                                          .fill(0)\r\n                                          .map((_, i) => (\r\n                                            <Icon name=\"x\" color=\"red\"></Icon>\r\n                                          ))}\r\n                                    </Table.Cell>\r\n                                  </Table.Row>\r\n                                </>\r\n                              );\r\n                            })}\r\n                        </Table.Body>\r\n                      </Table>\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Segment>\r\n          )}\r\n          {data3 && data3.length > 0 && (\r\n            <Segment>\r\n              <Header>Registros por Usuario</Header>\r\n              <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                {[\r\n                  ...new Map(\r\n                    data3.map((item) => [item[\"Usuario\"], item])\r\n                  ).values(),\r\n                ].map((x) => {\r\n                  return (\r\n                    <List.Item>\r\n                      <Icon avatar name=\"user circle outline\" size=\"big\" />\r\n                      <List.Content>{x.Usuario}</List.Content>\r\n                      <List.Content>\r\n                        {tipoReporte}:{\" \"}\r\n                        {\r\n                          data3.filter(\r\n                            (item) =>\r\n                              item.Usuario === x.Usuario &&\r\n                              item.Reporte === tipoReporte\r\n                          ).length\r\n                        }\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Segment>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div style={{ width: \"100%\", height: \"100%\" }}>\r\n          <div\r\n            style={{\r\n              width: \"98%\",\r\n              marginLeft: \"1%\",\r\n              marginRight: \"1%\",\r\n              padding: \"1%\",\r\n              height: \"10%\",\r\n            }}\r\n          >\r\n            <Header as=\"h2\" icon=\"dashboard\" content=\"Dashboard\" color=\"red\" />\r\n          </div>\r\n          <div\r\n            style={{\r\n              float: \"left\",\r\n              width: \"64.5%\",\r\n              marginLeft: \"1%\",\r\n              marginRight: \"0.5%\",\r\n              height: \"90%\",\r\n            }}\r\n          >\r\n            <div style={{ width: \"100%\", height: \"33%\" }}>\r\n              {filtros2.map((x) => {\r\n                return (\r\n                  <div\r\n                    class=\"dropdown\"\r\n                    style={{\r\n                      visibility:\r\n                        x === \"Turno\" && tipoReporte === \"Reporte de Recorrido\"\r\n                          ? \"hidden\"\r\n                          : \"\",\r\n                    }}\r\n                  >\r\n                    <button class=\"dropbtn\">\r\n                      {x === \"Fecha\"\r\n                        ? activePeriod === \"Seleccionar\"\r\n                          ? x\r\n                          : activePeriod\r\n                        : x === \"Area\"\r\n                        ? area !== \"Todas\"\r\n                          ? area\r\n                          : \"Areas - Todas\"\r\n                        : x === \"Turno\"\r\n                        ? turno === \"Todos\"\r\n                          ? \"Turno - Todos\"\r\n                          : turno\r\n                        : x === \"Tipo\"\r\n                        ? tipoReporte\r\n                        : \"\"}\r\n                    </button>\r\n                    <div class=\"dropdown-content\">\r\n                      {x === \"Tipo\" &&\r\n                        tiposDeReportes.map((y, idx) => {\r\n                          return (\r\n                            <a\r\n                              href=\"#\"\r\n                              name={idx === 0 ? \"ReporteT\" : \"ReporteR\"}\r\n                              id={y}\r\n                              onClick={HandleTurnos}\r\n                            >\r\n                              {y}\r\n                            </a>\r\n                          );\r\n                        })}\r\n                      {x === \"Fecha\" &&\r\n                        periodos.map((y, idx) => {\r\n                          return (\r\n                            <a\r\n                              href=\"#\"\r\n                              name={\"Periodo\" + idx}\r\n                              id={y}\r\n                              onClick={HandleTurnos}\r\n                            >\r\n                              {y}\r\n                            </a>\r\n                          );\r\n                        })}\r\n                      {x === \"Area\" &&\r\n                        grupoArea &&\r\n                        grupoArea.map((y, idx) => {\r\n                          return (\r\n                            <a\r\n                              href=\"#\"\r\n                              name={\"Area\" + idx}\r\n                              id={y}\r\n                              onClick={HandleTurnos}\r\n                            >\r\n                              {y}\r\n                            </a>\r\n                          );\r\n                        })}\r\n                      {x === \"Turno\" &&\r\n                        turnos &&\r\n                        turnos.map((y, idx) => {\r\n                          return (\r\n                            <a\r\n                              href=\"#\"\r\n                              name={\"Turno\" + idx}\r\n                              id={y}\r\n                              onClick={HandleTurnos}\r\n                            >\r\n                              {y}\r\n                            </a>\r\n                          );\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {color.map((x) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      width: \"23%\",\r\n                      backgroundImage: x.gradient,\r\n                      height: \"58%\",\r\n                      margin: \"1%\",\r\n                      padding: \"1.5%\",\r\n                      borderRadius: \"5%\",\r\n                      display: \"inline-block\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <h1\r\n                      style={{\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        color: x.texto,\r\n                      }}\r\n                    >\r\n                      {colores\r\n                        ? colores[\r\n                            colores.findIndex(\r\n                              (y) => y.categoria === x.categoria\r\n                            )\r\n                          ].cumplimiento\r\n                        : \"-\"}\r\n                    </h1>\r\n                    <h2\r\n                      ref={ref}\r\n                      style={{\r\n                        fontSize,\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        color: x.texto,\r\n                      }}\r\n                    >\r\n                      {x.categoria.toUpperCase()}\r\n                    </h2>\r\n                  </div>\r\n                );\r\n              })}\r\n              {color.map((x) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      width: \"23%\",\r\n                      backgroundColor:\r\n                        categoria === x.categoria ? x.activo : x.inactivo,\r\n                      color: x.texto,\r\n                      opacity: categoria === x.categoria ? \"1\" : \"0.5\",\r\n                      height: \"15%\",\r\n                      marginLeft: \"1%\",\r\n                      marginRight: \"1%\",\r\n                      padding: \"1%\",\r\n                      borderRadius: \"5%\",\r\n                      textAlign: \"center\",\r\n                      display: \"inline-block\",\r\n                    }}\r\n                  >\r\n                    <a\r\n                      className=\"categoria\"\r\n                      id={x.categoria}\r\n                      name={\"btn\" + x.short}\r\n                      onClick={HandleTurnos}\r\n                      href=\"#\"\r\n                      style={{ color: x.texto, width: \"100%\" }}\r\n                    >\r\n                      Detalle\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                console.log(data1, data2, data3);\r\n              }}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"66%\",\r\n                marginTop: \"1%\",\r\n                backgroundColor: \"rgba(192 , 192, 192, 0.2)\",\r\n                borderRadius: \"2%\",\r\n                padding: \"1.5%\",\r\n              }}\r\n            >\r\n              {categoria && (\r\n                <div\r\n                  className=\"tooltip\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"10%\",\r\n                    padding: \"1.5%\",\r\n                    fontSize: \"100%\",\r\n                  }}\r\n                >\r\n                  {categoria.toUpperCase()}\r\n                  <i class=\"material-icons\">help_outline</i>\r\n                  <span class=\"tooltiptext\">\r\n                    Cantidad de registro por rubro\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <div\r\n                style={{\r\n                  height: \"89%\",\r\n                  marginTop: \"1%\",\r\n                  width: \"100%\",\r\n                  backgroundColor: \"white\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                {data2 &&\r\n                  data2.map((x) => {\r\n                    var max = Math.max.apply(\r\n                      Math,\r\n                      data2.map(function (o) {\r\n                        return o.incumple;\r\n                      })\r\n                    );\r\n                    var porcentaje = \"\" + (x.incumple / max) * 100 + \"%\";\r\n                    return (\r\n                      <div className=\"rubros\">\r\n                        <div\r\n                          style={{\r\n                            borderRadius: \"5px\",\r\n                            height: \"30%\",\r\n                            backgroundColor: \"brown\",\r\n                            width: porcentaje,\r\n                            textAlign: \"center\",\r\n                            color: \"white\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n                          {x.incumple}\r\n                        </div>\r\n                        <div className=\"nombres\">{x.SubCategoria}</div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              float: \"left\",\r\n              width: \"32.5%\",\r\n              marginLeft: \"0.5%\",\r\n              marginRight: \"1%\",\r\n              height: \"90%\",\r\n              padding: \"1%\",\r\n              borderRadius: \"2%\",\r\n              backgroundColor: \"rgba(192 , 192, 192, 0.2)\",\r\n            }}\r\n          >\r\n            <div className=\"bloqArriba\">\r\n              <Header style={{ padding: \"1%\", height: \"15%\" }}>\r\n                Registros por Usuarios <Icon name=\"user\"></Icon>\r\n              </Header>\r\n              <div className=\"datosUsuarios\">\r\n                {data3 &&\r\n                  [\r\n                    ...new Map(\r\n                      data3.map((item) => [item[\"Usuario\"], item])\r\n                    ).values(),\r\n                  ].map((x) => {\r\n                    return (\r\n                      <div className=\"cartaUsuario\">\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {x.Usuario}{\" \"}\r\n                          {\r\n                            data3.filter(\r\n                              (item) =>\r\n                                item.Usuario === x.Usuario &&\r\n                                item.Reporte === tipoReporte\r\n                            ).length\r\n                          }\r\n                        </div>\r\n                        <div className=\"reportes\">\r\n                          {data3\r\n                            .filter((y) => y.Usuario === x.Usuario)\r\n                            .map((y, idx) => {\r\n                              return (\r\n                                <a\r\n                                  href=\"#\"\r\n                                  id={idx + \"id\"}\r\n                                  onClick={HandleTurnos}\r\n                                >\r\n                                  {y.Id}\r\n                                </a>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div className=\"bloqAbajo\">\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"12.5px\",\r\n                }}\r\n                onClick={() => {\r\n                  console.log(desviaciones);\r\n                }}\r\n              >\r\n                <h2>Desviaciones y Requerimientos</h2>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  backgroundColor: \"whitesmoke\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <table className=\"solicitudes\">\r\n                  <tr>\r\n                    <th>Estatus</th>\r\n                    <th>Desviaciones</th>\r\n                    <th>Requerimientos</th>\r\n                    <th>Mis Tareas</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Sin Acción</td>\r\n                    <td\r\n                      onClick={() => {\r\n                        history.push(\"/desviaciones\");\r\n                      }}\r\n                    >\r\n                      {desviaciones\r\n                        ? desviaciones.filter((x) => x.Estatus === null).length\r\n                        : 0}\r\n                    </td>\r\n                    <td>\r\n                      {misReq\r\n                        ? misReq.filter((x) => x.Estatus === null).length\r\n                        : 0}\r\n                    </td>\r\n                    <td>\r\n                      {misTareas\r\n                        ? misTareas.filter((x) => x.Estatus === null).length\r\n                        : 0}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>En Proceso</td>\r\n                    <td\r\n                      onClick={() => {\r\n                        history.push(\"/desviaciones\");\r\n                      }}\r\n                    >\r\n                      {desviaciones\r\n                        ? desviaciones.filter(\r\n                            (x) => x.Estatus !== null && x.Estatus !== \"Cerrado\"\r\n                          ).length\r\n                        : 0}\r\n                    </td>\r\n                    <td>\r\n                      {misReq\r\n                        ? misReq.filter(\r\n                            (x) => x.Estatus !== null && x.Estatus !== \"Cerrado\"\r\n                          ).length\r\n                        : 0}\r\n                    </td>\r\n                    <td>\r\n                      {misTareas\r\n                        ? misTareas.filter(\r\n                            (x) => x.Estatus !== null && x.Estatus !== \"Cerrado\"\r\n                          ).length\r\n                        : 0}\r\n                    </td>\r\n                  </tr>\r\n                  <tr\r\n                    onClick={() => {\r\n                      history.push(\"/desviaciones\");\r\n                    }}\r\n                  >\r\n                    <td>Cerrados</td>\r\n                    <td>\r\n                      {desviaciones\r\n                        ? desviaciones.filter((x) => x.Estatus === \"Cerrado\")\r\n                            .length\r\n                        : 0}\r\n                    </td>\r\n                    <td>\r\n                      {misReq\r\n                        ? misReq.filter((x) => x.Estatus === \"Cerrado\").length\r\n                        : 0}\r\n                    </td>\r\n                    <td>\r\n                      {misTareas\r\n                        ? misTareas.filter((x) => x.Estatus === \"Cerrado\")\r\n                            .length\r\n                        : 0}\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/fondo.bff34455.jpg\";","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Card,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Observacion({ user }) {\r\n  let params = useParams();\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas = datas.filter((item) => {\r\n      return item.id === params.id;\r\n    });\r\n\r\n    if (datas.length > 1) {\r\n      var personas = datas.map((e) => e.persObservadas).join(\", \");\r\n      console.log(personas);\r\n      datas[0].persObservadas = personas;\r\n      datas = datas.slice(0, 1);\r\n    }\r\n\r\n    setData(datas);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    console.log(params);\r\n    !data && sacardata();\r\n    data && console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {data && (\r\n        <Segment\r\n          onClick={() => {\r\n            console.log(data);\r\n          }}\r\n        >\r\n          <Item>\r\n            <Item.Image size=\"medium\" src={data[0].anexo} />\r\n\r\n            <Item.Content>\r\n              <Item.Header as=\"h2\">\r\n                {data[0].rubro + \" - \" + data[0].categoria}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                <p>\r\n                  <b>Detalle: </b> {data[0].observaciones}\r\n                  {data[0].obsDetalle && \" : \" + data[0].obsDetalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(data[0].fecha).toISOString().slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {data[0].area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {data[0].nombre}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {data[0].persObservadas}\r\n                </p>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Observacion;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD2qP-hydl9iaoxa0FO07FG5KDu9d3bGuA\",\r\n  authDomain: \"sasso-test-285920.firebaseapp.com\",\r\n  databaseURL: \"https://sasso-test-285920.firebaseio.com\",\r\n  projectId: \"sasso-test-285920\",\r\n  storageBucket: \"sasso-test-285920.appspot.com\",\r\n  messagingSenderId: \"191632707331\",\r\n  appId: \"1:191632707331:web:954ff5c5c38d8dcae4e336\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst getUserDocument = async (uid) => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching user\", error);\r\n  }\r\n};\r\nconst generateUserDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n  if (!snapshot.exists) {\r\n    const { Nombre, Correo, Apellido } = user;\r\n    try {\r\n      await userRef.set({\r\n        Nombre,\r\n        Correo,\r\n        Apellido,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user document\", error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\nexport {\r\n  storage,\r\n  auth,\r\n  firestore,\r\n  generateUserDocument,\r\n  getUserDocument,\r\n  firebase as default,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Statistic,\r\n  Divider,\r\n  Dimmer,\r\n  Loader,\r\n  Pagination,\r\n  Card,\r\n  Label,\r\n  Checkbox,\r\n  TextArea,\r\n  List,\r\n  Header,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${da}-${mo}-${ye}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction xltoDate(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo}-${da}`;\r\n  if (mo < 10) {\r\n    fechaStr = `${ye}-0${mo}-${da}`;\r\n  }\r\n\r\n  return fechaStr;\r\n}\r\n\r\nfunction Tareas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [data, setData] = useState(\"\");\r\n  const [myData, setMyData] = useState(\"\");\r\n  const [myPac, setMyPac] = useState(\"\");\r\n  const [activoID, setActivoID] = useState(\"\");\r\n  const [pagina, setPagina] = useState(1);\r\n  const [totalPagina, setTotalPagina] = useState(0);\r\n  const [extension, setExtension] = useState(\"N\");\r\n  const [extDate, setExtDate] = useState(date);\r\n  const [detalle, setDetalle] = useState(\"\");\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [saving, setSaving] = useState(false);\r\n  const [preventDate, setPreventDate] = useState(date);\r\n  const [pap, setpap] = useState(\"\");\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      reader.onload = function (e) {\r\n        preview.setAttribute(\"src\", e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      preview = document.querySelector(\"#blah\");\r\n      preview.setAttribute(\"src\", \"\");\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  const handleFireBaseUpload = (e) => {\r\n    if (subir) {\r\n      e.preventDefault();\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      }\r\n      const uploadTask = storage\r\n        .ref(`/images/${imageAsFile.name}`)\r\n        .put(imageAsFile);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapShot) => {\r\n          //takes a snap shot of the process as it is happening\r\n          console.log(snapShot);\r\n        },\r\n        (err) => {\r\n          //catches the errors\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          // gets the functions from storage refences the image storage in firebase by the children\r\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n          storage\r\n            .ref(\"images\")\r\n            .child(imageAsFile.name)\r\n            .getDownloadURL()\r\n            .then((fireBaseUrl) => {\r\n              setImageAsUrl((prevObject) => ({\r\n                ...prevObject,\r\n                imgUrl: fireBaseUrl,\r\n              }));\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.responsable === user;\r\n      })\r\n    );\r\n    setMyPac(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      })\r\n    );\r\n    setTotalPagina(\r\n      datas.filter((item) => {\r\n        return item.responsable === user && item.status !== \"Completado\";\r\n      }).length\r\n    );\r\n    try {\r\n      setActivoID(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].id\r\n      );\r\n      setExtension(\r\n        datas.filter((item) => {\r\n          return item.responsable === user && item.status !== \"Completado\";\r\n        })[0].extension\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setSaving(true);\r\n    let extendido = extension;\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (sheet.getCell(j, 18).value === activoID) {\r\n        const mr = sheet.getCell(j, 12);\r\n        const or = sheet.getCell(j, 14);\r\n        const pr = sheet.getCell(j, 15);\r\n        const qr = sheet.getCell(j, 16);\r\n        const rr = sheet.getCell(j, 17);\r\n        const wr = sheet.getCell(j, 22);\r\n        const xr = sheet.getCell(j, 23);\r\n        mr.value = \"Pendiente Aprobacion\";\r\n        or.value = extendido;\r\n        if (extDate) {\r\n          pr.formula =\r\n            \"=date(\" +\r\n            extDate.substring(0, 4) +\r\n            \",\" +\r\n            extDate.substring(5, 7) +\r\n            \",\" +\r\n            extDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (pap) {\r\n          wr.value = pap;\r\n        }\r\n        if (preventDate) {\r\n          xr.formula =\r\n            \"=date(\" +\r\n            preventDate.substring(0, 4) +\r\n            \",\" +\r\n            preventDate.substring(5, 7) +\r\n            \",\" +\r\n            preventDate.substring(8, 10) +\r\n            \")\";\r\n        }\r\n        if (detalle) {\r\n          qr.value = detalle;\r\n        }\r\n        if (imageAsUrl.imgUrl) {\r\n          rr.value = imageAsUrl.imgUrl;\r\n        }\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n    setSaving(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container>\r\n      <Dimmer active={!data || saving} page>\r\n        <Loader>{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      {user ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Pagination\r\n              defaultActivePage={1}\r\n              ellipsisItem={{\r\n                content: <Icon name=\"ellipsis horizontal\" />,\r\n                icon: true,\r\n              }}\r\n              firstItem={{\r\n                content: <Icon name=\"angle double left\" />,\r\n                icon: true,\r\n              }}\r\n              lastItem={{\r\n                content: <Icon name=\"angle double right\" />,\r\n                icon: true,\r\n              }}\r\n              prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\r\n              nextItem={{ content: <Icon name=\"angle right\" />, icon: true }}\r\n              totalPages={totalPagina}\r\n              onPageChange={(e, { activePage }) => {\r\n                setPagina(activePage);\r\n                setActivoID(myPac[activePage - 1].id);\r\n                setSubir(false);\r\n                setImageAsUrl(\"\");\r\n                setImageAsFile(\"\");\r\n                setExtension(myPac[activePage - 1].extension);\r\n                setExtension(date);\r\n                var preview = document.querySelector(\"#blah\");\r\n                preview.setAttribute(\"src\", \"\");\r\n                var archivoSelect = document.querySelector(\"#anexoImg\");\r\n                archivoSelect.value = \"\";\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <Segment>\r\n            <Header>Tareas</Header>\r\n            <List>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" />\r\n                <List.Content>\r\n                  <b>{myData.length} Acciones Totales</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"red\" />\r\n                <List.Content>\r\n                  <b>{myPac.length} Acciones Pendientes</b>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"exclamation circle\" color=\"green\" />\r\n                <List.Content>\r\n                  <b>\r\n                    {100 - Math.round((myPac.length / myData.length) * 100, 2)}{\" \"}\r\n                    % completada\r\n                  </b>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Segment>\r\n          <Segment\r\n            style={{\r\n              height: \"60vh\",\r\n              overflowY: \"scroll\",\r\n            }}\r\n          >\r\n            {myPac && myPac.length !== 0 ? (\r\n              <>\r\n                <Header>{myPac[pagina - 1].rubro.toUpperCase()}</Header>\r\n                <p>\r\n                  {myPac[pagina - 1].categoria}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].area}\r\n                  <br></br>\r\n                  Registrado por: {myPac[pagina - 1].nombre}\r\n                  <br></br>\r\n                  Hallazgo: {myPac[pagina - 1].observaciones}\r\n                </p>\r\n                <Header>Acciones Tomadas</Header>\r\n                <p>{myPac[pagina - 1].pac}</p>\r\n                <p>\r\n                  Fecha Limite Inicial:{\" \"}\r\n                  {FechaString(\r\n                    ExcelDateToJSDate(myPac[pagina - 1].fecha_cierre)\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" ? (\r\n                    <Checkbox\r\n                      disabled\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      checked\r\n                    />\r\n                  ) : (\r\n                    <Checkbox\r\n                      label={{ children: \"Extender Fecha Limite \" }}\r\n                      onChange={() => {\r\n                        if (extension !== \"N\") {\r\n                          setExtension(\"N\");\r\n                        } else {\r\n                          setExtension(\"Y\");\r\n                        }\r\n                      }}\r\n                      checked={extension === \"Y\"}\r\n                    />\r\n                  )}\r\n                  <br></br>\r\n                  {myPac[pagina - 1].extension === \"Y\" || extension === \"Y\" ? (\r\n                    <Input\r\n                      size=\"mini\"\r\n                      type=\"date\"\r\n                      onChange={(e) => {\r\n                        setExtDate(e.target.value);\r\n                      }}\r\n                      defaultValue={\r\n                        myPac[pagina - 1].extension === \"Y\"\r\n                          ? xltoDate(\r\n                              ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                            )\r\n                          : date\r\n                      }\r\n                    />\r\n                  ) : null}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Detalle Adicional\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"pacDetail\"\r\n                      name=\"planDetail\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      value={myPac[pagina - 1].detalle_pac}\r\n                      onChange={(e, { value }) => {\r\n                        setDetalle(value);\r\n                      }}\r\n                      placeholder=\"Detalle adicional de la acción tomada...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Acciones Preventivas</Header>\r\n                  <Input\r\n                    size=\"mini\"\r\n                    type=\"date\"\r\n                    onChange={(e) => {\r\n                      setPreventDate(e.target.value);\r\n                    }}\r\n                    defaultValue={\r\n                      myPac[pagina - 1].extension === \"Y\"\r\n                        ? xltoDate(\r\n                            ExcelDateToJSDate(myPac[pagina - 1].nueva_fecha)\r\n                          )\r\n                        : date\r\n                    }\r\n                  />\r\n                  <br></br>\r\n                  <br></br>\r\n                  <Form>\r\n                    <TextArea\r\n                      id=\"ppreventiva\"\r\n                      name=\"ppreventiva\"\r\n                      rows=\"4\"\r\n                      cols=\"60\"\r\n                      onChange={(e, { value }) => {\r\n                        setpap(value);\r\n                      }}\r\n                      placeholder=\"Detalle de acción preventiva...\"\r\n                    />\r\n                  </Form>\r\n                </p>\r\n                <p>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={handleImageUpload}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </p>\r\n\r\n                <div className=\"ui two buttons\">\r\n                  <Button color=\"yellow\" onClick={registrar}>\r\n                    Guardar\r\n                  </Button>\r\n                  <Button color=\"green\">Solicitar Aprobacion</Button>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Tareas;\r\n","import React, { useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Dimmer,\r\n  Loader,\r\n  Accordion,\r\n  Label,\r\n  Item,\r\n  Modal,\r\n  Image,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction Consultas({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [creador, setCreador] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function sacardata() {\r\n    setBuscar(true);\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 2);\r\n      const dr = sheet.getCell(j, 3);\r\n      const er = sheet.getCell(j, 4);\r\n      const fr = sheet.getCell(j, 5);\r\n      const gr = sheet.getCell(j, 6);\r\n      const hr = sheet.getCell(j, 7);\r\n      const ir = sheet.getCell(j, 8);\r\n      const jr = sheet.getCell(j, 9);\r\n      const kr = sheet.getCell(j, 10);\r\n      const lr = sheet.getCell(j, 11);\r\n      const mr = sheet.getCell(j, 12);\r\n      const nr = sheet.getCell(j, 13);\r\n      const or = sheet.getCell(j, 14);\r\n      const pr = sheet.getCell(j, 15);\r\n      const qr = sheet.getCell(j, 16);\r\n      const rr = sheet.getCell(j, 17);\r\n      const sr = sheet.getCell(j, 18);\r\n      const tr = sheet.getCell(j, 19);\r\n      const ur = sheet.getCell(j, 20);\r\n      const vr = sheet.getCell(j, 21);\r\n      datas.push({\r\n        id: sr.value,\r\n        fecha: ar.value,\r\n        fecha_hora: br.value,\r\n        nombre: cr.value,\r\n        area: dr.value,\r\n        rubro: er.value,\r\n        categoria: fr.value,\r\n        observaciones: gr.value,\r\n        severidad: hr.value,\r\n        pac: ir.value,\r\n        fecha_cierre: jr.value,\r\n        responsable: kr.value,\r\n        anexo: lr.value,\r\n        status: mr.value,\r\n        confirmado: nr.value,\r\n        extension: or.value,\r\n        nueva_fecha: pr.value,\r\n        detalle: qr.value,\r\n        anexo2: rr.value,\r\n        obsDetalle: tr.value,\r\n        persObservadas: ur.value,\r\n        aplica: vr.value,\r\n      });\r\n    }\r\n    datas.sort(function (a, b) {\r\n      var keyA = a.fecha_hora,\r\n        keyB = b.fecha_hora;\r\n      // Compare the 2 dates\r\n      if (keyA > keyB) return -1;\r\n      if (keyA < keyB) return 1;\r\n      return 0;\r\n    });\r\n    setData(datas);\r\n    setMyData(\r\n      datas.filter((item) => {\r\n        return item.nombre === user;\r\n      })\r\n    );\r\n    setDataFound(\r\n      datas.filter((item) => {\r\n        if (creador.length !== 0) {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final &&\r\n            creador.includes(item.nombre)\r\n          );\r\n        } else {\r\n          return (\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) >=\r\n              inicio &&\r\n            ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10) <= final\r\n          );\r\n        }\r\n      })\r\n    );\r\n    setBuscar(false);\r\n    setActiveIndex(-1);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    !data && sacardata();\r\n    data && console.log(myData);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Segment>\r\n        {activeItem && (\r\n          <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n          >\r\n            <Modal.Header>{activeItem.observaciones}</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={activeItem.anexo} wrapped />\r\n              <Modal.Description>\r\n                <Header>{activeItem.rubro + \"-\" + activeItem.categoria}</Header>\r\n                <p>\r\n                  <b>Detalle: </b> {activeItem.detalle}\r\n                </p>\r\n                <p>\r\n                  <b>Fecha: </b>{\" \"}\r\n                  {ExcelDateToJSDate(activeItem.fecha)\r\n                    .toISOString()\r\n                    .slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  <b>Area: </b> {activeItem.area}\r\n                </p>\r\n                <p>\r\n                  <b>Registrado por: </b> {activeItem.observador}\r\n                </p>\r\n                <p>\r\n                  <b>Persona(s) Observada(s): </b> {activeItem.observado}\r\n                </p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"green\" onClick={() => setOpen(false)}>\r\n                OK\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        )}\r\n\r\n        <Dimmer active={buscar} page>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n        <Accordion fluid>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            Filtros\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            <>\r\n              <Input\r\n                label=\"Desde\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setInicio(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value > final && setFinal(e.target.value);\r\n                }}\r\n                value={inicio}\r\n                defaultValue={inicio}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Input\r\n                label=\"Hasta\"\r\n                size=\"mini\"\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setFinal(e.target.value);\r\n                  console.log(e.target.value);\r\n                  e.target.value < inicio && setInicio(e.target.value);\r\n                }}\r\n                value={final}\r\n                defaultValue={final}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Label>Registrado por </Label>\r\n              <Dropdown\r\n                fluid\r\n                multiple\r\n                search\r\n                selection\r\n                value={creador}\r\n                placeholder=\"Registrado por...\"\r\n                options={personal}\r\n                onChange={(e, { value }) => {\r\n                  setCreador(value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Button onClick={sacardata}>Buscar</Button>\r\n            </>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n      {dataFound && (\r\n        <Segment>\r\n          <Item.Group divided>\r\n            {dataFound.map((item) => (\r\n              <Item key={item.id}>\r\n                <Item.Content>\r\n                  <Item.Header\r\n                    as=\"a\"\r\n                    href={\"/observacion/\" + item.id}\r\n                    onClick={(e) => {\r\n                      setActiveItem((prevObject) => ({\r\n                        ...prevObject,\r\n                        id: item.id,\r\n                        rubro: item.rubro,\r\n                        categoria: item.categoria,\r\n                        observaciones: item.observaciones,\r\n                        detalle: item.obsDetalle,\r\n                        area: item.area,\r\n                        fecha: item.fecha,\r\n                        observador: item.nombre,\r\n                        observado: item.persObservadas,\r\n                        anexo: item.anexo ? item.anexo : dummyImg,\r\n                      }));\r\n                      //setOpen(true);\r\n                    }}\r\n                  >\r\n                    {item.rubro + \" - \" + item.categoria}\r\n                  </Item.Header>\r\n                  <Item.Meta>{item.observaciones}</Item.Meta>\r\n                  <Item.Description>\r\n                    {item.area +\r\n                      \" - \" +\r\n                      ExcelDateToJSDate(item.fecha).toISOString().slice(0, 10)}\r\n                  </Item.Description>\r\n                  <Item.Extra>Observador:{item.nombre}</Item.Extra>\r\n                  <Item.Extra>\r\n                    Personas Observadas:{item.persObservadas}\r\n                  </Item.Extra>\r\n                  <Item.Extra>{item.obsDetalle}</Item.Extra>\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n          </Item.Group>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Consultas;\r\n","export default {\r\n  USER_ID: \"user_1s8Jx16sWB2djLHeed4yw\",\r\n  TEMPLATE_ID: \"template_oc6ugfi\",\r\n};\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction FechaString(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Registros({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [idUnico, setID] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n  const [imgUpload, setImgUpload] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/images/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"images\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n                setImgUpload(fireBaseUrl);\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells(\"A1:E\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet.getCell(j, 0);\r\n      const br = sheet.getCell(j, 1);\r\n      const cr = sheet.getCell(j, 4);\r\n      datas.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        src: cr.value,\r\n      });\r\n    }\r\n    setData(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  const handleTipoClick = (e) => {\r\n    if (tipo === e.target.name) {\r\n      setTipo(\"\");\r\n    } else {\r\n      setTipo(e.target.name);\r\n      console.log(e.target.name);\r\n      segCat.current.focus();\r\n      setCat(\"\");\r\n      setSubCat(\"\");\r\n      setSubCatData(\"\");\r\n    }\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    }\r\n  }, [areas]);\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  const handleCatClick = (e, { name }) => {\r\n    setSubCat(\"\");\r\n    setSubCatData(\"\");\r\n    setCat(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleStep = (e, { name }) => {\r\n    setStep(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleArea = (e, { name }) => {\r\n    setArea(name);\r\n    console.log(name);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setConfirmar(true);\r\n  };\r\n\r\n  async function registrar() {\r\n    setLoading(true);\r\n    let wd = today.getDay();\r\n    wd === 0 ? (wd = 7) : (wd = wd);\r\n    let semana = FechaString(today.setDate(today.getDate() - wd + 1));\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const aplica = perfil === \"Registros\" ? \"Y\" : \"N\";\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[0];\r\n    var j;\r\n    var UniqueID =\r\n      Date.now() +\r\n      user.substring(0, 2) +\r\n      tipo.substring(0, 1) +\r\n      subCat.substring(0, 2);\r\n    setID(UniqueID);\r\n    console.log(UniqueID);\r\n    for (j = 0; j < involucrados.length; j++) {\r\n      await sheet.addRow({\r\n        fecha: date,\r\n        fecha_hora: fecha,\r\n        nombre: creador,\r\n        area: area,\r\n        rubro: tipo,\r\n        categoria: cat,\r\n        observaciones: subCat,\r\n        pac: plan,\r\n        responsable: resp,\r\n        fecha_cierre: startDate,\r\n        anexo: imgUpload,\r\n        status: \"Pendiente\",\r\n        Personas_Observadas: involucrados[j],\r\n        id: UniqueID,\r\n        severidad: severidad,\r\n        Detalle: detalles,\r\n        Aplica: aplica,\r\n        semana: semana,\r\n        ids: 1 / involucrados.length,\r\n      });\r\n    }\r\n    if (correo !== \"No Aplica\") {\r\n      notificar(UniqueID);\r\n    }\r\n    setTipo(\"\");\r\n    setCat(\"\");\r\n    setSubCat(\"\");\r\n    setDetalles(\"\");\r\n    setInvolucrados([]);\r\n    setArea(\"\");\r\n    setPlan(\"\");\r\n    setResp(\"\");\r\n    setImageAsUrl(\"\");\r\n    setPreviewImg(\"\");\r\n    setLoading(false);\r\n    setConfirmar(false);\r\n    setSaving(true);\r\n  }\r\n\r\n  function notificar(codigo) {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      detalles: detalles,\r\n      imagen: \"https://www.miculturaqse507.com/sasso-app/observacion/\" + codigo,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n    setID(\"\");\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (subir) {\r\n      handleFireBaseUpload();\r\n    }\r\n  }, [subir]);\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div>\r\n          <Dimmer active={loading} page>\r\n            <Loader size=\"massive\">{data ? \"Saving\" : \"Loading\"}</Loader>\r\n          </Dimmer>\r\n          <Modal\r\n            header=\"Listo!\"\r\n            content=\"Su observación ha sido registrado exitosamente.\"\r\n            open={saving}\r\n            actions={[\r\n              {\r\n                key: \"done\",\r\n                content: \"Done\",\r\n                positive: true,\r\n                onClick: () => {\r\n                  setSaving(false);\r\n                  history.push(\"/observaciones\");\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <Modal\r\n            onClose={() => setConfirmar(false)}\r\n            onOpen={() => setConfirmar(true)}\r\n            open={confirmar}\r\n          >\r\n            <Modal.Header>Confirmar Información</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image size=\"medium\" src={previewImg} wrapped />\r\n              <Modal.Description>\r\n                <Header>Observacion de {tipo}</Header>\r\n                <p>{cat}</p>\r\n                <p>{subCat}</p>\r\n                <p>Severidad:{severidad}</p>\r\n                <Header>Persona(s) Observada(s)</Header>\r\n                {involucrados.map((item) => (\r\n                  <li>{item}</li>\r\n                ))}\r\n                <Header>Area</Header>\r\n                <p>{area}</p>\r\n                <Header>PLAN DE ACCION</Header>\r\n                <p>{plan}</p>\r\n                <p>Responsable: {resp}</p>\r\n                <p>Fecha de Cierre Previsto: {startDate}</p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"black\" onClick={() => setConfirmar(false)}>\r\n                Cancelar\r\n              </Button>\r\n              <Button\r\n                content=\"Confirmar\"\r\n                labelPosition=\"right\"\r\n                icon=\"checkmark\"\r\n                onClick={() => {\r\n                  registrar();\r\n                }}\r\n                positive\r\n              />\r\n            </Modal.Actions>\r\n          </Modal>\r\n          {guardar ? (\r\n            <Button\r\n              fluid\r\n              color=\"green\"\r\n              content=\"Guardar\"\r\n              onClick={handleSave}\r\n            ></Button>\r\n          ) : null}\r\n          <Step.Group ordered size=\"mini\" attached=\"top\" unstackable>\r\n            <Step\r\n              active={step === \"Que\"}\r\n              name=\"Que\"\r\n              onClick={handleStep}\r\n              completed={que}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Observación</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"Donde\"}\r\n              name=\"Donde\"\r\n              onClick={handleStep}\r\n              completed={donde}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>Area</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n\r\n            <Step\r\n              active={step === \"PAC\"}\r\n              name=\"PAC\"\r\n              onClick={handleStep}\r\n              completed={pacStep}\r\n            >\r\n              <Step.Content>\r\n                <Step.Title>PAC</Step.Title>\r\n              </Step.Content>\r\n            </Step>\r\n          </Step.Group>\r\n          <Segment attached>\r\n            {step === \"Que\" ? (\r\n              <Container>\r\n                {user === \"user\" && (\r\n                  <>\r\n                    <Segment>\r\n                      <Header>Nombre del Observador</Header>\r\n                      <Input\r\n                        fluid\r\n                        placeholder=\"Nombre del Observador...\"\r\n                        onChange={(e, { value }) => {\r\n                          setCreador(value);\r\n                        }}\r\n                      />\r\n                    </Segment>\r\n                  </>\r\n                )}\r\n                <Segment name=\"segmentTipo\">\r\n                  <Header>Tipo de Observación</Header>\r\n                  {tipos.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          circular\r\n                          name={item.name}\r\n                          onClick={handleTipoClick}\r\n                          active={tipo === item.name}\r\n                        >\r\n                          {item.id}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment name=\"segmentInvol\">\r\n                  <Header>Personas Responsables/Involucradas</Header>\r\n                  <Dropdown\r\n                    fluid\r\n                    multiple\r\n                    search\r\n                    selection\r\n                    value={involucrados}\r\n                    placeholder=\"Seleccionar Personas Involucradas\"\r\n                    options={personal}\r\n                    onChange={(e, { value }) => {\r\n                      setInvolucrados(value);\r\n                      console.log(value);\r\n                    }}\r\n                  />\r\n                </Segment>\r\n                <Ref innerRef={segCat}>\r\n                  <Segment name=\"segmentCat\">\r\n                    <Header>Categoria de la Observación</Header>\r\n                    <Card.Group itemsPerRow={4}>\r\n                      {catData\r\n                        ? catData.map((item) => (\r\n                            <Popup\r\n                              trigger={\r\n                                <Card\r\n                                  raised\r\n                                  color={\r\n                                    cat === item.Categoria ? \"red\" : \"black\"\r\n                                  }\r\n                                  name={item.Categoria}\r\n                                  onClick={handleCatClick}\r\n                                >\r\n                                  <Image\r\n                                    src={item.src}\r\n                                    size=\"mini\"\r\n                                    wrapped\r\n                                    ui={false}\r\n                                  />\r\n                                  <Card.Content>\r\n                                    {cat === item.Categoria ? (\r\n                                      <Icon\r\n                                        color=\"green\"\r\n                                        name=\"check circle\"\r\n                                      ></Icon>\r\n                                    ) : null}\r\n                                  </Card.Content>\r\n                                </Card>\r\n                              }\r\n                            >\r\n                              <Popup.Header>{item.Categoria}</Popup.Header>\r\n                            </Popup>\r\n                          ))\r\n                        : null}\r\n                    </Card.Group>\r\n                  </Segment>\r\n                </Ref>\r\n\r\n                {subCatData ? (\r\n                  <Ref innerRef={segSubCat}>\r\n                    <Segment name=\"segmentSubCat\">\r\n                      <Header>Observación</Header>\r\n                      <Dropdown\r\n                        fluid\r\n                        button\r\n                        search\r\n                        scrolling\r\n                        clearable\r\n                        value={subCat}\r\n                        placeholder=\"Seleccionar Observacion\"\r\n                        options={subCatData}\r\n                        onChange={(e, { value }) => {\r\n                          setSubCat(value);\r\n                        }}\r\n                      />\r\n                      <br />\r\n                      <Header>\r\n                        Severidad\r\n                        <Popup\r\n                          trigger={\r\n                            <div>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 0 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(1);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 1 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(2);\r\n                                }}\r\n                              ></Icon>\r\n                              <Icon\r\n                                name=\"times circle\"\r\n                                color={severidad > 2 ? \"red\" : \"white\"}\r\n                                onClick={() => {\r\n                                  setSeveridad(3);\r\n                                }}\r\n                              ></Icon>\r\n                            </div>\r\n                          }\r\n                          content={\"Grado de Severidad: \" + severidad}\r\n                        ></Popup>\r\n                      </Header>\r\n                      <Form>\r\n                        <TextArea\r\n                          placeholder=\"Detalles\"\r\n                          onChange={(e, { value }) => {\r\n                            setDetalles(value);\r\n                          }}\r\n                        ></TextArea>\r\n                      </Form>\r\n                    </Segment>\r\n                  </Ref>\r\n                ) : null}\r\n              </Container>\r\n            ) : null}\r\n            {step === \"Donde\" && areas ? (\r\n              <div>\r\n                <Segment>\r\n                  <Header>Área de la Observación</Header>\r\n                  {areas.map((item) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          color=\"red\"\r\n                          inverted\r\n                          style={{ width: \"15vw\" }}\r\n                          name={item.name}\r\n                          onClick={handleArea}\r\n                          active={area === item.name}\r\n                        >\r\n                          {item.short}\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      <Popup.Header>{item.name}</Popup.Header>\r\n                    </Popup>\r\n                  ))}\r\n                </Segment>\r\n                <Segment>\r\n                  <Header>Anexo</Header>\r\n                  <Input\r\n                    id=\"anexoImg\"\r\n                    fluid\r\n                    className=\"input-image\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      handleImageUpload(e);\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n                </Segment>\r\n              </div>\r\n            ) : null}\r\n            {step === \"PAC\" ? (\r\n              <Segment>\r\n                <Header>Acción Tomada</Header>\r\n                <Form>\r\n                  <TextArea\r\n                    placeholder=\"Escriba la Acción Tomada aquí...\"\r\n                    value={plan}\r\n                    onChange={(e) => {\r\n                      setPlan(e.target.value);\r\n                      console.log(e.target.value);\r\n                    }}\r\n                  ></TextArea>\r\n                </Form>\r\n                <Header>Fecha de Cierre Previsto</Header>\r\n                <Input\r\n                  fluid\r\n                  type=\"date\"\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                  defaultValue={startDate}\r\n                />\r\n                <Header>Responsable del Plan</Header>\r\n                <Dropdown\r\n                  fluid\r\n                  search\r\n                  selection\r\n                  placeholder=\"Seleccionar Responsable del Plan\"\r\n                  options={personal}\r\n                  value={resp}\r\n                  onChange={(e, { value }) => {\r\n                    setResp(value);\r\n                    console.log(value);\r\n                  }}\r\n                />\r\n              </Segment>\r\n            ) : null}\r\n          </Segment>\r\n        </div>\r\n      ) : (\r\n        <Button\r\n          color=\"red\"\r\n          inverted\r\n          fluid\r\n          icon=\"key\"\r\n          content=\"Sign In\"\r\n          onClick={() => {\r\n            iniciar();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registros;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport apiKeys from \"./apikeys\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Popup,\r\n  Image,\r\n  Input,\r\n  Icon,\r\n  TextArea,\r\n  Form,\r\n  Segment,\r\n  Dropdown,\r\n  Step,\r\n  Header,\r\n  Card,\r\n  Rating,\r\n  Ref,\r\n  Dimmer,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport userData from \"./employee.json\";\r\n\r\nfunction Categorias({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  let fecha = date + \" \" + hora + \":\" + minutos;\r\n  //Fechas\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [loading, setLoading] = useState(true);\r\n  const [perfil, setPerfil] = useState();\r\n  const [correo, setCorreo] = useState(\"No Aplica\");\r\n  const [creador, setCreador] = useState();\r\n  const [step, setStep] = useState(\"Que\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [cat, setCat] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [data2, setData2] = useState(\"\");\r\n  const [catData, setCatData] = useState(\"\");\r\n  const [subCatData, setSubCatData] = useState(\"\");\r\n  const [subCat, setSubCat] = useState(\"\");\r\n  const [detalles, setDetalles] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [que, setQue] = useState(false);\r\n  const [donde, setDonde] = useState(false);\r\n  const [pacStep, setPacStep] = useState(false);\r\n  const [involucrados, setInvolucrados] = useState([]);\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(date);\r\n  const [resp, setResp] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const segCat = useRef(null);\r\n  const segSubCat = useRef(null);\r\n  const allInputs = { imgUrl: \"\" };\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [subir, setSubir] = useState(false);\r\n  const [guardar, setGuardar] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [severidad, setSeveridad] = useState(1);\r\n\r\n  const history = useHistory();\r\n\r\n  const tipos = [\r\n    { id: \"Q\", name: \"Calidad\" },\r\n    { id: \"S\", name: \"Seguridad\" },\r\n    { id: \"E\", name: \"Ambiente\" },\r\n    { id: \"B\", name: \"Bioseguridad\" },\r\n  ];\r\n\r\n  const areas = [\r\n    { id: 2, name: \"Linea1\", short: \"L1\" },\r\n    { id: 3, name: \"Linea2\", short: \"L2\" },\r\n    { id: 4, name: \"Linea3\", short: \"L3\" },\r\n    { id: 5, name: \"Linea4\", short: \"L4\" },\r\n    { id: 6, name: \"Linea5\", short: \"L5\" },\r\n    { id: 1, name: \"Area de Reciclaje\", short: \"AR\" },\r\n    { id: 8, name: \"Sala de Jarabe\", short: \"SJ\" },\r\n    { id: 9, name: \"Taller de Mtto\", short: \"TM\" },\r\n    { id: 9, name: \"Area de Operaciones\", short: \"OP\" },\r\n    { id: 7, name: \"PTAR\", short: \"PTAR\" },\r\n    { id: 10, name: \"PTA\", short: \"PTA\" },\r\n    { id: 11, name: \"Oficina Administrativa\", short: \"ADM\" },\r\n  ];\r\n\r\n  async function handleImageUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      var preview = document.querySelector(\"#blah\");\r\n      console.log(preview);\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setSubir(true);\r\n    } else {\r\n      setSubir(false);\r\n      setImageAsFile(\"\");\r\n      setImageAsUrl(\"\");\r\n      setPreviewImg(dummyImg);\r\n      var archivoSelect = document.querySelector(\"#anexoImg\");\r\n      console.log(archivoSelect);\r\n      archivoSelect.value = \"\";\r\n    }\r\n  }\r\n\r\n  async function handleFireBaseUpload() {\r\n    if (subir) {\r\n      console.log(\"start of upload\");\r\n      console.log(imageAsFile);\r\n      if (imageAsFile === \"\") {\r\n        console.error(\r\n          `not an image, the image file is a ${typeof imageAsFile}`\r\n        );\r\n      } else {\r\n        const uploadTask = storage\r\n          .ref(`/iconos/${imageAsFile.name}`)\r\n          .put(imageAsFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot);\r\n          },\r\n          (err) => {\r\n            //catches the errors\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            storage\r\n              .ref(\"iconos\")\r\n              .child(imageAsFile.name)\r\n              .getDownloadURL()\r\n              .then((fireBaseUrl) => {\r\n                setImageAsUrl((prevObject) => ({\r\n                  ...prevObject,\r\n                  imgUrl: fireBaseUrl,\r\n                }));\r\n              });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var sheetNo = 2125477317;\r\n  var sheetNo2 = 715064374;\r\n\r\n  const sacardata = async () => {\r\n    var datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      var data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setData(datas);\r\n    console.log(datas);\r\n    var datas2 = [];\r\n    const sheet2 = doc.sheetsById[sheetNo2];\r\n    const rows2 = await sheet2.getRows();\r\n    lastr = rows2.length + 1;\r\n    await sheet2.loadCells(\"A1:C\" + lastr.toString());\r\n    for (j = 1; j < lastr; j++) {\r\n      const ar = sheet2.getCell(j, 0);\r\n      const br = sheet2.getCell(j, 1);\r\n      const cr = sheet2.getCell(j, 2);\r\n      datas2.push({\r\n        Tipo: ar.value,\r\n        Categoria: br.value,\r\n        SubCategoria: cr.value,\r\n        key: cr.value,\r\n        text: cr.value,\r\n        value: cr.value,\r\n      });\r\n    }\r\n    setData2(datas2);\r\n  };\r\n\r\n  var j;\r\n  var lastr = userData.length;\r\n  const personal = [];\r\n  for (j = 0; j < lastr; j++) {\r\n    if (userData[j].Nombre !== \"\") {\r\n      personal.push({\r\n        key: userData[j].Nombre,\r\n        text: userData[j].Nombre,\r\n        value: userData[j].Nombre,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (user) {\r\n      const datosUsuario = userData.filter((item) => {\r\n        return item.Nombre === user;\r\n      });\r\n      setPerfil(datosUsuario[0].Perfil);\r\n      setCreador(user);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (imageAsUrl) {\r\n      console.log(imageAsUrl.imgUrl);\r\n    }\r\n  }, [imageAsUrl]);\r\n\r\n  useEffect(() => {\r\n    if (resp) {\r\n      const datoResp = userData.filter((item) => {\r\n        return item.Nombre === resp;\r\n      });\r\n      setCorreo(datoResp[0].correo);\r\n    }\r\n  }, [resp]);\r\n\r\n  async function registrar(tipo, categoria) {\r\n    handleFireBaseUpload();\r\n    console.log(imageAsUrl.imgUrl);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[sheetNo];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length + 1;\r\n    var j;\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      if (\r\n        sheet.getCell(j, 0).value === tipo &&\r\n        sheet.getCell(j, 1).value === categoria\r\n      ) {\r\n        const imagen = sheet.getCell(j, 4);\r\n        imagen.value = imageAsUrl.imgUrl;\r\n        await sheet.saveUpdatedCells();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function notificar() {\r\n    var templateParams = {\r\n      name: resp,\r\n      to_email: correo,\r\n      fecha_limite: startDate,\r\n      lugar: area,\r\n      qseb: tipo,\r\n      categoria: cat,\r\n      observacion: subCat,\r\n      involucrados: involucrados.join(),\r\n      pac: plan,\r\n      registrado: creador,\r\n    };\r\n\r\n    emailjs\r\n      .send(\"Gmail\", apiKeys.TEMPLATE_ID, templateParams, apiKeys.USER_ID)\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  }\r\n\r\n  const iniciar = () => {\r\n    var priceEls = document.querySelectorAll(\".item\");\r\n    for (var i = 0; i < priceEls.length; i++) {\r\n      var ele = priceEls[i].innerText;\r\n      if (ele === \"Usuario\") {\r\n        priceEls[i].click();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      sacardata();\r\n    }\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    if (tipo) {\r\n      setCatData(\r\n        data.filter((item) => {\r\n          return item.Tipo === tipo;\r\n        })\r\n      );\r\n    }\r\n    if (cat) {\r\n      setSubCatData(\r\n        data2.filter((item) => {\r\n          return item.Categoria === cat;\r\n        })\r\n      );\r\n    }\r\n    if (tipo && cat && subCat && involucrados.length !== 0) {\r\n      setQue(true);\r\n    } else {\r\n      setQue(false);\r\n    }\r\n    if (area) {\r\n      setDonde(true);\r\n    } else {\r\n      setDonde(false);\r\n    }\r\n    if (plan && resp && startDate) {\r\n      setPacStep(true);\r\n    } else {\r\n      setPacStep(false);\r\n    }\r\n    if (\r\n      tipo &&\r\n      cat &&\r\n      subCat &&\r\n      involucrados.length !== 0 &&\r\n      area &&\r\n      plan &&\r\n      resp &&\r\n      startDate\r\n    ) {\r\n      setGuardar(true);\r\n    } else {\r\n      setGuardar(false);\r\n    }\r\n  }, [\r\n    data,\r\n    tipo,\r\n    cat,\r\n    subCat,\r\n    involucrados,\r\n    area,\r\n    plan,\r\n    resp,\r\n    startDate,\r\n    data2,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <Segment>\r\n          {data.map((item) => (\r\n            <Segment>\r\n              <Header>{item.Tipo}</Header>\r\n              <Form>\r\n                <TextArea value={item.Categoria}></TextArea>\r\n                <Header content={item.src}></Header>\r\n                <Input\r\n                  id=\"anexoImg\"\r\n                  fluid\r\n                  className=\"input-image\"\r\n                  type=\"file\"\r\n                  onChange={handleImageUpload}\r\n                />\r\n                <br />\r\n\r\n                <Button\r\n                  onClick={(e) => {\r\n                    registrar(item.Tipo, item.Categoria);\r\n                  }}\r\n                >\r\n                  SAVE\r\n                </Button>\r\n                <Image size=\"large\" id=\"blah\" src={previewImg} alt=\"Anexo\" />\r\n              </Form>\r\n            </Segment>\r\n          ))}\r\n        </Segment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categorias;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport {\r\n  Header,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Form,\r\n  Message,\r\n  Checkbox,\r\n  Popup,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Login() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"recordar\"]: [recordar, setRecordar],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState();\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const login = (event, password) => {\r\n    event.preventDefault();\r\n    var found = false;\r\n    for (var i = 0; i < userData.length; i++) {\r\n      if (userData[i].id === password) {\r\n        found = true;\r\n        setUser(userData[i].Nombre);\r\n        sessionStorage.user = userData[i].Nombre;\r\n        if (recordar) {\r\n          localStorage.user = userData[i].Nombre;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!found) alert(`Usuario No encontrado`);\r\n    if (found) {\r\n      if (pagina) {\r\n        history.push(pagina);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Ingresar con su Numero de Empleado\r\n        </Header>\r\n        <Form size=\"large\">\r\n          <Segment stacked>\r\n            <Popup\r\n              content=\"Numero de Empleado sin PA ni los 0 iniciales, Ejemplo: PA00123456 = 123456\"\r\n              trigger={\r\n                <Form.Input\r\n                  name=\"userPassword\"\r\n                  type=\"password\"\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Numero de Empleado\"\r\n                  onChange={(event) => onChangeHandler(event)}\r\n                />\r\n              }\r\n            />\r\n\r\n            <Button\r\n              color=\"red\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={(event) => {\r\n                login(event, password);\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          <Checkbox\r\n            label=\"Recordar Usuario\"\r\n            onChange={(e, { checked }) => {\r\n              checked ? setRecordar(true) : setRecordar(false);\r\n            }}\r\n          />\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport userData from \"./employee.json\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\n\r\nfunction Perfil() {\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Segment>\r\n        <Header as=\"h4\">\r\n          {user}\r\n          <Button\r\n            floated=\"right\"\r\n            negative\r\n            onClick={() => {\r\n              setUser(\"\");\r\n              sessionStorage.removeItem(\"user\");\r\n              localStorage.removeItem(\"user\");\r\n              setPagina(\"/perfil\");\r\n              history.push(\"/Login\");\r\n            }}\r\n          >\r\n            Cerrar Sesión\r\n          </Button>\r\n        </Header>\r\n        <Segment>{userInfo[0].correo}</Segment>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Perfil;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport userData from \"./employee.json\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { intlFormat } from \"date-fns\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  //var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da} ${hora}`;\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Schedule() {\r\n  const [persona, setPersona] = useState(); //variable para responsable de recorrido\r\n  const [lugar, setLugar] = useState(); //variable para area de recorrido\r\n  const {\r\n    [\"user\"]: [user, setUser],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const { [\"personal\"]: personal } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const userInfo = userData.filter((item) => {\r\n    return item.Nombre === user;\r\n  });\r\n  const history = useHistory();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date())); //variable para fecha de recorrido\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        if (areas[j].name !== \"\") {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  async function registrar() {\r\n    setSaving(true);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[762667679];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    while (lastr--) {\r\n      try {\r\n        console.log(rows[lastr].Usuario);\r\n        if (\r\n          rows[lastr].Nombre == persona &&\r\n          rows[lastr].Fecha == fecha &&\r\n          rows[lastr].Area == lugar\r\n        ) {\r\n          console.log(\"Borrando\");\r\n          await rows[lastr].delete();\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        break;\r\n      }\r\n    }\r\n    await sheet.addRow({\r\n      Nombre: persona,\r\n      Fecha: fecha,\r\n      Area: lugar,\r\n      Usuario: user,\r\n      FechaProgramado: FechaStringLong(new Date()),\r\n    });\r\n    alert(\"Datos Guardados\");\r\n    setSaving(false);\r\n    setPersona();\r\n    setLugar();\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"50vh\" }} verticalAlign=\"middle\">\r\n      <Dimmer active={saving} page>\r\n        <Loader size=\"massive\">{saving ? \"Saving\" : \"Loading\"}</Loader>\r\n      </Dimmer>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" style={{ color: \"#F44336\" }} textAlign=\"center\">\r\n          Programar Recorrido\r\n        </Header>\r\n        <Form>\r\n          <b>Nombre*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Nombre de Empleado...\"\r\n            defaultValue={persona}\r\n            options={personal}\r\n            onChange={(e, { value }) => {\r\n              setPersona(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Area*</b>\r\n          <Dropdown\r\n            fluid\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder=\"Area...\"\r\n            defaultValue={lugar}\r\n            options={listaArea}\r\n            onChange={(e, { value }) => {\r\n              setLugar(value);\r\n            }}\r\n          ></Dropdown>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            size=\"tiny\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n          <br></br>\r\n          <Button\r\n            disabled={!persona || !lugar}\r\n            negative\r\n            fluid\r\n            onClick={() => {\r\n              registrar();\r\n            }}\r\n          >\r\n            Programar\r\n          </Button>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport {\r\n  List,\r\n  Button,\r\n  Image,\r\n  Checkbox,\r\n  Dimmer,\r\n  Loader,\r\n  Segment,\r\n  Header,\r\n  Label,\r\n  Grid,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Input,\r\n  Form,\r\n  TextArea,\r\n  Dropdown,\r\n  Progress,\r\n  Container,\r\n  Radio,\r\n  Popup,\r\n  Sticky,\r\n} from \"semantic-ui-react\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { GradientDefs } from \"react-vis\";\r\n\r\nfunction sleep(milliseconds) {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n}\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  var date_data = new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n\r\n  return date_data;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nexport default function ReporteDeTurno({ user }) {\r\n  const referencia = useRef(null);\r\n  const {\r\n    [\"reportData\"]: [reportData, setRepData],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"areas\"]: [areas, setAreas],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"pagina\"]: [pagina, setPagina],\r\n  } = useContext(Contexto);\r\n  const [area, setArea] = useState();\r\n  const [categoria, setCat] = useState();\r\n  const { personal: personal } = useContext(Contexto);\r\n  const {\r\n    [\"colores\"]: [colores, setColores],\r\n  } = useContext(Contexto);\r\n  const [reportes, setReportes] = useState(); //Listado completo de CheckList\r\n  const [sinFiltro, setSinFiltro] = useState();\r\n  const [checkList, setCheckList] = useState();\r\n  const [fecha, setFecha] = useState(FechaStringShort(new Date()));\r\n  const [cats, setCats] = useState();\r\n  const [rubros, setRubros] = useState();\r\n  const [activeRubro, setActRubro] = useState();\r\n  const [subCat, setSubCat] = useState();\r\n  const [requerimientos, setReq] = useState();\r\n  const [activeReq, setActiveR] = useState();\r\n  const [incumple, setIncumple] = useState([]);\r\n  const [percentage, setPercentage] = useState();\r\n  const [turno, setTurno] = useState(1);\r\n  const [campoOblig, setCampoOblig] = useState(0);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [duplicado, setDuplicado] = useState(false);\r\n  const [listaArea, setListaArea] = useState();\r\n  const [tipoReporte, setTipoRep] = useState(\"Reporte de Turno\");\r\n  const {\r\n    [\"width\"]: [width, setWidth],\r\n  } = useContext(Contexto);\r\n  const { breakpoint: breakpoint } = useContext(Contexto);\r\n  const { userData: userData } = useContext(Contexto);\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [previewImg, setPreviewImg] = useState(dummyImg);\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const turnos = [\"1\", \"2\", \"3\"];\r\n  const estados = [\r\n    { name: \"saving\", caption: \"Guardando\" },\r\n    { name: \"loading\", caption: \"Cargando\" },\r\n    { name: \"deleting\", caption: \"Borrando\" },\r\n  ];\r\n  const [status, setStatus] = useState();\r\n  const history = useHistory();\r\n\r\n  async function handleImageUpload(event, rubro) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const imageFile = event.target.files[0];\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, url: \"\", preview: \"\", img: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n      console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\r\n      console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\r\n      var reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setPreviewImg(e.target.result);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, preview: e.target.result }\r\n              : x;\r\n          });\r\n        });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 1920,\r\n        useWebWorker: true,\r\n      };\r\n      try {\r\n        const compressedFile = await imageCompression(imageFile, options);\r\n        console.log(\r\n          \"compressedFile instanceof Blob\",\r\n          compressedFile instanceof Blob\r\n        ); // true\r\n        console.log(\r\n          `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\r\n        ); // smaller than maxSizeMB\r\n        setImageAsFile((imageFile) => compressedFile);\r\n        setReportes((existingItems) => {\r\n          return existingItems.map((x) => {\r\n            return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n              ? { ...x, img: compressedFile }\r\n              : x;\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      setImageAsFile(\"\");\r\n      setPreviewImg(dummyImg);\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n            ? { ...x, preview: \"\" }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setPercentage(0);\r\n  }\r\n\r\n  async function handleFireBaseUpload(rubro) {\r\n    var boton = document.getElementById(\"btn\" + activeReq + activeRubro);\r\n    boton.disabled = true;\r\n    setPercentage(1);\r\n    const archivo =\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n        )\r\n      ].img;\r\n    const uploadTask = storage.ref(`/images/${archivo.name}`).put(archivo);\r\n    setPercentage(5);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        //takes a snap shot of the process as it is happening\r\n        console.log(snapShot);\r\n      },\r\n      (err) => {\r\n        //catches the errors\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        // gets the functions from storage refences the image storage in firebase by the children\r\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n        setPercentage(50);\r\n        storage\r\n          .ref(\"images\")\r\n          .child(archivo.name)\r\n          .getDownloadURL()\r\n          .then((fireBaseUrl) => {\r\n            setReportes((existingItems) => {\r\n              return existingItems.map((x) => {\r\n                return x.SubCategoria === activeRubro &&\r\n                  x.Categoria === activeReq\r\n                  ? { ...x, url: fireBaseUrl }\r\n                  : x;\r\n              });\r\n            });\r\n            setPercentage(100);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  const sacardata = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setRepData(datas);\r\n  };\r\n  const sacarReportes = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = 1259390435;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    var aplican = datas.filter((x) => x[\"Reporte de turno\"] === \"Y\");\r\n    if (window.location.href.includes(\"recorrido\")) {\r\n      aplican = datas.filter((x) => x[\"Recorrido\"] === \"Y\");\r\n    }\r\n    setSinFiltro(aplican);\r\n    setReportes(aplican);\r\n    setCats(\r\n      aplican\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  const sacarReportes2 = async () => {\r\n    setStatus(estados[1].caption);\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n    const sheetID = window.location.href.includes(\"recorrido\")\r\n      ? 1236777776\r\n      : 585241358;\r\n    const sheet = doc.sheetsById[sheetID];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    datas.forEach((x) => {\r\n      x.incumple = window.location.href.includes(\"recorrido\") ? \"\" : \"N\";\r\n      x.img = \"\";\r\n      x.preview = \"\";\r\n      x.url = \"\";\r\n      x.personas = \"\";\r\n      x.detalle = \"\";\r\n      x.opcional = \"N\";\r\n      x.turno = \"\";\r\n      x.reporte = window.location.href.includes(\"recorrido\")\r\n        ? \"Recorrido\"\r\n        : \"Reporte de Turno\";\r\n    });\r\n    console.log(datas);\r\n    setReportes(datas);\r\n    setCats(\r\n      datas\r\n        .map((item) => item.Tipo)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setStatus();\r\n  };\r\n  async function registrar() {\r\n    setStatus(estados[0].caption);\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n\r\n    if (duplicado) {\r\n      setStatus(estados[2].caption);\r\n      while (lastr--) {\r\n        try {\r\n          if (rows[lastr].Id == uniqueID) {\r\n            console.log(\"Borrando\");\r\n            await rows[lastr].delete();\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          sleep(60000);\r\n          lastr = lastr + 1;\r\n          continue;\r\n        }\r\n      }\r\n      setStatus(estados[0].caption);\r\n    }\r\n    var j;\r\n\r\n    for (j = 0; j < reportes.length; j++) {\r\n      try {\r\n        console.log(\"guardando\");\r\n        await sheet.addRow({\r\n          Area: area,\r\n          Usuario: user,\r\n          FechaRegistro: FechaStringLong(new Date()),\r\n          FechaRecorrido: fecha,\r\n          Tipo: reportes[j].Tipo,\r\n          Categoria: reportes[j].Categoria,\r\n          SubCategoria: reportes[j].SubCategoria,\r\n          Incumple: reportes[j].incumple,\r\n          Detalle: reportes[j].detalle,\r\n          PersonasObservadas: reportes[j].personas,\r\n          Imagen: reportes[j].url,\r\n          Turno: turno,\r\n          Reporte: tipoReporte,\r\n          Id: uniqueID,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n        sleep(60000);\r\n        j = j - 1;\r\n        continue;\r\n      }\r\n    }\r\n    alert(\"Datos Guardados\");\r\n    setActiveR();\r\n    setStatus();\r\n    setArea(\"\");\r\n    setActRubro();\r\n    setRepData();\r\n    setReportes();\r\n    setConfirmar(false);\r\n    history.push(\"/\");\r\n  }\r\n  const [lista, setLista] = useState();\r\n  const crearLista = (e, { name }) => {\r\n    if (activeReq == name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(name);\r\n    }\r\n    setLista(\r\n      reportData\r\n        .filter((item) => item.Nombre == name)\r\n        .map((item) => item.Rubro)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n  };\r\n  const revision = (e, { name, requerimiento }) => {\r\n    let observacion = { req: requerimiento, rubro: name };\r\n    if (\r\n      reportData[reportData.findIndex((x) => x.Rubro === name)].Acto === \"Y\"\r\n    ) {\r\n      observacion.obligatorio = 1;\r\n    }\r\n    if (incumple.some((e) => e.req === requerimiento && e.rubro === name)) {\r\n      let removeIndex = incumple.filter((e) => e.rubro !== name);\r\n      console.log(removeIndex);\r\n      // remove object\r\n      setIncumple(removeIndex);\r\n    } else {\r\n      setIncumple((oldArray) => [...oldArray, observacion]);\r\n    }\r\n  };\r\n  const validar = () => {\r\n    var variables = [area, fecha, user, tipoReporte];\r\n    var uniqueID = variables.join(\"-\");\r\n    if (tipoReporte === \"Reporte de Turno\") {\r\n      uniqueID = uniqueID + \"-\" + turno;\r\n    }\r\n    let res = [];\r\n    res = reportData.filter((element) => {\r\n      return element.Id == uniqueID;\r\n    });\r\n    if (res.length > 0) {\r\n      setDuplicado(true);\r\n    } else {\r\n      setDuplicado(false);\r\n    }\r\n  };\r\n\r\n  const sacarAreas = async () => {\r\n    var data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1705686078];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    const encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    setAreas(datas);\r\n  };\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    // Return a function from the effect that removes the event listener\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!areas) {\r\n      sacarAreas();\r\n    } else {\r\n      var j;\r\n      var userArea = userData.filter((x) => x.Nombre === user)[0].Area;\r\n      var lastr = areas.length;\r\n      const area = [];\r\n      for (j = 0; j < lastr; j++) {\r\n        let keys = areas[j].keys;\r\n        if (\r\n          areas[j].name !== \"\" &&\r\n          (userArea.toLowerCase().includes(\"gerencia\") ||\r\n          window.location.href.includes(\"recorrido\")\r\n            ? true\r\n            : keys\r\n                .toLowerCase()\r\n                .split(\", \")\r\n                .some((w) => userArea.toLowerCase().includes(w)))\r\n        ) {\r\n          area.push({\r\n            key: areas[j].name,\r\n            text: areas[j].name,\r\n            value: areas[j].name,\r\n          });\r\n        }\r\n      }\r\n      setListaArea(area);\r\n    }\r\n  }, [areas]);\r\n\r\n  useEffect(() => {\r\n    if (turno && area) {\r\n      if (!reportData) {\r\n        sacardata();\r\n      }\r\n      validar();\r\n    }\r\n  }, [area, turno]);\r\n\r\n  useEffect(() => {\r\n    console.log(incumple);\r\n  }, [incumple]);\r\n  useEffect(() => {\r\n    if (!reportData) {\r\n      sacardata();\r\n    }\r\n  }, [reportData]);\r\n  useEffect(() => {\r\n    if (!reportes) {\r\n      sacarReportes();\r\n    } else {\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    setArea();\r\n    setCat();\r\n    setReportes();\r\n    setRepData();\r\n    setActiveR();\r\n    setActRubro();\r\n    sacarReportes();\r\n    sacardata();\r\n    var url = window.location.href;\r\n    if ((pagina && pagina.includes(\"recorrido\")) || url.includes(\"recorrido\")) {\r\n      setTipoRep(\"Reporte de Recorrido\");\r\n    } else {\r\n      setTipoRep(\"Reporte de Turno\");\r\n    }\r\n  }, [pagina]);\r\n  function handleArea(e, { value }) {\r\n    setCat();\r\n    setActiveR();\r\n    var filtro = sinFiltro.filter((x) => x[value] === \"Y\");\r\n    setReportes(filtro);\r\n    setArea(value);\r\n  }\r\n\r\n  function handleCategorias(e) {\r\n    setCat(e.target.name);\r\n    if (reportes) {\r\n      var chklist = reportes.filter((item) => item.Tipo === e.target.name);\r\n      setCheckList(chklist);\r\n      setReq(\r\n        chklist\r\n          .map((item) => item.Categoria)\r\n          .filter((value, index, self) => self.indexOf(value) === index)\r\n      );\r\n    }\r\n  }\r\n  function handleSubCat(e) {\r\n    setSubCat(e.target.name);\r\n    if (activeReq === e.target.name) {\r\n      setActiveR();\r\n    } else {\r\n      setActiveR(e.target.name);\r\n    }\r\n    setRubros(\r\n      reportes\r\n        .filter((item) => item.Categoria === e.target.name)\r\n        .map((item) => item.SubCategoria)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n    );\r\n    setActRubro();\r\n  }\r\n\r\n  function handleCheck(e) {\r\n    var item = e.target.name;\r\n    var chk = e.target.id;\r\n    console.log(chk);\r\n    setActRubro(item);\r\n    var cumple;\r\n    if (chk.includes(\"Y\")) {\r\n      cumple = \"N\";\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === item && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n                detalle: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    } else {\r\n      cumple = \"Y\";\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === item && x.Categoria === activeReq\r\n          ? { ...x, incumple: cumple }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function HandleTodos(e, { checked }) {\r\n    var cumple;\r\n    if (checked) {\r\n      cumple = \"N\";\r\n    } else {\r\n      cumple = \"\";\r\n    }\r\n    if (activeReq) {\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.Categoria === activeReq ? { ...x, incumple: cumple } : x;\r\n        });\r\n      });\r\n    } else {\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.Tipo === categoria ? { ...x, incumple: cumple } : x;\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleOpcional(e, { rubro }) {\r\n    setActRubro(rubro);\r\n    var aplica;\r\n    if (\r\n      reportes[\r\n        reportes.findIndex(\r\n          (x) => x.Categoria === activeReq && x.SubCategoria === rubro\r\n        )\r\n      ].opcional === \"N\"\r\n    ) {\r\n      aplica = \"Y\";\r\n    } else {\r\n      aplica = \"N\";\r\n\r\n      setReportes((existingItems) => {\r\n        return existingItems.map((x) => {\r\n          return x.SubCategoria === rubro && x.Categoria === activeReq\r\n            ? {\r\n                ...x,\r\n                personas: \"\",\r\n              }\r\n            : x;\r\n        });\r\n      });\r\n    }\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === rubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              opcional: aplica,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleObservados(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              personas: value.toString(),\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDetalles(e, { value }) {\r\n    setReportes((existingItems) => {\r\n      return existingItems.map((x) => {\r\n        return x.SubCategoria === activeRubro && x.Categoria === activeReq\r\n          ? {\r\n              ...x,\r\n              detalle: value,\r\n            }\r\n          : x;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n      <Dimmer\r\n        active={\r\n          status || estados.filter((x) => x.caption === status).length != 0\r\n        }\r\n        page\r\n      >\r\n        <Loader size=\"massive\">{status}</Loader>\r\n      </Dimmer>\r\n      {reportes && (\r\n        <Modal\r\n          onClose={() => setConfirmar(false)}\r\n          onOpen={() => setConfirmar(true)}\r\n          size=\"large\"\r\n          open={confirmar}\r\n        >\r\n          <Modal.Header>Confirmar Información</Modal.Header>\r\n          <Modal.Content>\r\n            {duplicado && (\r\n              <Label basic color=\"red\" size=\"huge\">\r\n                <Icon name=\"warning sign\" />\r\n                Se sobreescribirá los datos\r\n              </Label>\r\n            )}\r\n            <h1>\r\n              {tipoReporte.includes(\"Recorrido\")\r\n                ? tipoReporte\r\n                : tipoReporte + \" \" + turno}\r\n            </h1>\r\n            <h2>{fecha}</h2>\r\n            <h3>{user}</h3>\r\n            <h4>{area}</h4>\r\n          </Modal.Content>\r\n\r\n          <Divider />\r\n          <Modal.Content>\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <b>Incumplimientos: </b>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length > 0 && (\r\n              <List>\r\n                {reportes\r\n                  .filter((x) => x.incumple === \"Y\")\r\n                  .map((item, index) => {\r\n                    return (\r\n                      <List.Item>\r\n                        {index + 1}. {item.Tipo} - {item.Categoria} -{\" \"}\r\n                        {item.SubCategoria}\r\n                      </List.Item>\r\n                    );\r\n                  })}\r\n              </List>\r\n            )}\r\n            {reportes.filter((x) => x.incumple === \"Y\").length == 0 && (\r\n              <b>Sin Incidencias</b>\r\n            )}\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"green\"\r\n              onClick={() => {\r\n                registrar();\r\n              }}\r\n            >\r\n              <Icon name=\"check\"></Icon>Confirmar\r\n            </Button>\r\n            <Button\r\n              secondary\r\n              color=\"red\"\r\n              onClick={() => {\r\n                setConfirmar(false);\r\n              }}\r\n            >\r\n              <Icon name=\"x\"></Icon>Cancelar\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      )}\r\n      <Grid.Row>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Segment basic>\r\n            <Header>{tipoReporte}</Header>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input\r\n            fluid\r\n            type=\"date\"\r\n            defaultValue={fecha}\r\n            onChange={(e, { value }) => {\r\n              setFecha(value);\r\n            }}\r\n          ></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Area*</b>\r\n            <Dropdown\r\n              style={{ textAlign: \"center\" }}\r\n              fluid\r\n              search\r\n              selection\r\n              placeholder=\"Area...\"\r\n              options={listaArea}\r\n              onChange={handleArea}\r\n            ></Dropdown>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {area && tipoReporte.includes(\"Turno\") && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <b>Turno*</b>\r\n            <Form>\r\n              <Grid columns={3}>\r\n                <Grid.Row>\r\n                  {turnos.map((x) => {\r\n                    return (\r\n                      <Grid.Column>\r\n                        <Radio\r\n                          label={x}\r\n                          checked={turno === x}\r\n                          onChange={() => {\r\n                            setTurno(x);\r\n                          }}\r\n                        ></Radio>\r\n                      </Grid.Column>\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {duplicado && area && turno && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" />\r\n              Ud. ya ha registrado un {tipoReporte} para {area}{\" \"}\r\n              {tipoReporte === \"Reporte de Turno\" ? \"del turno \" + turno : \"\"}{\" \"}\r\n              para el dia {fecha}, en caso que guardes se sobreescribira el\r\n              reporte anterior\r\n            </Label>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      <Grid.Row columns={4}>\r\n        {cats &&\r\n          turno &&\r\n          area &&\r\n          cats.map((item) => {\r\n            return (\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor:\r\n                      categoria === item\r\n                        ? colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].activo\r\n                        : colores.filter((x) => {\r\n                            return x.categoria === item;\r\n                          })[0].inactivo,\r\n                    color: colores.filter((x) => {\r\n                      return x.categoria === item;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleCategorias}\r\n                >\r\n                  {width > breakpoint\r\n                    ? colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].caption\r\n                    : colores.filter((x) => {\r\n                        return x.categoria === item;\r\n                      })[0].short}\r\n                  <Popup\r\n                    content=\"Cantidad de incumplimiento\"\r\n                    trigger={\r\n                      <Label\r\n                        style={{ left: \"90%\" }}\r\n                        color={\r\n                          reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length > 0\r\n                            ? \"red\"\r\n                            : \"grey\"\r\n                        }\r\n                        floating\r\n                        circular\r\n                        size=\"mini\"\r\n                      >\r\n                        {reportes &&\r\n                          reportes.filter(\r\n                            (x) => x.Tipo === item && x.incumple === \"Y\"\r\n                          ).length}\r\n                      </Label>\r\n                    }\r\n                  />\r\n                </Button>\r\n              </Grid.Column>\r\n            );\r\n          })}\r\n      </Grid.Row>\r\n      {reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              disabled={\r\n                !area |\r\n                !turno |\r\n                (reportes &&\r\n                  reportes.filter(\r\n                    (x) =>\r\n                      x.incumple === \"Y\" &&\r\n                      (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n                      x.personas === \"\"\r\n                  ).length > 0) |\r\n                (reportes.filter((x) => x.incumple === \"\").length > 0)\r\n              }\r\n              fluid\r\n              color=\"green\"\r\n              icon=\"save\"\r\n              content=\"Guardar\"\r\n              onClick={() => setConfirmar(true)}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {reportes &&\r\n        reportes.filter(\r\n          (x) =>\r\n            x.incumple === \"Y\" &&\r\n            (x.Acto === \"Y\" || x.opcional === \"Y\") &&\r\n            x.personas === \"\"\r\n        ).length > 0 && (\r\n          <Grid.Row>\r\n            <Label basic color=\"red\">\r\n              <Icon name=\"warning sign\" /> Campo obligatorio sin completar\r\n            </Label>\r\n          </Grid.Row>\r\n        )}\r\n      {categoria && area && reportes && (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment\r\n              fluid\r\n              basic\r\n              style={{\r\n                color: colores.filter((x) => {\r\n                  return x.categoria === categoria;\r\n                })[0].activo,\r\n              }}\r\n            >\r\n              <Header\r\n                onClick={() => {\r\n                  console.log(reportes);\r\n                  console.log(activeReq);\r\n                  console.log(activeRubro);\r\n                }}\r\n              >\r\n                {categoria}\r\n                {\" Cumplimiento \"}\r\n                {Math.ceil(\r\n                  (reportes.filter(\r\n                    (x) => x.Tipo === categoria && x.incumple === \"N\"\r\n                  ).length /\r\n                    reportes.filter((x) => x.Tipo === categoria).length) *\r\n                    100\r\n                )}\r\n                %\r\n              </Header>\r\n              <Checkbox\r\n                key={categoria + \"AllY\"}\r\n                label={\"Todos Cumplen\"}\r\n                checked={\r\n                  reportes.filter((x) => x.Tipo === categoria).length ==\r\n                  reportes.filter(\r\n                    (x) => x.Tipo === categoria && x.incumple === \"N\"\r\n                  ).length\r\n                }\r\n                onChange={HandleTodos}\r\n              />\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      )}\r\n      {requerimientos &&\r\n        categoria &&\r\n        area &&\r\n        reportes &&\r\n        requerimientos.map((item, reqIdx) => {\r\n          return (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Button\r\n                  fluid\r\n                  style={{\r\n                    backgroundColor: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].inactivo,\r\n                    color: colores.filter((item) => {\r\n                      return item.categoria === categoria;\r\n                    })[0].texto,\r\n                  }}\r\n                  name={item}\r\n                  onClick={handleSubCat}\r\n                >\r\n                  {item}\r\n                </Button>\r\n                {activeReq === item && (\r\n                  <Segment basic>\r\n                    <Grid verticalAlign=\"left\">\r\n                      <Checkbox\r\n                        key={reqIdx + \"AllY\"}\r\n                        requerimiento={activeReq}\r\n                        label={\"Todos Cumplen\"}\r\n                        checked={\r\n                          reportes.filter((x) => x.Categoria === activeReq)\r\n                            .length ==\r\n                          reportes.filter(\r\n                            (x) =>\r\n                              x.Categoria === activeReq && x.incumple === \"N\"\r\n                          ).length\r\n                        }\r\n                        onChange={HandleTodos}\r\n                      />\r\n                    </Grid>\r\n                    <Grid verticalAlign=\"left\">\r\n                      {rubros &&\r\n                        rubros.map((item, idx) => {\r\n                          return (\r\n                            <Grid.Row>\r\n                              <Grid.Column>\r\n                                {idx + 1 + \". \" + item}\r\n                                <br />\r\n                                <Grid.Row columns={3}>\r\n                                  <Grid.Column>Cumple?</Grid.Column>\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"Y\"}\r\n                                      id={idx + \"Y\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"Si\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"N\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                  <br />\r\n                                  <Grid.Column>\r\n                                    <Checkbox\r\n                                      fluid\r\n                                      key={idx + \"N\"}\r\n                                      id={idx + \"N\"}\r\n                                      name={item}\r\n                                      requerimiento={activeReq}\r\n                                      label={\"No\"}\r\n                                      checked={\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].incumple === \"Y\"\r\n                                      }\r\n                                      onChange={handleCheck}\r\n                                    />\r\n                                  </Grid.Column>\r\n                                </Grid.Row>\r\n                                {reportes.filter(\r\n                                  (x) =>\r\n                                    x.SubCategoria === item &&\r\n                                    x.Categoria === activeReq\r\n                                )[0].incumple === \"Y\" && (\r\n                                  <Segment color=\"red\">\r\n                                    <Grid>\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"N\" && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Checkbox\r\n                                                fluid\r\n                                                requerimiento={activeReq}\r\n                                                rubro={item}\r\n                                                label=\"Personas Observadas?\"\r\n                                                checked={\r\n                                                  reportes.filter(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )[0].opcional === \"Y\"\r\n                                                }\r\n                                                onChange={handleOpcional}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes.filter(\r\n                                        (x) =>\r\n                                          x.SubCategoria === item &&\r\n                                          x.Categoria === activeReq\r\n                                      )[0].incumple === \"Y\" &&\r\n                                        (reportes.filter(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )[0].Acto === \"Y\" ||\r\n                                          reportes.filter(\r\n                                            (x) =>\r\n                                              x.SubCategoria === item &&\r\n                                              x.Categoria === activeReq\r\n                                          )[0].opcional === \"Y\") && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <b>Personas Observadas*</b>\r\n                                              <Dropdown\r\n                                                fluid\r\n                                                multiple\r\n                                                search\r\n                                                selection\r\n                                                defaultValue={\r\n                                                  reportes[\r\n                                                    reportes.findIndex(\r\n                                                      (x) =>\r\n                                                        x.Categoria ===\r\n                                                          activeReq &&\r\n                                                        x.SubCategoria === item\r\n                                                    )\r\n                                                  ].personas\r\n                                                    ? reportes[\r\n                                                        reportes.findIndex(\r\n                                                          (x) =>\r\n                                                            x.Categoria ===\r\n                                                              activeReq &&\r\n                                                            x.SubCategoria ===\r\n                                                              item\r\n                                                        )\r\n                                                      ].personas.split(\",\")\r\n                                                    : \"\"\r\n                                                }\r\n                                                placeholder=\"Seleccionar Personas Involucradas...\"\r\n                                                options={personal}\r\n                                                onChange={handleObservados}\r\n                                              ></Dropdown>\r\n                                              {!reportes[\r\n                                                reportes.findIndex(\r\n                                                  (x) =>\r\n                                                    x.Categoria === activeReq &&\r\n                                                    x.SubCategoria === item\r\n                                                )\r\n                                              ].personas && (\r\n                                                <Label\r\n                                                  basic\r\n                                                  color=\"red\"\r\n                                                  pointing\r\n                                                >\r\n                                                  <Icon name=\"warning sign\" />\r\n                                                  Por favor elija al menos una\r\n                                                  persona\r\n                                                </Label>\r\n                                              )}\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Detalles</b>\r\n                                          <Form>\r\n                                            <TextArea\r\n                                              placeholder=\"Detelles...\"\r\n                                              defaultValue={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.Categoria ===\r\n                                                        activeReq &&\r\n                                                      x.SubCategoria === item\r\n                                                  )\r\n                                                ].detalle\r\n                                                  ? reportes[\r\n                                                      reportes.findIndex(\r\n                                                        (x) =>\r\n                                                          x.Categoria ===\r\n                                                            activeReq &&\r\n                                                          x.SubCategoria ===\r\n                                                            item\r\n                                                      )\r\n                                                    ].detalle\r\n                                                  : \"\"\r\n                                              }\r\n                                              onChange={handleDetalles}\r\n                                            ></TextArea>\r\n                                          </Form>\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Grid.Column>\r\n                                          <b>Imagen</b>\r\n                                          <Input\r\n                                            icon=\"camera\"\r\n                                            iconPosition=\"left\"\r\n                                            type=\"file\"\r\n                                            fluid\r\n                                            rubro={item}\r\n                                            onChange={(e, { rubro }) => {\r\n                                              handleImageUpload(e, rubro);\r\n                                            }}\r\n                                          />\r\n                                        </Grid.Column>\r\n                                      </Grid.Row>\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview &&\r\n                                        percentage == 0 && (\r\n                                          <Grid.Row>\r\n                                            <Grid.Column>\r\n                                              <Button\r\n                                                id={\"btn\" + activeReq + item}\r\n                                                rubro={item}\r\n                                                content=\"Confirmar\"\r\n                                                style={{\r\n                                                  backgroundColor:\r\n                                                    colores.filter((item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    })[0].inactivo,\r\n                                                  color: colores.filter(\r\n                                                    (item) => {\r\n                                                      return (\r\n                                                        item.categoria ===\r\n                                                        categoria\r\n                                                      );\r\n                                                    }\r\n                                                  )[0].texto,\r\n                                                }}\r\n                                                onClick={(e, { rubro }) => {\r\n                                                  handleFireBaseUpload(rubro);\r\n                                                }}\r\n                                              />\r\n                                            </Grid.Column>\r\n                                          </Grid.Row>\r\n                                        )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Progress\r\n                                              percent={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? 100\r\n                                                  : percentage\r\n                                              }\r\n                                              indicating={\r\n                                                !reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url && percentage != 100\r\n                                              }\r\n                                              success={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url\r\n                                                  ? true\r\n                                                  : percentage == 100\r\n                                              }\r\n                                              progress\r\n                                              label={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].url || percentage == 100\r\n                                                  ? \"Cargado\"\r\n                                                  : percentage == 0\r\n                                                  ? \"\"\r\n                                                  : \"Cargando\"\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                      {reportes[\r\n                                        reportes.findIndex(\r\n                                          (x) =>\r\n                                            x.SubCategoria === item &&\r\n                                            x.Categoria === activeReq\r\n                                        )\r\n                                      ].preview && (\r\n                                        <Grid.Row>\r\n                                          <Grid.Column>\r\n                                            <Image\r\n                                              size=\"medium\"\r\n                                              src={\r\n                                                reportes[\r\n                                                  reportes.findIndex(\r\n                                                    (x) =>\r\n                                                      x.SubCategoria === item &&\r\n                                                      x.Categoria === activeReq\r\n                                                  )\r\n                                                ].preview\r\n                                              }\r\n                                            />\r\n                                          </Grid.Column>\r\n                                        </Grid.Row>\r\n                                      )}\r\n                                    </Grid>\r\n                                  </Segment>\r\n                                )}\r\n                              </Grid.Column>\r\n                            </Grid.Row>\r\n                          );\r\n                        })}\r\n                    </Grid>\r\n                  </Segment>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { storage } from \"./firebase/firebase\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { Dropdown, Grid, Header, Input, Segment } from \"semantic-ui-react\";\r\n\r\nfunction Minuta() {\r\n  const { personal } = useContext(Contexto);\r\n  return (\r\n    <Grid stackable>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <Header content=\"Administración de Minuta\" />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <b>Fecha*</b>\r\n          <Input fluid type=\"date\"></Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row columns={3}>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Participantes</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            <b>Reunion</b>\r\n            <Dropdown options={personal} fluid search selection />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Minuta;\r\n","export default __webpack_public_path__ + \"static/media/Dummy.710ac8fa.png\";","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"date-fns\";\r\nimport \"./App.css\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport userData from \"./employee.json\";\r\nimport { Contexto } from \"./Contexto\";\r\nimport dummy from \"./Dummy.png\";\r\n\r\nfunction ExcelDateToJSDate(serial) {\r\n  var utc_days = Math.floor(serial - 25568);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n  var seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n\r\nfunction FechaStringLong(fecha) {\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  };\r\n  var hora = new Intl.DateTimeFormat(\"en-GB\", options).format(fecha);\r\n  var fechaStr = hora;\r\n  return fechaStr;\r\n}\r\n\r\nfunction FechaStringShort(fecha) {\r\n  var ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(fecha);\r\n  var mo = new Intl.DateTimeFormat(\"en\", { month: \"numeric\" }).format(fecha);\r\n  var da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(fecha);\r\n  var fechaStr = `${ye}-${mo < 10 ? \"0\" + mo : mo}-${da}`;\r\n  return fechaStr;\r\n}\r\n\r\nfunction Desviaciones({ user }) {\r\n  //Fechas\r\n  let today = new Date();\r\n  let startDate = new Date(today);\r\n  startDate.setDate(startDate.getDate() - 30);\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1;\r\n  var yyyy = today.getFullYear();\r\n  var hora = today.getHours();\r\n  var minutos = today.getMinutes();\r\n  dd < 10 ? (dd = \"0\" + dd) : (dd = today.getDate());\r\n  mm < 10 ? (mm = \"0\" + mm) : (mm = today.getMonth() + 1);\r\n  if (hora < 10) hora = \"0\" + hora;\r\n  if (minutos < 10) minutos = \"0\" + minutos;\r\n  let date = yyyy + \"-\" + mm + \"-\" + dd;\r\n  //Fechas\r\n  const [data, setData] = useState();\r\n  const [myData, setMyData] = useState();\r\n  const [dataFound, setDataFound] = useState();\r\n  const [inicio, setInicio] = useState(startDate.toISOString().slice(0, 10));\r\n  const [final, setFinal] = useState(date);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [estado, setEstado] = useState();\r\n  const [Status, setStatus] = useState(\"Sin Acción\");\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const dummyImg = \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n  const [papName, setPapName] = useState();\r\n  const [papDesc, setPapDesc] = useState();\r\n  const [papAreaResp, setPapAreaResp] = useState();\r\n  const {\r\n    [\"desviaciones\"]: [desviaciones, setDesviaciones],\r\n  } = useContext(Contexto);\r\n  const {\r\n    [\"grupoArea\"]: [grupoArea, setGrupoArea],\r\n  } = useContext(Contexto);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const sacardata = async () => {\r\n    setEstado(\"Cargando\");\r\n    var elem = document.getElementById(\"cargando\");\r\n    elem.style.width = \"100%\";\r\n    elem.style.height = \"100%\";\r\n    let data = [];\r\n    let datas = [];\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    let sheet = doc.sheetsById[1249329599];\r\n    let rows = await sheet.getRows();\r\n    let cols = await sheet.columnCount;\r\n    let encabezado = await sheet.headerValues;\r\n\r\n    let lastr = rows.length + 1;\r\n    var j, i;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas.push(data);\r\n    }\r\n    //AREAS\r\n    sheet = doc.sheetsById[1705686078];\r\n    rows = await sheet.getRows();\r\n    cols = await sheet.columnCount;\r\n    encabezado = await sheet.headerValues;\r\n    let datas_areas = [];\r\n    lastr = rows.length + 1;\r\n    //await sheet.loadCells(\"A1:V\" + lastr.toString());\r\n    await sheet.loadCells({\r\n      // GridRange object\r\n      startRowIndex: 0,\r\n      endRowIndex: lastr,\r\n      startColumnIndex: 0,\r\n      endColumnIndex: cols,\r\n    });\r\n    for (j = 1; j < lastr; j++) {\r\n      data = [];\r\n      for (i = 0; i <= cols - 1; i++) {\r\n        window[\"Celda\" + j + i] = sheet.getCell(j, i).value;\r\n        data[`${encabezado[i]}`] = window[\"Celda\" + j + i];\r\n      }\r\n      datas_areas.push(data);\r\n    }\r\n    const unique = [...new Set(datas_areas.map((item) => item.grupo))];\r\n    unique.sort();\r\n    unique.unshift(\"Todas\");\r\n    setGrupoArea(unique);\r\n    //AREAS\r\n    datas.forEach((x) => {\r\n      x.grupo =\r\n        datas_areas[datas_areas.findIndex((y) => y.name === x.Area)].grupo;\r\n    });\r\n    setData(datas);\r\n    let incumplimientos = datas.filter((x) => x.Incumple === \"Y\");\r\n    let miData = incumplimientos;\r\n    let misReqs = incumplimientos.filter((x) => x.AreaResponsable !== null);\r\n    let misTasks;\r\n    if (user) {\r\n      var userArea = userData.filter((x) => x.Nombre === user)[0].Area;\r\n      let grupoAreaKey = datas_areas.filter((y) =>\r\n        y[\"keys\"]\r\n          .toLowerCase()\r\n          .split(\", \")\r\n          .some((w) => userArea.toLowerCase().includes(w))\r\n      );\r\n      if (!userArea.toLowerCase().includes(\"gerencia\")) {\r\n        miData = miData.filter((x) => x.grupo === grupoAreaKey[0].grupo);\r\n      }\r\n      if (!userArea.toLowerCase().includes(\"gerencia\")) {\r\n        misReqs = incumplimientos.filter(\r\n          (x) => x.AreaResponsable === grupoAreaKey[0].grupo\r\n        );\r\n      }\r\n      misTasks = incumplimientos.filter((x) => x.Responsable === user);\r\n    }\r\n    setDesviaciones(miData);\r\n\r\n    setEstado(\"Cargado!\");\r\n    document.getElementById(\"pap_block\").classList.add(\"invisible\");\r\n    var elem = document.getElementById(\"cargando\");\r\n    elem.style.width = \"0%\";\r\n    elem.style.height = \"0%\";\r\n    setEstado();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!desviaciones) {\r\n      sacardata();\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  async function registrar() {\r\n    setEstado(\"Guardando\");\r\n    var elem = document.getElementById(\"cargando\");\r\n    elem.style.width = \"100%\";\r\n    elem.style.height = \"100%\";\r\n    const creds = require(\"./sasso-app.json\"); // the file saved above\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1N_nSzixyWg6OI7I7hTOQ-rfCpeln-pYV4FMtm17wIR0\"\r\n    );\r\n    await doc.useServiceAccountAuth(creds);\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    const sheet = doc.sheetsById[1249329599];\r\n    const rows = await sheet.getRows();\r\n    const cols = await sheet.columnCount;\r\n    let lastr = rows.length;\r\n    while (lastr--) {\r\n      if (\r\n        rows[lastr].Id == activeItem.split(\"_\")[0] &&\r\n        rows[lastr].SubCategoria == activeItem.split(\"_\")[1]\r\n      ) {\r\n        rows[lastr][\"PAP\"] = papName;\r\n        rows[lastr].PAPDesc = papDesc;\r\n        rows[lastr].AreaResponsable = papAreaResp;\r\n        rows[lastr].Estatus = \"Asignado\";\r\n        rows[lastr].PAPFechaCreado = FechaStringLong(new Date());\r\n        await rows[lastr].save();\r\n        break;\r\n      }\r\n    }\r\n    setEstado(\"Guardado!\");\r\n    var elem = document.getElementById(\"cargando\");\r\n    elem.style.width = \"0%\";\r\n    elem.style.height = \"0%\";\r\n    setEstado();\r\n    setActiveItem();\r\n    sacardata();\r\n    setPapName();\r\n    setPapDesc();\r\n    setPapAreaResp();\r\n  }\r\n\r\n  function closeNav() {\r\n    var elem = document.getElementById(\"mySidenav\");\r\n    elem.style.width = \"0\";\r\n    elem.style.padding = \"0\";\r\n  }\r\n\r\n  function abrir() {\r\n    var elem = document.getElementById(\"mySidenav\");\r\n    elem.style.width = \"100%\";\r\n    elem.style.padding = \"5%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"desv\">\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <div\r\n          className=\"filtros\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"100%\",\r\n            padding: \"1%\",\r\n            backgroundColor: \"brown\",\r\n          }}\r\n        >\r\n          <div className=\"devTitle\">\r\n            <i class=\"material-icons regular\" onClick={abrir}>\r\n              menu\r\n            </i>\r\n            <h2 className=\"regular\">Desviaciones</h2>\r\n          </div>\r\n          <div id=\"cargando\" className=\"cargando\">\r\n            {estado}\r\n          </div>\r\n          <div id=\"mySidenav\" className=\"sidenav\">\r\n            <div className=\"sticky\">\r\n              <a href=\"javascript:void(0)\" class=\"closebtn\" onClick={closeNav}>\r\n                &times;\r\n              </a>\r\n              <div style={{ width: \"100%\" }}>\r\n                {[\"Sin Acción\", \"En Proceso\", \"Cerrado\"].map((x) => {\r\n                  return (\r\n                    <h3\r\n                      key={\"Status-\" + x}\r\n                      className=\"status\"\r\n                      style={{\r\n                        opacity: Status === x ? 1 : 0.5,\r\n                        position: \"relative\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setStatus(x);\r\n                      }}\r\n                    >\r\n                      {x}\r\n                    </h3>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            {desviaciones &&\r\n            desviaciones.filter((x) =>\r\n              Status === \"Sin Acción\"\r\n                ? x.Estatus === null\r\n                : Status === \"Cerrado\"\r\n                ? x.Estatus === \"Cerrado\"\r\n                : x.Estatus !== \"Cerrado\" && x.Estatus !== null\r\n            ).length > 0 ? (\r\n              desviaciones\r\n                .filter((x) =>\r\n                  Status === \"Sin Acción\"\r\n                    ? x.Estatus === null\r\n                    : Status === \"Cerrado\"\r\n                    ? x.Estatus === \"Cerrado\"\r\n                    : x.Estatus !== \"Cerrado\" && x.Estatus !== null\r\n                )\r\n                .map((x) => {\r\n                  return (\r\n                    <div\r\n                      className=\"desvDetalle\"\r\n                      key={x.Id + \"_\" + x.SubCategoria}\r\n                      onClick={() => {\r\n                        const name = x.Id + \"_\" + x.SubCategoria;\r\n                        var pap = desviaciones.filter(\r\n                          (y) =>\r\n                            x.Id === y.Id && x.SubCategoria === y.SubCategoria\r\n                        )[0][\"PAP\"];\r\n                        console.log(pap);\r\n                        var papdesc = desviaciones.filter(\r\n                          (y) =>\r\n                            x.Id === y.Id && x.SubCategoria === y.SubCategoria\r\n                        )[0].PAPDesc;\r\n                        console.log(papdesc);\r\n                        setActiveItem(name);\r\n                        setPapAreaResp(\r\n                          desviaciones.filter(\r\n                            (y) =>\r\n                              x.Id === y.Id && x.SubCategoria === y.SubCategoria\r\n                          )[0].AreaResponsable\r\n                        );\r\n                        setPapName(pap);\r\n                        setPapDesc(papdesc);\r\n                        document.getElementById(\"papname\").value = pap;\r\n                        document.getElementById(\"papdesc\").value = papdesc;\r\n                        document\r\n                          .getElementById(\"pap_block\")\r\n                          .classList.remove(\"invisible\");\r\n                        closeNav();\r\n                      }}\r\n                    >\r\n                      <div>{x.Usuario}</div>\r\n                      <div>{x.Area}</div>\r\n                      <div>\r\n                        {FechaStringShort(ExcelDateToJSDate(x.FechaRecorrido))}\r\n                      </div>\r\n                      <div>{x.Tipo}</div>\r\n                      <div>{x.Categoria}</div>\r\n                      <div>{x.SubCategoria}</div>\r\n                    </div>\r\n                  );\r\n                })\r\n            ) : (\r\n              <div className=\"desvDetalle\">Sin Desviaciones</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"detalle rojo\">\r\n          {activeItem && (\r\n            <div className=\"desvImg\">\r\n              <img\r\n                src={\r\n                  desviaciones.filter(\r\n                    (x) =>\r\n                      x.Id === activeItem.split(\"_\")[0] &&\r\n                      x.SubCategoria === activeItem.split(\"_\")[1]\r\n                  )[0].Imagen === null\r\n                    ? dummy\r\n                    : desviaciones.filter(\r\n                        (x) =>\r\n                          x.Id === activeItem.split(\"_\")[0] &&\r\n                          x.SubCategoria === activeItem.split(\"_\")[1]\r\n                      )[0].Imagen\r\n                }\r\n                alt=\"imagen\"\r\n                width=\"40%\"\r\n              ></img>\r\n            </div>\r\n          )}\r\n          {activeItem && (\r\n            <div className=\"detalleContent\">\r\n              <h4>\r\n                {\r\n                  desviaciones.filter(\r\n                    (x) =>\r\n                      x.Id === activeItem.split(\"_\")[0] &&\r\n                      x.SubCategoria === activeItem.split(\"_\")[1]\r\n                  )[0].Id\r\n                }\r\n              </h4>\r\n              <h5>\r\n                Desviación:{\" \"}\r\n                {\r\n                  desviaciones.filter(\r\n                    (x) =>\r\n                      x.Id === activeItem.split(\"_\")[0] &&\r\n                      x.SubCategoria === activeItem.split(\"_\")[1]\r\n                  )[0].SubCategoria\r\n                }\r\n              </h5>\r\n              <h5>\r\n                Detalle:{\" \"}\r\n                {desviaciones.filter(\r\n                  (x) =>\r\n                    x.Id === activeItem.split(\"_\")[0] &&\r\n                    x.SubCategoria === activeItem.split(\"_\")[1]\r\n                )[0].Detalle === null\r\n                  ? \"Sin Detalle\"\r\n                  : desviaciones.filter(\r\n                      (x) =>\r\n                        x.Id === activeItem.split(\"_\")[0] &&\r\n                        x.SubCategoria === activeItem.split(\"_\")[1]\r\n                    )[0].Detalle}\r\n              </h5>\r\n              {desviaciones.filter(\r\n                (x) =>\r\n                  x.Id === activeItem.split(\"_\")[0] &&\r\n                  x.SubCategoria === activeItem.split(\"_\")[1]\r\n              )[0].PersonasObservadas !== null && (\r\n                <h5>\r\n                  Personas Observadas:{\" \"}\r\n                  {\r\n                    desviaciones.filter(\r\n                      (x) =>\r\n                        x.Id === activeItem.split(\"_\")[0] &&\r\n                        x.SubCategoria === activeItem.split(\"_\")[1]\r\n                    )[0].PersonasObservadas\r\n                  }\r\n                </h5>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"detalle corral\">\r\n          {\r\n            <div id=\"pap_block\" className=\"pap invisible\">\r\n              <form>\r\n                <div className=\"PACname\">\r\n                  <label\r\n                    for=\"papname\"\r\n                    onClick={() => {\r\n                      console.log(\r\n                        desviaciones.filter(\r\n                          (y) =>\r\n                            activeItem.split(\"_\")[0] === y.Id &&\r\n                            activeItem.split(\"_\")[1] === y.SubCategoria\r\n                        )[0],\r\n                        papAreaResp,\r\n                        papDesc,\r\n                        papName\r\n                      );\r\n                    }}\r\n                  >\r\n                    Plan de Acción Preventiva\r\n                  </label>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"papname\"\r\n                  name=\"papname\"\r\n                  placeholder=\"Nombre del Plan..\"\r\n                  onChange={(e) => {\r\n                    setPapName(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <label for=\"papdesc\">Descripción</label>\r\n                <textarea\r\n                  id=\"papdesc\"\r\n                  name=\"papdesc\"\r\n                  placeholder=\"Detalle del Plan..\"\r\n                  onChange={(e) => {\r\n                    setPapDesc(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <label for=\"arearesp\">Area Responsable</label>\r\n                <select\r\n                  id=\"arearesp\"\r\n                  name=\"arearesp\"\r\n                  onChange={(e) => {\r\n                    setPapAreaResp(e.target.value);\r\n                  }}\r\n                >\r\n                  {activeItem &&\r\n                    desviaciones.filter(\r\n                      (y) =>\r\n                        activeItem.split(\"_\")[0] === y.Id &&\r\n                        activeItem.split(\"_\")[1] === y.SubCategoria\r\n                    )[0].AreaResponsable === null && (\r\n                      <option disabled hidden value=\"Seleccionar Area\" selected>\r\n                        Seleccionar Area\r\n                      </option>\r\n                    )}\r\n\r\n                  {grupoArea &&\r\n                    grupoArea\r\n                      .filter((x) => x != \"Todas\")\r\n                      .map((x) => {\r\n                        return x === papAreaResp ? (\r\n                          <option key={\"area\" + x} value={x} selected>\r\n                            {x}\r\n                          </option>\r\n                        ) : (\r\n                          <option key={\"area\" + x} value={x}>\r\n                            {x}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                </select>\r\n              </form>\r\n              <button\r\n                disabled={!papAreaResp || !papName || !papDesc}\r\n                className={\r\n                  !papAreaResp || !papName || !papDesc\r\n                    ? \"submit deshabilitado\"\r\n                    : \"submit\"\r\n                }\r\n                onClick={registrar}\r\n              >\r\n                Asignar\r\n              </button>\r\n            </div>\r\n          }\r\n          {activeItem && <div className=\"pap\"></div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Desviaciones;\r\n","import React, { useState, useContext } from \"react\";\nimport \"./App.css\";\nimport \"./App_extra.css\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Home from \"./Home.js\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport userData from \"./employee.json\";\nimport Add from \"./images/fondo.jpg\";\nimport {\n  Header,\n  Menu,\n  Icon,\n  Modal,\n  Button,\n  Input,\n  Segment,\n  Checkbox,\n  Sidebar,\n  Dropdown,\n  Label,\n} from \"semantic-ui-react\";\nimport Observacion from \"./observacion\";\nimport Tareas from \"./tareas\";\nimport Consultas from \"./consulta\";\nimport Registrar from \"./registrar\";\nimport Categorias from \"./tipos\";\nimport Login from \"./Login\";\nimport Reporte from \"./Reporte\";\nimport { Contexto } from \"./Contexto\";\nimport Perfil from \"./profile\";\nimport Schedule from \"./schedule\";\nimport Recorrido from \"./recorridos\";\nimport ReporteDeTurno from \"./reporteDeTurno\";\nimport Minuta from \"./minuta\";\nimport Dashboard from \"./dashboard\";\nimport Desviaciones from \"./desviaciones\";\n\nfunction App() {\n  let iniciado = null;\n  let caption = \"Sign In\";\n  if (sessionStorage.getItem(\"user\")) {\n    iniciado = sessionStorage.user;\n    caption = \"Sign Out\";\n  } else if (localStorage.getItem(\"user\")) {\n    iniciado = localStorage.user;\n    caption = \"Sign Out\";\n  }\n  const {\n    [\"user\"]: [user, setUser],\n  } = useContext(Contexto);\n  const {\n    [\"pagina\"]: [pagina, setPagina],\n  } = useContext(Contexto);\n  const {\n    [\"width\"]: [width, setWidth],\n  } = useContext(Contexto);\n  const breakpoint = 620;\n  const {\n    [\"areas\"]: [areas, setAreas],\n  } = useContext(Contexto);\n  const [session, setSession] = useState(caption);\n  const [open, setOpen] = React.useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [activeItem, setActiveItem] = useState(\"\");\n  const [recordar, setRecordar] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  };\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userPassword\") {\n      setPassword(value);\n    }\n  };\n\n  const login = (event, password) => {\n    event.preventDefault();\n    var found = false;\n    for (var i = 0; i < userData.length; i++) {\n      if (userData[i].id === password) {\n        found = true;\n        setUser(userData[i].Nombre);\n        sessionStorage.user = userData[i].Nombre;\n        if (recordar) {\n          localStorage.user = userData[i].Nombre;\n        }\n        setSession(\"Sign Out\");\n        break;\n      }\n    }\n    if (!found) alert(`Usuario No encontrado`);\n  };\n\n  React.useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    // Return a function from the effect that removes the event listener\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  return (\n    <Router basename={\"/\"}>\n      <div style={{ padding: \"2%\", backgroundImage: `url(${Add})` }}>\n        <Menu color=\"red\" size=\"huge\">\n          <Menu.Item header as={Link} to=\"/home\">\n            <b style={{ color: \"red\" }}>Mi Cultura QSEB</b>\n          </Menu.Item>\n          {width < breakpoint ? (\n            <Menu.Item position=\"right\">\n              <Icon\n                size=\"large\"\n                name=\"bars\"\n                color=\"red\"\n                onClick={() => {\n                  setVisible(true);\n                }}\n              />\n            </Menu.Item>\n          ) : (\n            <>\n              <Dropdown item text=\"Reportes\">\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    text=\"Reporte de Turno\"\n                    as={Link}\n                    to={user ? \"/Reporte\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/Reporte\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Recorridos\"\n                    as={Link}\n                    to={user ? \"/recorrido\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/recorrido\");\n                      setAreas();\n                    }}\n                  />\n                  <Dropdown.Item\n                    text=\"Programar Recorridos\"\n                    as={Link}\n                    to={user ? \"/programar\" : \"/Login\"}\n                    onClick={() => {\n                      setPagina(\"/programar\");\n                    }}\n                  />\n                  <Dropdown.Item text=\"Actos Inseguros\" />\n                  <Dropdown.Item text=\"Condiciones Inseguras\" />\n                </Dropdown.Menu>\n              </Dropdown>\n              <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n              <Menu.Item position=\"right\">\n                {user ? (\n                  //<Icon\n                  //  size=\"large\"\n                  // name=\"user circle\"\n                  //  color={user ? \"green\" : \"black\"}\n                  //>\n                  <Button\n                    icon=\"user \"\n                    color=\"green\"\n                    circular\n                    as={Link}\n                    to=\"/perfil\"\n                  />\n                ) : (\n                  <Button\n                    content=\"Iniciar Sesion\"\n                    style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                    as=\"a\"\n                    href=\"/Login\"\n                  />\n                )}\n              </Menu.Item>\n            </>\n          )}\n        </Menu>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            onHide={() => setVisible(false)}\n            vertical\n            direction=\"right\"\n            visible={visible}\n            width=\"wide\"\n            color=\"red\"\n          >\n            <Menu.Item\n              name=\"Reporte\"\n              as={Link}\n              to={user ? \"/Reporte\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/Reporte\");\n                setAreas();\n              }}\n            >\n              Reporte de Turno\n            </Menu.Item>\n            <Menu.Item\n              name=\"Recorridos\"\n              as={Link}\n              to={user ? \"/recorrido\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/recorrido\");\n                setAreas();\n              }}\n            >\n              Recorridos\n            </Menu.Item>\n            <Menu.Item\n              name=\"ProgramarRecorridos\"\n              as={Link}\n              to={user ? \"/programar\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n                setPagina(\"/programar\");\n              }}\n            >\n              Programar Recorridos\n            </Menu.Item>\n            <Menu.Item name=\"ActosI\">Actos Inseguros</Menu.Item>\n            <Menu.Item name=\"CondicionesI\">Condiciones Inseguras</Menu.Item>\n            <Menu.Item name=\"Noticias\">Noticias</Menu.Item>\n            {user && user.includes(\"Cheung\") && (\n              <Menu.Item\n                name=\"Minutas\"\n                as={Link}\n                to={user ? \"/minutas\" : \"/Login\"}\n                onClick={() => {\n                  setVisible(false);\n                  setPagina(\"/minutas\");\n                }}\n              >\n                Minutas\n              </Menu.Item>\n            )}\n            <Menu.Item\n              name=\"Perfil\"\n              as={Link}\n              to={user ? \"/perfil\" : \"/Login\"}\n              onClick={() => {\n                setVisible(false);\n              }}\n            >\n              {user ? (\n                user\n              ) : (\n                <Button\n                  content=\"Iniciar Sesion\"\n                  style={{ backgroundColor: \"#F44336\", color: \"white\" }}\n                  as={Link}\n                  onClick={() => {\n                    setVisible(false);\n                  }}\n                  to=\"/Login\"\n                />\n              )}\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher>\n            <Segment\n              style={{\n                backgroundColor: \"whitesmoke\",\n                height: \"90vh\",\n                overflowY: \"auto\",\n              }}\n            >\n              <Switch>\n                <Route\n                  exact\n                  path=\"/home\"\n                  render={(props) => <Home {...props} user={user} />}\n                />\n                <Route\n                  path=\"/registros\"\n                  render={(props) => <Registrar {...props} user={user} />}\n                />\n                <Route\n                  path=\"/tareas\"\n                  render={(props) => <Tareas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observaciones\"\n                  render={(props) => <Consultas {...props} user={user} />}\n                />\n                <Route\n                  path=\"/observacion/:id\"\n                  render={(props) => <Observacion {...props} user={user} />}\n                />\n                <Route\n                  path=\"/Login\"\n                  render={(props) => <Login {...props} user={user} />}\n                />\n                <Route\n                  path=\"/reporte\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/recorrido\"\n                  render={(props) => <ReporteDeTurno {...props} user={user} />}\n                />\n                <Route\n                  path=\"/perfil\"\n                  render={(props) => <Perfil {...props} user={user} />}\n                />\n                <Route\n                  path=\"/desviaciones\"\n                  render={(props) => <Desviaciones {...props} user={user} />}\n                />\n                <Route\n                  path=\"/minutas\"\n                  render={(props) => <Minuta {...props} user={user} />}\n                />\n                <Route\n                  path=\"/programar\"\n                  render={(props) => <Schedule {...props} user={user} />}\n                />\n                <Route\n                  path=\"/\"\n                  //render={(props) => <Home {...props} user={user} />}\n                  render={(props) => <Home {...props} user={user} />}\n                />\n              </Switch>\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ContextoProvider from \"./Contexto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextoProvider>\n      <App />\n    </ContextoProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}